<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: cryptoModel.xml,v 1.36 2005/04/14 17:21:13 mheiges Exp $ -->

<!DOCTYPE xml [
  <!ENTITY nbsp "&#160;"> 
  <!ENTITY lt   "&#60;"> 
  <!ENTITY gt   "&#62;">
]>

<?oxygen RNGSchema="wdkModel.rng" type="xml"?>
<wdkModel name="CryptoDB" displayName="CryptoDB" version="3.4">


<!-- ******************* -->
<!-- model introduction  -->
<!-- ******************* -->
<introduction>
    <![CDATA[
     <font size="-1">
    This site uses the <b>WDK 1.13</b> and the <b>cryptoB</b> instance on <b>pitaya</b>. 
    CryptoDB provides access to the
    genome sequence of <i>C. parvum</i> and <i>C.hominis</i> isolates
    generated at University of Minnesota and Virginia Commonwealth 
    University/Tufts University School of Veterinary Medicine as well 
    as additional <i>Cryptosporidium</i> 
    data from various other sources.</font>
          ]]>
</introduction>

<!-- ************ -->
<!-- questionSets -->
<!-- ************ -->

<!-- 
A question is "a query that returns a list of records."  (Regular queries 
return columns and rows.)  They are formed by pairing a query with a
record class.  The query must be one that returns one column containing
a list of primary keys.  The record class must be one that expects as
a primary key the type of key returned by the query.

A question set is a grouping of questions.  It may be used in the
user interface to present the enclosed questions in one choice box.  
-->


<!-- questions that return EST records -->
<questionSet name="EstQuestions"
             displayName="Find ESTs by">

    <description>
      Find ESTs
    </description>
    
   <question name="EstsByLocation"
              category="Genomic Position"
              displayName="Chromosomal Location"
              queryRef="EstIds.EstsByLocation"
              summaryAttributesList="organism"
              recordClassRef="EstRecordClasses.EstRecordClass">
             <summary>
                 Find ESTs that are located in a specified region.
             </summary>
             <description>
                 <![CDATA[
                 Find ESTs within a given <i>C. parvum</i> genomic region.<br>
                 Enter the name of a contig (e.g.
                 "AAEE01000007"). The Start and End locations correspond to the
                 coordinates of the ESTs on the chromosome.
                 ]]>
            </description>
    </question>


    <!-- EstQuestions.EstsByLibrary -->
    <question name="EstsByLibrary"
              category="Transcript Expression"
              displayName="EST by library"
              queryRef="EstIds.EstsByLibrary" 
              summaryAttributesList="dbest_name,organism"
              recordClassRef="EstRecordClasses.EstRecordClass">
        <description>Find ESTs by Library Name</description>
    </question>

    <!-- EstQuestions.EstsWithGeneOverlap -->
    <question name="EstsWithGeneOverlap" 
         displayName="ESTs by Extent of Gene Overlap"
              queryRef="EstIds.EstsWithGeneOverlap" 
              summaryAttributesList="dbest_name,organism"
              recordClassRef="EstRecordClasses.EstRecordClass">
        <description>Find ESTs that Overlap a Gene in &lt;i&gt;C. parvum&lt;/i&gt;. (individual ESTs 
        were not a aligned to the &lt;i&gt;C. hominis&lt;/i&gt; genome.)</description>
    </question>

<question name="EstsBySimilarity"
         displayName="ESTs by BLAST Similarity"
         queryRef="EstIds.EstsBySimilarity"
         summaryAttributesList="Header,TabularRow,Alignment,Footer"
         recordClassRef="EstRecordClasses.EstRecordClass">
         <description>
           <![CDATA[
             This query finds <b>ESTs</b> with BLAST matches to an input sequence.  The <a href="http://blast.wustl.edu/" target="_blank">WU BLAST</a> program is used to search against coding nucleotide (CDS) or  protein
sequence from annotatated gene models.]]>
         </description>

         <dynamicAttributes>
             <columnAttribute name="TabularRow" displayName="Blast summary"
                              inReportMaker="false"/>
             <columnAttribute name="Alignment" displayName="Blast alignment"
                              inReportMaker="false"/>
             <columnAttribute name="Header" displayName="Blast header"
                              inReportMaker="false"/>
             <columnAttribute name="Footer" displayName="Blast footer"
                              inReportMaker="false"/>
         </dynamicAttributes>
    </question>



</questionSet>


<!-- questions that return Gene records -->
<!-- ORDERED Nov 2, 2006  ***************************************************** -->

<questionSet name="GeneQuestions"
             displayName="Find Genes by">

    <description>
      Find Genes
    </description>
    

     <question name="GeneByLocusTag"
         category="Other Attributes"
         displayName="List of IDs"
              queryRef="GeneFeatureIds.GeneByLocusTag"
              summaryAttributesList="organism,location_text,product,gene_type"
              sortingAttributesList="organism asc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
        <summary>
           Find genes by a list of IDs.
        </summary>
        <description>
           <![CDATA[
           Find genes by providing a list of IDs (Genbank locus tag). 
           User can either enter the ID list manually, or upload a file that contains the list. 
           IDs can be delimited by a comma, a semi colon, or any white spaces.
           The search is case
           insensitive. Asterisks can be used as wild cards (e.g. ' cgd6_* ').
          ]]>
        </description>
    </question>

    <question name="GeneBySingleLocusTag" 
              category="Other Attributes"
              displayName="ID"
              queryRef="GeneFeatureIds.GeneBySingleLocusTag" 
              summaryAttributesList="organism,location_text,product,gene_type"
              sortingAttributesList="organism asc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
             <summary>
                Find a gene by its Genbank locus tag ID. 
             </summary>
              <description>
              <![CDATA[
              Find a gene by its Genbank locus tag ID. 
              The search is case insensitive. 
              Wild card searches, e.g. 'cgd6*', are permitted.
              ]]>
              </description>
    </question>


 <question name="GenesByTextSearch"
              category="Other Attributes"
              displayName="Keyword (search product name, notes, etc.)"
              queryRef="GeneFeatureIds.GenesByAnnotatedKeyword" 
              summaryAttributesList="organism,location_text,product,Fields"
              sortingAttributesList="organism asc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
                  Find genes with a text search against text annotations: product description, Notes, GO, EC, Domains, NRDB, or metabolic pathways.
                  Find genes associated with given text.
              </summary>
              <description>
              <![CDATA[
              Find genes by searching text annotations. The search is case insensitive, for example both 'ACTIN' and 'actin' will work. The fields must contain your text exactly. Use '*' as a wildcard. The wildcard can span several words. For example: "red*ase" will find "reductase" and "predicted lactate dehydrogenase".
              ]]>
             </description>
        <dynamicAttributes>
            <columnAttribute name="Fields"
                       displayName="Found in" align="center"/>
        </dynamicAttributes>

    </question>

<question name="GenesByTaxon"
         category="General"
         displayName="Species"
              queryRef="GeneFeatureIds.GenesByTaxon"
              summaryAttributesList="organism,location_text,product"
              sortingAttributesList="organism asc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
        <summary>
            Find genes from one or more Cryptosporidium species.
        </summary>
        <description>
           <![CDATA[
            Find genes from one or more Cryptosporidium species.
          ]]>
        </description>
    </question>
    

<question name="GenesByOrthologPattern"
         category="Evolution"
         displayName="Orthology Profile"
         queryRef="GeneFeatureIds.GenesByOrthologPattern"
         summaryAttributesList="organism,location_text,product"
         sortingAttributesList="organism asc, location_text asc"
         recordClassRef="GeneRecordClasses.GeneRecordClass">
         <summary>
         Find genes that have a specified orthology-based phylogenetic profile. 
         </summary>
         <description>
         <![CDATA[
            Find genes that have a specified orthology-based phylogenetic profile. The phylogenetic profile of a gene is a series of 87 "present" or "absent" calls, reflecting the presence or absence of a putative ortholog in 87 genomes.
         <br><br>
         
         An <a href="http://orthomcl.cbil.upenn.edu/cgi-bin/OrthoMclWeb.cgi">OrthoMCL</a> analysis of the proteins of 87 species, including Cryptosporidia, placed each protein in an ortholog group. From a <i>Cryptosporidium</i> gene perspective, the other species that are included in that gene's ortholog group can be thought of as a phylogenetic profile.
         <br><br>
         Use this query to define a pattern
         across those ortholog groups, and find genes that match that pattern.  The pattern is a 
         specification, for each species, of "include", "exclude", or "don't care."  Click on the
         radio button next to a species to toggle through the three states.  (A 
         <img src="images/yes.gif" alt="include"> means
         "include", an <img src="images/no.gif" alt="exclude"> means "exclude" 
         and <img src="images/dc.gif" alt="don't care"> means "don't care".)   
         <br> <br>
         For example, to find genes
         that are present in Apicomplexa but not in humans, click on Apicomplexa until you see
         a <img src="images/yes.gif" alt="include"> and click on <i>Homo
         sapiens</i> until you see an
         <img src="images/no.gif" alt="exclude">.
         <br> <br>
         Note that this query can take some time because of the large number
         of combinations of possible presence/absence calls.
         ]]>
         </description>
    </question>

 <question name="GenesByGeneType"
              category="Gene Attributes"
              displayName="Type (e.g. rRNA, tRNA)"
              queryRef="GeneFeatureIds.GenesByGeneType" 
               summaryAttributesList="organism,location_text,product,is_pseudo"
              sortingAttributesList="organism asc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find genes by type (eg, protein coding, tRNA, rRNA, etc).
              </summary>
              <description>
              <![CDATA[
              Find genes by type (eg, protein coding, tRNA, rRNA, etc).
              <br><br>
              Gene type assignments are determined by the gene annotators.
              ]]>
             </description>
             <dynamicAttributes>
                  <columnAttribute name="is_pseudo" displayName="Pseudogene" align="center"/>
             </dynamicAttributes>
    </question>


    <!-- GeneQuestions.GenesByMassSpec -->
    <question name="GenesByMassSpec"
              category="Protein Expression"
              displayName="Mass Spec. Evidence"
              queryRef="GeneFeatureIds.GenesByMassSpec" 
              summaryAttributesList="location_text,product,sum_sequence_count,sum_spectrum_count"
              sortingAttributesList="sum_sequence_count desc,sum_spectrum_count desc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find &lt;i&gt;Cryptosporidium&lt;/i&gt; genes that have evidence of expression 
             based on peptides identified in sporozoites by MS/MS analysis.
              </summary>
              <description>
              <![CDATA[
             <p>
             Find <i>Cryptosporidium</i> genes that have evidence of expression 
             based on peptides identified by MS/MS analysis in a <i>C. parvum</i> sporozoite excystation or non-excystation mixture. Some contaiminating oocyst proteins may also be in the mixture. See below for additional information.<p>
             <p>See the related <a href="showQuestion.do?questionFullName=OrfQuestions.OrfsByMassSpec"><b>ORFs with Mass Spec. Evidence</b></a> query to find genomic open reading frames which have mapped MS/MS peptides 
             that do not correspond to current gene models.
             <hr>
             <sup>&#182;</sup>
   <%-- description by J. Wastling --%>
<i> S.J. Sanderson, D. Xia, H. Prieto, J. Yates, M. Heiges. J. Kissinger & J.M. Wastling (submitted). <b>Contact: Jonathan Wastling for details (<a href="mailto:j.wastling@liv.ac.uk">j.wastling@liv.ac.uk</a>)</b></i>.
<br>
Mass spectrometry data were obtained from two-dimensional gel 
electrophoretic protein separations, one-dimensional gel LC-MS/MS and 
MudPIT analysis of a sporozoite/oocyst excystation mixture of 
<i>Cryptosporidium parvum</i>.  A total of approximately 3,500 protein 
hits were obtained resulting in 1,252 non-redundant protein identifications.  
In addition a further 100 hits were obtained to sequences which matched a 
predicted open reading frame, but for which no gene model currently exists.  
In total these protein identifications represent nearly one third of the 
entire predicted proteome of <i>C. parvum</i>, although it is unlikely 
that the entire proteome from all life-stages will be expressed at any 
one time.

             <br><br>
             <sup>&#167;</sup> <i>
             William J. Snelling<sup>1</sup>, Qishan Lin<sup>2</sup>, 
             John E. Moore<sup>3</sup>, B. Cherie Millar<sup>3</sup>, 
             Fabio Tosini<sup>4</sup>, Edoardo Pozio<sup>4</sup>, 
             James S.G. Dooley<sup>1</sup>, and Colm J. Lowery<sup>1</sup><br> 
             <sup>1</sup>Centre for Molecular Biosciences, School of Biomedical 
             Sciences, University of Ulster, Cromore Road, Coleraine, County 
             Londonderry, N. Ireland, BT52 1SA. <sup>2</sup>UAlbany Proteomics 
             Facility, Centre for Functional Genomics, University of Albany, 
             One Discovery Drive, Rensselaer, NY 12144. <sup>3</sup>Northern 
             Ireland Public Health Laboratory, Department of Bacteriology, 
             Belfast City Hospital, Belfast, N. Ireland, BT9 7AD. 
             <sup>4</sup>Department of Infectious, Parasitic, and Immunomediated 
             Diseases, Istituto Superiore di Sanit&#224;, Rome, Italy.<br> 
             <a href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&db=pubmed&dopt=Abstract&list_uids=17124246"> Proteomics analysis and protein expression during sporozoite excystation of Cryptosporidium parvum (Coccidia, Apicomplexa). Mol. Cell Proteomics 2007 Feb;6(2):346-55 </a>
             ]]>
             </description>
             <dynamicAttributes>
                  <columnAttribute name="sum_sequence_count" displayName="Number of Peptide Sequences" align="center"/>
                  <columnAttribute name="sum_spectrum_count" displayName="Number of Spectra" align="center"/>
             </dynamicAttributes>
    </question>

    <!-- GeneQuestions.GenesByESTOverlap -->
    <question name="GenesByESTOverlap" 
              category="Transcript Expression"
              displayName="EST Evidence"
              queryRef="GeneFeatureIds.GenesByESTOverlap" 
              summaryAttributesList="product,organism,sequence_id"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              <![CDATA[
              Find <i>C. parvum</i> genes having overlap with an Expressed sequence tag (EST).
              ]]>
              </summary>
              <description>
              <![CDATA[
              Find <i>C. parvum</i> genes having overlap with an Expressed sequence tag (EST).<p>
              EST overlap with an annotated gene is a useful way to verify gene predictions.  
              Ideally we would have EST sequences for each gene prediction, but this is not 
              the case in <i> Cryptosporidium </i> . There are only a total of 567 ESTs 
              for <i>Cryptosporidium</i> and these ESTs represent even fewer genes 
              because of redundancy.  Useful lengths of sequence overlap between an 
              EST sequence and a predicted gene sequence are usually 50nt or greater. 
              <i>C. parvum</i> ESTs were clustered against the <i>C. parvum</i> genome 
              and the cluster consensus sequences are available via the graphical genome
              browser on the gene record pages.
              Genes from the MRC-LMB sequencing of chromosome 6 are not included at 
              this time.
              ]]>
              </description>
        <dynamicAttributes>
             <columnAttribute name="number_of_ests" displayName="Number of ESTs"
                              inReportMaker="false"/>
        </dynamicAttributes>
    </question>
    
    <!-- GeneQuestions.GenesByMetabolicPathway with placeholder queryRef -->
    <question name="GenesByMetabolicPathway" 
              category="Putative Function"
              displayName="Metabolic Pathways"
              queryRef="GeneFeatureIds.GenesByESTClusterOverlap" 
              summaryAttributesList="product,organism,sequence_id"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
                Find genes involved in a specific metabolic pathway. 
              </summary>
              <description>
              <![CDATA[
                Maps of metabolic pathways were computationally constructed for <i>C. parvum</i>
                and <i>C. hominis</i> with 
                the <a href="http://bioinformatics.oxfordjournals.org/cgi/content/abstract/18/suppl_1/S225">Pathway Tools</a> software package.
                ]]>
              </description>
    </question>
    
    <!-- GeneQuestions.GenesByEcNumber -->
    <question name="GenesByEcNumber"
              category="Putative Function"
              displayName="EC Number"
              queryRef="GeneFeatureIds.GenesByEcNumber"
              summaryAttributesList="organism,product"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              <![CDATA[
              Find <i>Cryptosporidium</i> genes by assigned Enzyme Commission (EC) number.        
              ]]>
              </summary>
              <description>
              <![CDATA[
              Find <i>Cryptosporidium</i> genes that have been assigned a particular Enzyme Commission (EC) number. 
              Use '-' in place of numbers to denote partial EC Numbers, for example, '2.7.7.-'. <p>
              E.C. numbers have been assigned to <i>Cryptosporidium</i> genes by the genome annotation centers, KEGG and CryptoCyc.     
              ]]>
              </description>
    </question>

    <!-- GeneQuestions.GenesByGoTerm -->
 <question name="GenesByGoTerm"
              category="Putative Function"
              displayName="GO Term"
              queryRef="GeneFeatureIds.GenesByGoTerm"
              summaryAttributesList="organism,product"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find genes by Gene Ontology (GO) term for molecular function, biological process or subcellular localization. 
              </summary>
              <description>
              <![CDATA[
              Find genes by Gene Ontology (GO) term for molecular function,
              biological process or subcellular localization. The search finds
              genes with the GO term you specify and genes with terms that are
              specializations of your term (is-a). For a list of GO terms, we
              suggest using the 
              <a href="http://www.godatabase.org/cgi-bin/amigo/go.cgi">AmiGO</a>
              browser. For GO IDs, include the GO prefix as in "GO:0003824."
              <p>
              GO terms were assigned by the annotation centers and by Interpro2GO mapping.
             ]]>
            </description>
    </question>
    
    <!-- GeneQuestions.GenesByInterproDomain -->
    <question name="GenesByInterproDomain"
              category="Similarity/Pattern"
              displayName="InterPro/Pfam Domain"
              queryRef="GeneFeatureIds.GenesByPfamDomain"
              summaryAttributesList="organism,location_text,product,e_value"
              sortingAttributesList="organism asc,e_value asc, location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
               Find genes containing a given Pfam domain, family or repeat.
              </summary>
              <description><![CDATA[
              Find genes which have been determined by the InterProScan program to 
              contain a given domain from one of the domain databases which together 
              compose the InterPro database.
              ]]>
              </description>

        <dynamicAttributes>
	     <columnAttribute name="e_value" displayName="Score / E value" align="center"/> 
	</dynamicAttributes>
    </question>
    
    <question name="GenesByMotifSearch"
         category="Similarity/Pattern"
         displayName="Protein Motif"
         queryRef="GeneFeatureIds.GenesByMotifSearch"
         summaryAttributesList="organism,location_text,product,Locations,MatchCount,Sequence"
         sortingAttributesList="organism asc,MatchCount desc,location_text asc"
         recordClassRef="GeneRecordClasses.GeneRecordClass">
         <summary>
             Find genes whose protein product contains a motif pattern that you specify, e.g. "two cysteines followed by 2 or 3 charged residues and a hydrophobic stretch of 6-8 amino acids".                                          
         </summary>
         <description>
           <![CDATA[
             Find genes whose protein product contains a motif pattern that 
             you specify., e.g. "two cysteines followed by 2 or 3 charged
             residues and a hydrophobic stretch of 6-8 amino acids".  The
             pattern need not be well conserved. If you can describe it in
             words, you can probably use this tool to create an "expression"
             that can search other proteins for similar patterns.                                          
                                            
             <br><br>
             Specify the pattern with a (Perl style) "regular expression".  
             (Regular 
             expressions are more powerful than PROSITE patterns.)
             For a description of how to create regular expressions,
             please see the <a href="regexp.jsp">Regular Expression Tutorial</a>.
             <br><br>

             The following codes can be used to represent classes of amino acids.
             <table border columns=3>
                   <TR>
                      <TD><B>AA property</B>
                      </TD>
                      <TD><B>Amino acids</B>
                      </TD>
                      <TD><B>Code</B>
                      </TD>
                   </TR>

                   <TR>
                      <TD>
                      <B>Acidic</B>
                      </TD>
                      <TD><B>DE</B>
                      </TD>
                      <TD><B>0</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Alcohol</B>
                      </TD>
                      <TD><B>ST</B>
                      </TD>
                      <TD><B>1</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Aliphatic</B>
                      </TD>
                      <TD><B>ILV</B>
                      </TD>
                      <TD><B>2</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Aromatic</B>
                      </TD>
                      <TD><B>FHWY</B>
                      </TD>
                      <TD><B>3</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Basic</B>
                      </TD>
                      <TD><B>KRH</B>
                      </TD>
                      <TD><B>4</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Charged</B>
                      </TD>
                      <TD><B>DEHKR</B>
                      </TD>
                      <TD><B>5</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Hydrophobic</B>
                      </TD>
                      <TD><B>AVILMFYW</B>
                      </TD>
                      <TD><B>6</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Hydrophilic</B>
                      </TD>
                      <TD><B>KRHDENQ</B>
                      </TD>
                      <TD><B>7</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Polar</B>
                      </TD>
                      <TD><B>CDEHKNQRST</B>
                      </TD>
                      <TD><B>8</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Small</B>
                      </TD>
                      <TD><B>ACDGNPSTV</B>
                      </TD>
                      <TD><B>9</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Tiny</B>
                      </TD>
                      <TD><B>AGS</B>
                      </TD>
                      <TD><B>B</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Turnlike</B>
                      </TD>
                      <TD><B>ACDEGHKNQRST</B>
                      </TD>
                      <TD><B>Z</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Any</B>
                      </TD>
                      <TD><b>ACDEFGHIKLM<br>
                             NPQRSTVWY</b>
                      </TD>
                      <TD><B>.</B>
                      </TD>
                   </TR>
                   </table>
          ]]>
         </description>
         <dynamicAttributes>
           <columnAttribute name="Locations" displayName="Match Locations" align="center"/>
           <columnAttribute name="MatchCount" displayName="Match Count"  align="center"/>
           <columnAttribute name="Sequence" inReportMaker="false" truncateTo="4000"/>
         </dynamicAttributes>
    </question>
   
   
   
    <question name="GenesWithSignalPeptide"
              category="Cellular Location"
              displayName="Signal Peptide"
              queryRef="GeneFeatureIds.GenesWithSignalPeptide" 
         summaryAttributesList="organism,location_text,product,sigp_sum_score"
         sortingAttributesList="organism asc,sigp_sum_score desc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find genes that are predicted to encode a signal peptide.  
              </summary>
              <description>
              <![CDATA[
              Find genes that are predicted to have a signal peptide.
              <p>
              The predictions are made with the <a href="http://www.cbs.dtu.dk/services/SignalP/">SignalP program</a>.        
              ]]>
              </description>
 <dynamicAttributes>
             <columnAttribute name="sigp_sum_score" displayName="Summary score" align="center"
                              inReportMaker="false"/>
         </dynamicAttributes>
    </question>

    
    
    <question name="GenesByTransmembraneDomains" 
              category="Cellular Location"
              displayName="Transmembrane Domain"
              queryRef="GeneFeatureIds.GenesByTransmembraneDomains" 
              summaryAttributesList="product,organism,sequence_id,tm_count"
              sortingAttributesList="organism asc,tm_count asc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find genes with at least a given number of transmembrane domains.
              </summary>
              <description>
              <![CDATA[
              Find genes with at least a given number of transmembrane domains.
              <br><br>
              Transmembrane domains were predicted using TMHMM2.
              ]]>
              </description>
    </question>
    

    <question name="GenesWithEpitopes" 
              category="Other Attributes"
              displayName="Epitope Presence"
              queryRef="GeneFeatureIds.GenesWithEpitopes" 
              summaryAttributesList="product,confidence,organism,sequence_id"
              sortingAttributesList="organism desc, count desc, confidence asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
             <summary>
              <![CDATA[
                Find <i>C. parvum</i> genes whose encoding protein has an epitope identified 
                by the <a href="http://www.immuneepitope.org">Immune Epitope Database and Analysis Resource</a>. 
              ]]>
             </summary>
              <description>
              <![CDATA[
                Find <i>C. parvum</i> genes whose encoding protein has an epitope identified 
                by the <a href="http://www.immuneepitope.org">Immune 
                Epitope Database and Analysis Resource</a><sup>1</sup> (IEDB). <br>
                The epitopes have been remapped from the original Epitope Source Accession Number 
                provided by IEDB to the corresponding gene identifiers used in CryptoDB. 
                <p><hr><p>
                <font size='-1'>
                <sup>1</sup>Peters B, Sidney J, Bourne P, Bui HH, Buus S, Doh G, Fleri W, 
                Kronenberg M, Kubo R, Lund O, Nemazee D, Ponomarenko JV, Sathiamurthy M, Schoenberger S, 
                Stewart S, Surko P, Way S, Wilson S, Sette A. 
                <a href="http://biology.plosjournals.org/perlserv/?request=get-document&amp;doi=10.1371/journal.pbio.0030091">
                The immune epitope database and analysis resource: from vision to blueprint. 
                PLoS Biol. 2005 Mar;3(3):e91</a>
                <p>
                </font>
              ]]>
              </description>
             <dynamicAttributes>
                 <columnAttribute name="count" displayName="Epitope Count" align="center"/>
                 <columnAttribute name="confidence" displayName="Confidence" align="center"/>
             </dynamicAttributes>
    </question>

    <question name="GenesByMolecularWeight" 
              category="Predicted Proteins"
              displayName="Molecular Weight"
              queryRef="GeneFeatureIds.GenesByMolecularWeight" 
         summaryAttributesList="organism,location_text,product,molecular_weight"
         sortingAttributesList="organism asc,molecular_weight asc, location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find genes whose unmodified protein product has a molecular weight in a range that you specify.
              </summary>
              <description>Find genes whose proteins are within a molecular weight range. Molecular weights are 
              machine calculated from the raw translation and does not take into account any protein or residue 
              modifications. For translations
              containing ambiguous amino acid codes (B, Z, X) we calculate the upper bound of the molecular weight.
              </description>
    </question>
    
    
    

<question name="GenesBySimilarity"
          category="Similarity/Pattern"
          displayName="BLAST Similarity"
          queryRef="GeneFeatureIds.GenesBySimilarity"
          summaryAttributesList="Header,TabularRow,Alignment,Footer"
          recordClassRef="GeneRecordClasses.GeneRecordClass">
          <summary>
            Find genes that have BLAST similarity to your input sequence.
          </summary>
          <description>
            <![CDATA[
              Find genes that have BLAST similarity to your input sequence.
              The search uses <a href="http://blast.wustl.edu/">WU BLAST</a>.
           ]]>
          </description>

          <dynamicAttributes>
              <columnAttribute name="TabularRow" displayName="Blast summary"
                               inReportMaker="false"/>
              <columnAttribute name="Alignment" displayName="Blast alignment"
                               inReportMaker="false"/>
              <columnAttribute name="Header" displayName="Blast header"
                               inReportMaker="false"/>
              <columnAttribute name="Footer" displayName="Blast footer"
                               inReportMaker="false"/>
          </dynamicAttributes>
    </question>


<question name="GenesByLocation"
              category="Genomic Position"
              displayName="Chromosomal Location"
              queryRef="GeneFeatureIds.GenesByLocation"
         summaryAttributesList="location_text,product"
         sortingAttributesList="location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
             <summary>
                 Find genes that are located in a specified genomic region.
             </summary>
             <description>
                 <![CDATA[
                 Find genes within a given genomic region.<br>
                 Enter the name of a contig (e.g.
                 "AAEL01000057"). The Start and End locations correspond to the
                 coordinates of the gene(s) on the chromosome.
                 ]]>
            </description>
    </question>

    <question name="GenesByExonCount" 
              category="Gene Attributes"
              displayName="Exon/Intron Structure"
              queryRef="GeneFeatureIds.GenesByExonCount" 
              summaryAttributesList="organism,location_text,product,exon_count"
              sortingAttributesList="organism asc,exon_count desc,location_text asc"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
              <summary>
              Find genes having at least the given number of exons.
              </summary>
              <description>
              <![CDATA[
              Find genes having at least the given number of exons.
              <p>              
              Exon numbers are based on gene model annotations.
              ]]>
              </description>
    </question>


</questionSet>    


<!-- questions for internal use -->
<questionSet name="InternalQuestions"
             displayName="Internal Questions"
             internal="yes">
    <!-- InternalQuestions.GenesByMassSpecEvidence -->
    <!-- This is a dummy question, not meant to be used directly.
         The InternalQuestions.GenesByMassSpecEvidence.jsp page
          redirects to showQuestion.do?questionFullName=GeneQuestions.GenesByMassSpec.
          This is for compatibility with the unified query grid and plasmo's
          need to handle multiple MS questions.
      -->
    <question name="GenesByMassSpecEvidence" displayName="Mass spectrometry evidence"
              queryRef="GeneFeatureIds.GenesByTaxon"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
                            <summary>
              Find &lt;i&gt;C. parvum&lt;/i&gt; genes that have evidence of expression 
             based on peptides identified in sporozoites by MS/MS analysis.
              </summary>
        <description>
        </description>
    </question>


<!-- Question for the SRT Page -->

 <question name="SRT" displayName="Sequence Retrieval Tool"
              queryRef="InternalQuery.SRT"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
        <description>
        </description>
 </question>

<!-- END SRT Question -->




   <question name="GenesByOrthologs"
         displayName="Genes Orthologous to Genes in a Query Result"
              queryRef="GeneFeatureIds.GenesByOrthologs"
              summaryAttributesList="organism,product"
              recordClassRef="GeneRecordClasses.GeneRecordClass">
        <description>
           <![CDATA[
Find the Crypto genes that are paralogs of the genes in a Query History result.  

The typical use of this query starts by having an interesting set of genes in a result. Then, from the result or from the Query History, click on the "Orthologs" link to come here. Here you can find orthologs of those genes in the less well-annotated species.  In general, use this query to transform sets of genes from one species to others.<br>Ortholog groups were generated from 61 species using OrthoMCL as described in   Li L, Stoeckert CJ Jr, Roos DS. OrthoMCL: identification of ortholog groups for eukaryotic genomes. Genome Res. 2003 13:2178-89. These species include the 55 used to generate orthologs groups at the <a href="http://orthomcl.cbil.upenn.edu/cgi-bin/OrthoMclWeb.cgi">OrthoMCL DB site</a> plus <i>P. vivax, Leishmania major, T. brucei, T. cruzi, Apis mellifera</i> (honeybee) and <i>S. purpatus</i> (sea urchin).  The OrthoMCL DB site is described in Feng et al. Nucleic Acids Res. 2006 Database Issue.
          ]]>
        </description>
    </question>



<question name="UnifiedBlast"
         displayName="BLAST"
         queryRef="EstIds.UnifiedBlast"
         summaryAttributesList="organism,Header,TabularRow,Alignment,Footer"
         recordClassRef="EstRecordClasses.EstRecordClass">
         <summary>
           <![CDATA[
             Search any CryptoDB dataset by BLAST similarity to your input
             sequence.
            ]]>
        </summary>
         <description>
           <![CDATA[
             Find genes, genomic sequences, ESTs, or ORFs that have BLAST
             similarity to your input sequence.
             <p>
             (<b>Note:</b> not all species have Genes or ESTs available.)
             <p>The search uses
             <a href="http://blast.wustl.edu/">WU BLAST</a>.
             <p><b>Note:</b> If you get <b>0 Results</b> it may be because
             not all <i>Targets</i> are available for all
             Cryptosporidium species.
          ]]>
         </description>
         <dynamicAttributes>
             <columnAttribute name="TabularRow" displayName="BLAST summary"
                              inReportMaker="false"/>
             <columnAttribute name="Alignment" displayName="BLAST alignment"
                              inReportMaker="false"/>
             <columnAttribute name="Header" displayName="BLAST header"
                              inReportMaker="false"/>
             <columnAttribute name="Footer" displayName="BLAST footer"
                              inReportMaker="false"/>
         </dynamicAttributes>
    </question>





</questionSet>




<!-- SRT Query -->
<querySet name="InternalQuery">
<wsQuery name="SRT" displayName="Sequence Retrieval Tool" processName="none">
   <paramRef ref="SrtParams.genes_ids"/>
   <paramRef ref="SrtParams.contigs_ids"/>
   <paramRef ref="SrtParams.orfs_ids"/>
   <wsColumn name="source_id"/>
</wsQuery>
</querySet>
<!-- End SRT Query-->

<!-- questions that return Orf records -->
<questionSet name="OrfQuestions"
             displayName="Find Orfs by">

    <description>
      Find ORFs
    </description>

 <question name="OrfsByLocation"
              category="Genomic Position"
              displayName="Chromosomal Location"
              queryRef="OrfIds.OrfsByLocation"
              summaryAttributesList="organism"
              recordClassRef="OrfRecordClasses.OrfRecordClass">
             <summary>
                 Find Orfs that are located in a specified region.
             </summary>
             <description>
                 <![CDATA[
                 Find genes within a given genomic region.<br>
                 Enter the name of a contig (e.g.
                 "AAEL01000057"). The Start and End locations correspond to the
                 coordinates of the gene(s) on the chromosome.
                 ]]>
            </description>
    </question>

 <question name="OrfByOrfId" 
              displayName="Orfs by ID"
              queryRef="OrfIds.OrfsBySourceId" 
              summaryAttributesList="organism"
              recordClassRef="OrfRecordClasses.OrfRecordClass">
             <summary>
             Find Orfs by Source Id.
             </summary>
             <description>
             <![CDATA[
             Find Orfs by Source Id.
             ]]>
             </description>
    </question>

    <!-- OrfQuestions.OrfsByMassSpec -->
    <question name="OrfsByMassSpec"
              category="Other Attributes"
              displayName="Mass Spec. Evidence"
              queryRef="OrfIds.OrfsByMassSpec" 
              summaryAttributesList="orf_location_text,sum_sequence_count,sum_spectrum_count"
              sortingAttributesList="sum_sequence_count desc,sum_spectrum_count desc"
              recordClassRef="OrfRecordClasses.OrfRecordClass">
              <summary>
              Find &lt;i&gt;Cryptosporidium&lt;/i&gt; open reading frames that have evidence of expression 
             based on peptides identified in sporozoites by MS/MS analysis.
              </summary>
              <description>
              <![CDATA[
             Find <i>Cryptosporidium</i> open reading frames that have evidence of expression 
             based on peptides identified by MS/MS analysis in an sporozoite excystation mixture. Some contaiminating oocyst proteins will also be in the mixture.<p>
            See the related <a href="showQuestion.do?questionFullName=GeneQuestions.GenesByMassSpec"><b>Genes with Mass Spec. Evidence</b></a> query to find gene models which have mapped MS/MS peptides.
            <p>
             <sup>&#182;</sup>
   <%-- description by J. Wastling --%>
<i> S.J. Sanderson, D. Xia, H. Prieto, J. Yates, M. Heiges. J. Kissinger & J.M. Wastling (submitted). <b>Contact: Jonathan Wastling for details (<a href="mailto:j.wastling@liv.ac.uk">j.wastling@liv.ac.uk</a>)</b></i>.
<br>
Mass spectrometry data were obtained from two-dimensional gel 
electrophoretic protein separations, one-dimensional gel LC-MS/MS and 
MudPIT analysis of a sporozoite/oocyst excystation mixture of 
<i>Cryptosporidium parvum</i>.  A total of approximately 3,500 protein 
hits were obtained resulting in 1,252 non-redundant protein identifications.  
In addition a further 100 hits were obtained to sequences which matched a 
predicted open reading frame, but for which no gene model currently exists.  
In total these protein identifications represent nearly one third of the 
entire predicted proteome of <i>C. parvum</i>, although it is unlikely 
that the entire proteome from all life-stages will be expressed at any 
one time.
             ]]>
             </description>
	<dynamicAttributes>
	     <columnAttribute name="sum_sequence_count" displayName="Number of Peptide Sequences" align="center"/>
	     <columnAttribute name="sum_spectrum_count" displayName="Number of Spectra" align="center"/>
	</dynamicAttributes>
    </question>




<question name="OrfsByMotifSearch"
         displayName="ORFs by Protein Motif Search"
         category="Text Search"
         queryRef="OrfIds.OrfsByMotifSearch"
         summaryAttributesList="organism,Locations,MatchCount,Sequence"
         recordClassRef="OrfRecordClasses.OrfRecordClass">
         <description>
           <![CDATA[

 Find genes whose protein product contains a motif pattern that 
           you specify.

           Specify the pattern with a (Perl style) "regular expression".
           (Regular expressions are more powerful than PROSITE patterns.) For
           a description of how to create regular expressions, please see 
           the  <a href="regexp.jsp">Regular Expression
           Tutorial</a>.
            <br><br>
             The following codes can be used to represent classes of amino acids.
        <table border columns=3>
                   <TR>
                      <TD><B>AA property</B>
                      </TD>
                      <TD><B>Amino acids</B>
                      </TD>
                      <TD><B>Code</B>
                      </TD>
                   </TR>

                   <TR>
                      <TD>
                      <B>Acidic</B>
                      </TD>
                      <TD><B>DE</B>
                      </TD>
                      <TD><B>0</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Alcohol</B>
                      </TD>
                      <TD><B>ST</B>
                      </TD>
                      <TD><B>1</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Aliphatic</B>
                      </TD>
                      <TD><B>ILV</B>
                      </TD>
                      <TD><B>2</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Aromatic</B>
                      </TD>
                      <TD><B>FHWY</B>
                      </TD>
                      <TD><B>3</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Basic</B>
                      </TD>
                      <TD><B>KRH</B>
                      </TD>
                      <TD><B>4</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Charged</B>
                      </TD>
                      <TD><B>DEHKR</B>
                      </TD>
                      <TD><B>5</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Hydrophobic</B>
                      </TD>
                      <TD><B>AVILMFYW</B>
                      </TD>
                      <TD><B>6</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Hydrophilic</B>
                      </TD>
                      <TD><B>KRHDENQ</B>
                      </TD>
                      <TD><B>7</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Polar</B>
                      </TD>
                      <TD><B>CDEHKNQRST</B>
                      </TD>
                      <TD><B>8</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Small</B>
                      </TD>
                      <TD><B>ACDGNPSTV</B>
                      </TD>
                      <TD><B>9</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Tiny</B>
                      </TD>
                      <TD><B>AGS</B>
                      </TD>
                      <TD><B>B</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Turnlike</B>
                      </TD>
                      <TD><B>ACDEGHKNQRST</B>
                      </TD>
                      <TD><B>Z</B>
                      </TD>
                   </TR>
                   <TR>
                      <TD><B>Any</B>
                      </TD>
                      <TD><b>ACDEFGHIKLM<br>
                             NPQRSTVWY</b>
                      </TD>
                      <TD><B>.</B>
                      </TD>
                   </TR>
                   </table>

          ]]>
         </description>
         <dynamicAttributes>
           <columnAttribute name="Locations" inReportMaker="false"/>
           <columnAttribute name="MatchCount" displayName="Match Count"
                            inReportMaker="false"/>
           <columnAttribute name="Sequence" inReportMaker="false" truncateTo="4000"/>
         </dynamicAttributes>
    </question>

<question name="OrfsBySimilarity"
         displayName="ORFs by BLAST Similarity"

         queryRef="OrfIds.OrfsBySimilarity"
         summaryAttributesList="Header,TabularRow,Alignment,Footer"
         recordClassRef="OrfRecordClasses.OrfRecordClass">
         <description>
           <![CDATA[
             This query finds <b>Open Reading Frames (ORFs)</b> with BLAST matches to an input sequence.  The <a href="http://blast.wustl.edu/" target="_blank">WU BLAST</a> program is used to search against coding nucleotide (CDS) or  protein
sequence from annotatated gene models.]]>
         </description>

         <dynamicAttributes>
             <columnAttribute name="TabularRow" displayName="Blast summary"
                              inReportMaker="false"/>
             <columnAttribute name="Alignment" displayName="Blast alignment"
                              inReportMaker="false"/>
             <columnAttribute name="Header" displayName="Blast header"
                              inReportMaker="false"/>
             <columnAttribute name="Footer" displayName="Blast footer"
                              inReportMaker="false"/>
         </dynamicAttributes>
    </question>


    
</questionSet>



<!-- questions that return Contig records -->
<questionSet name="GenomicSequenceQuestions"
             displayName="Find Genomic Sequences by">

    <description>
      Find Genomic Sequences
    </description>
   
    <!-- GenomicSequenceQuestions.Sequence  -->
    <question name="SequencesByTaxon"
         displayName="Taxon"
              queryRef="GenomicSequenceIds.SequencesByTaxon"
              summaryAttributesList="organism"
              recordClassRef="ContigRecordClasses.ContigRecordClass">
        <summary>
          Find chromosomes or contigs from one or more Cryptosporidium species.
        </summary>
        <description>
           <![CDATA[
          Find chromosomes or contigs from one or more Cryptosporidium species.
          ]]>
        </description>
    </question>

    <!-- GenomicSequenceQuestions.SequenceBySourceId -->
    <question name="SequenceBySourceId" 
              displayName="Contigs by ContigID"
              queryRef="GenomicSequenceIds.SequenceBySourceId" 
              summaryAttributesList="organism"
              recordClassRef="ContigRecordClasses.ContigRecordClass">
             <summary>
             Find contigs by GenBank Accession Number.
             </summary>
             <description>
             <![CDATA[
             Find contigs by GenBank Accession Number.
             ]]>
             </description>
    </question>


    <question name="SequencesBySimilarity"
              displayName="Contigs by BLAST Similarity"
              queryRef="GenomicSequenceIds.SequencesBySimilarity"
              summaryAttributesList="Header,TabularRow,Alignment,Footer"
              recordClassRef="ContigRecordClasses.ContigRecordClass">
              <summary>
              <![CDATA[
              Find <i>Cryptosporidium</i> contigs that have BLAST similarity to your input sequence.
              ]]>
              </summary>
              <description>
              <![CDATA[
              This query finds <b>contigs</b> with BLAST matches to an input sequence.  The <a href="http://blast.wustl.edu/" target="_blank">WU BLAST</a> program is used to search against coding nucleotide (CDS) or  protein
              sequence from annotatated gene models. 
              
              ]]>
              </description>

         <dynamicAttributes>
             <columnAttribute name="TabularRow" displayName="Blast summary"
                              inReportMaker="false"/>
             <columnAttribute name="Alignment" displayName="Blast alignment"
                              inReportMaker="false"/>
             <columnAttribute name="Header" displayName="Blast header"
                              inReportMaker="false"/>
             <columnAttribute name="Footer" displayName="Blast footer"
                              inReportMaker="false"/>
         </dynamicAttributes>
    </question>

</questionSet>

<!-- questions that return Protein records
<questionSet name="ProteinQuestions"
             displayName="Find Proteins by">

    <description>
      Find Proteins
    </description>
    
    <question name="ProteinLookup" 
         displayName="Proteins by Protein ID"
              queryRef="ProteinFeatureIds.ProteinById" 
              summaryAttributesList="locus_tag,organism"
              recordClassRef="ProteinRecordClasses.ProteinRecordClass">
        <description>Lookup a protein by Protein ID</description>
    </question>

</questionSet>
 -->


<!-- questions for use in nestedRecords and nestedRecordLists -->
<questionSet name="NestedRecordQuestions" displayName="Questions for use in NestedRecords" internal="true">
         <!-- need summaryAttributesList to work around UPPER($$primaryKey$$) bug in WDK sql munger -->
         <question name="Protein" 
                   queryRef="GeneTables.ProteinIds" 
                   recordClassRef="ProteinRecordClasses.ProteinRecordClass" 
                   summaryAttributesList="locus_tag,organism"
                   displayName="Nested Protein Record">
              <description> Question that returns the Protein that belongs to the given Gene; for use in a Nested Record </description>
         </question>

</questionSet>


  
<!-- Querys that return Protein primary keys (for use in questions). -->
<querySet name="ProteinFeatureIds">
    <!-- ProteinFeatureIds.ProteinById -->
    <sqlQuery name="ProteinById" displayName="By Protein ID" isCacheable='true'>
        <paramRef ref="params.protein_id"/>
        <column name="protein_id" />
        <sql>
            <![CDATA[
            SELECT t.protein_id
            FROM dots.transcript t
            WHERE LOWER(t.protein_id) LIKE 
            TRIM(LOWER(REPLACE('$$protein_id$$', '*', '%'))) ||'%'
           ]]>
       </sql>
    </sqlQuery>   
    
</querySet>

<!-- Querys that return Contig primary keys (for use in questions). -->
<querySet name="GenomicSequenceIds">
   
   <!-- GenomicSequenceIds.SequencesByTaxon -->
   <sqlQuery name="SequencesByTaxon" displayName="by Source ID" isCacheable="true">
        <paramRef ref="params.allOrganisms"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT ens.source_id
                FROM dots.externalNaSequence ens, sres.SequenceOntology so
                WHERE ens.taxon_id IN (SELECT taxon_id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$allOrganisms$$))
                  AND ens.sequence_ontology_id = so.sequence_ontology_id
                  AND (so.term_name = 'supercontig' OR so.term_name = 'contig')
                ORDER BY ens.source_id
            ]]>
       </sql>
    </sqlQuery>

    <!-- GenomicSequenceIds.SequenceBySourceId -->
    <sqlQuery name="SequenceBySourceId" displayName="By Contig ID" isCacheable='true'>
        <paramRef ref="params.contig"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT enas.source_id
            FROM dots.externalnasequence enas,
                 sres.sequenceontology so
            WHERE LOWER(enas.source_id) LIKE TRIM(LOWER(REPLACE('$$contig$$', '*', '%')))
            AND enas.sequence_ontology_id = so.sequence_ontology_id
            AND so.term_name in ('contig', 'supercontig')
           ]]>
       </sql>
    </sqlQuery>   


    <!-- GenomicSequenceIds.SequencesBySimilarity -->
    <wsQuery name="SequencesBySimilarity" displayName="BLAST Sequences"
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="SequenceBlastDbParams.BlastDatabaseType"/>
       <paramRef ref="SequenceBlastDbParams.BlastDatabaseOrganism"/>
       <paramRef ref="params.BlastQueryType"/>
       <paramRef ref="params.BlastQuerySequence"/>
       <paramRef ref="params.-e"/>
       <paramRef ref="params.-v"/>
       <paramRef ref="params.-b"/>
       <paramRef ref="params.-filter"/>

       <wsColumn name="source_id" width="32" wsName="Identifier"/>


       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="4000"/>
    </wsQuery>











</querySet>

  
<!-- Querys that return EST primary keys (for use in questions). -->
<querySet name="EstIds">

<sqlQuery name="EstsByLocation"
              displayName="by  genomic location" isCacheable="true">
        <description>
            genes by genomic location
        </description>
        <paramRef ref="params.parvum_chromosome"/>
        <paramRef ref="params.contig"/>
        <paramRef ref="params.start_location"/>
        <paramRef ref="params.end_location"/>
        <column name="source_id"  />
        <sql>
            <![CDATA[
           SELECT est.accession as source_id
	    FROM  dots.BlatAlignment blat,
	          dots.AssemblySequence asbl,
		  dots.Est est,
		  dots.ExternalNASequence etn
            WHERE blat.query_na_sequence_id = asbl.na_sequence_id
	    AND   blat.target_na_sequence_id = etn.na_sequence_id
	    AND   est.na_sequence_id = blat.query_na_sequence_id
            AND   blat.target_end >= $$start_location$$ 
            AND   (blat.target_start <= $$end_location$$ OR $$end_location$$ = 0)
	    AND   etn.external_database_release_id = blat.target_external_db_release_id
            AND   blat.max_target_gap < 10000
	    AND   (etn.source_id = '$$parvum_chromosome$$'
                   OR lower(etn.source_id) = lower('$$contig$$'))
            AND blat.target_start >= $$start_location$$ 
            AND (blat.target_end <= $$end_location$$ OR $$end_location$$ = 0)
	    GROUP BY est.accession
           ]]>
       </sql>
    </sqlQuery>


    <!-- EstIds.EstsByLibrary -->
    <sqlQuery name="EstsByLibrary" displayName="ESTs by library name" isCacheable='true'>
        <paramRef ref="params.libraryId"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT enas.source_id 
            FROM dots.externalnasequence enas, dots.est e
            WHERE enas.na_sequence_id = e.na_sequence_id
            AND e.library_id in ($$libraryId$$)
           ]]>
       </sql>
    </sqlQuery>   

    <!-- EstIds.EstsWithGeneOverlap -->
    <sqlQuery name="EstsWithGeneOverlap" displayName="ESTs that overlap genes" isCacheable='true'>
       <paramRef ref="params.libraryId"/>
       <paramRef ref="params.bp_overlap_gte"/>
       <paramRef ref="params.inNotIn"/>
       <column name="source_id" />
        <sql>
            <!-- query result includes 11 ests that have no genomic alignment -->
            <![CDATA[
            SELECT accession as source_id FROM dots.est where est_id $$inNotIn$$ (
                SELECT distinct(e.est_id)
                FROM dots.genefeature gf, core.tableinfo info,
                dots.nalocation nal, dots.blatalignment blat, 
                dots.est e, dots.externalnasequence enas2 
                WHERE gf.na_feature_id = nal.na_feature_id 
                AND gf.na_sequence_id = enas2.na_sequence_id 
                AND enas2.na_sequence_id = blat.target_na_sequence_id 
                AND e.na_sequence_id = blat.QUERY_NA_SEQUENCE_ID 
                AND (blat.TARGET_END - nal.start_max) >= $$bp_overlap_gte$$  
                AND (nal.end_min - blat.TARGET_START) >= $$bp_overlap_gte$$  
                AND (query_end - query_start) >= $$bp_overlap_gte$$  
                AND blat.max_target_gap < 10000 
                AND blat.is_best_alignment = 1
                AND blat.query_table_id = info.table_id
                AND info.name = 'AssemblySequence'
                AND e.library_id in ($$libraryId$$)
            ) 
            AND library_id in ($$libraryId$$)
           ]]>
       </sql>
    </sqlQuery>   



<wsQuery name="EstsBySimilarity" displayName="BLAST ESTs"
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="EstBlastDbParams.BlastDatabaseType"/>
       <paramRef ref="EstBlastDbParams.BlastDatabaseOrganism"/>
       <paramRef ref="params.BlastQueryType"/>
       <paramRef ref="params.BlastQuerySequence"/>
       <paramRef ref="params.-e"/>
       <paramRef ref="params.-v"/>
       <paramRef ref="params.-b"/>
       <paramRef ref="params.-filter"/>

       <wsColumn name="source_id" width="32" wsName="Identifier"/>


       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="4000"/>
    </wsQuery>


  <wsQuery name="UnifiedBlast" displayName="BLAST"
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="params.BlastQueryType"/>
       <paramRef ref="params.BlastDatabaseType"/>
       <paramRef ref="params.BlastDatabaseOrganism"/>
       <paramRef ref="params.BlastQuerySequence"/>
       <paramRef ref="params.-e"/>
       <paramRef ref="params.-v"/>
       <paramRef ref="params.-b"/>
       <paramRef ref="params.-filter"/>

       <wsColumn name="source_id" width="60" wsName="Identifier"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </wsQuery>



</querySet>


<!-- Querys that return Gene primary keys (for use in questions). -->
<querySet name="GeneFeatureIds">

   
<sqlQuery name="GenesByOrthologs" displayName="by orthology"
              isCacheable="true">
        <description>
            Find orthologs of the genes in an existing query result set
        </description>
        <paramRef ref="params.historyId"/>
        <paramRef ref="params.organism"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf2.source_id
            FROM $$historyId$$ qr, dots.GeneFeature gf1,
                 dots.SequenceSequenceGroup ssg1, dots.SequenceSequenceGroup ssg2,
                 dots.GeneFeature gf2, dots.ExternalNaSequence ens,
                 core.TableInfo ti
            WHERE qr.source_id = gf1.source_id
              AND gf1.na_feature_id = ssg1.sequence_id
              AND ssg1.source_table_id = ti.table_id
              AND ssg1.sequence_group_id = ssg2.sequence_group_id
              AND ssg2.source_table_id = ti.table_id
              AND ssg2.sequence_id = gf2.na_feature_id
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id in (SELECT taxon_id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$))
              AND ti.name = 'GeneFeature'
            GROUP BY gf2.source_id
            ORDER BY gf2.source_id
           ]]>
       </sql>
    </sqlQuery>



    <sqlQuery name="GeneByLocusTag" displayName="by Gene ID"
              isCacheable="true">
        <paramRef ref="params.ds_gene_ids"/>
        <column name="source_id"/>
        <sql>
             <![CDATA[
            SELECT DISTINCT gi.gene AS source_id
            FROM apidb.GeneId gi,  @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$
              AND gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER(ds.dataset_value),
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>
    </sqlQuery>





 <!-- GeneFeatureIds.GeneBySingleLocusTag -->
    <sqlQuery name="GeneBySingleLocusTag" displayName="By Gene ID" isCacheable='true'>
        <paramRef ref="params.locus_tag"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT g.source_id
            FROM dots.genefeature g,
                 dots.rnatype r,
                 dots.transcript t
            WHERE g.na_feature_id = r.parent_id (+)
            AND r.na_feature_id = t.parent_id (+)
            AND (
                LOWER(g.source_id) LIKE TRIM(LOWER(REPLACE('$$locus_tag$$', '*', '%')))
                OR  LOWER(t.protein_id) LIKE TRIM(LOWER(REPLACE('$$locus_tag$$', '*', '%'))) ||'%'
            ) and g.source_id is not null
           ]]>
       </sql>
    </sqlQuery>   

    <!-- GeneFeatureIds.GenesWithEpitopes -->
    <sqlQuery name="GenesWithEpitopes" displayName="By Gene ID" isCacheable='true'>
        <paramRef ref="params.organism"/>
        <paramRef ref="epitopeParams.confidence"/>
        <column name="source_id" />
        <column name="confidence" />
        <column name="count" />
        <sql>
            <![CDATA[
        SELECT gf.source_id, count(ef.source_id) AS count,
           DECODE(
             MAX(
               DECODE(ef.type, 'Not Full Set Not on Blast Hit', 1,
                      'Not Full Set On Blast Hit', 2,
                      'Full Set Not on Blast Hit', 2,
                      'Full Set On Blast Hit', 3,
                       4)),
               1, 'Low',
               2, 'Medium',
               3, 'High',
               4, 'unknown epitope type') AS confidence
        FROM dots.TranslatedAaSequence tas, dots.EpitopeFeature ef,
             dots.AaLocation al, sres.ExternalDatabaseRelease edr,
             sres.ExternalDatabase ed, dots.GeneFeature gf,
             dots.TranslatedAaFeature taf, dots.Transcript t,
             dots.MotifAaSequence mas, dots.ExternalNaSequence ens
        WHERE tas.aa_sequence_id = ef.aa_sequence_id
          AND ef.aa_feature_id = al.aa_feature_id
          AND ef.motif_aa_sequence_id = mas.aa_sequence_id
          AND tas.aa_sequence_id = taf.aa_sequence_id
          AND taf.na_feature_id = t.na_feature_id
          AND t.parent_id = gf.na_feature_id
          AND gf.na_sequence_id = ens.na_sequence_id
          AND ens.taxon_id in 
               (select taxon_id from sres.taxon
                connect by parent_id = prior taxon_id
                start with taxon_id in ($$organism$$))
          AND ef.external_database_release_id
              = edr.external_database_release_id
          AND edr.external_database_id = ed.external_database_id
          AND ed.name = 'Links to IEDB epitopes'
          AND ef.type IN ($$confidence$$)
        GROUP BY gf.source_id
        ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>   

    <!-- GeneFeatureIds.GenesByMassSpec -->
    <sqlQuery name="GenesByMassSpec" displayName="By Mass Spec. Evidence" isCacheable='true'>
        <paramRef ref="params.parvumOrganism"/>
        <paramRef ref="params.wastlinglowery_ms_assay"/>
        <paramRef ref="params.min_sequence_count"/>
        <paramRef ref="params.min_spectrum_count"/>
        <column name="source_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />
        <sql>
            <![CDATA[
            select distinct gf.source_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$wastlinglowery_ms_assay$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$wastlinglowery_ms_assay$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and nas.taxon_id in 
            (select taxon_id from sres.taxon
             connect by parent_id = prior taxon_id
             start with taxon_id in ($$parvumOrganism$$))
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
    </sqlQuery>
    
    <!-- GeneFeatureIds.GenesByGoTerm -->
    <sqlQuery name="GenesByGoTerm" displayName="by GO term"
              isCacheable="true">
        <paramRef ref="params.go_term"/>
        <paramRef ref="params.organism"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id
            FROM dots.ExternalNaSequence ens, dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 dots.GoAssociation ga, sres.GoTerm gp,
                 sres.GoRelationship gr, core.TableInfo ti,
                 sres.GoRelationshipType grt
            WHERE ens.taxon_id IN (SELECT taxon_id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$))
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = ti.table_id
              AND ti.name = 'TranslatedAASequence'
              AND ga.go_term_id = gr.child_term_id
              AND gr.parent_term_id = gp.go_term_id
              AND (gp.go_id = '$$go_term$$'
                   OR gp.name LIKE REPLACE('$$go_term$$', '*', '%'))
              AND gr.go_relationship_type_id = grt.go_relationship_type_id
              AND grt.name = 'closure'
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <!-- GeneFeatureIds.GenesByEcNumber -->
    <sqlQuery name="GenesByEcNumber" displayName="by EC Number" isCacheable="true">
        <paramRef ref="params.organism"/>
        <paramRef ref="params.ec_number_pattern"/>
        <column name="source_id"  />
        <sql>
            <![CDATA[
        SELECT DISTINCT gf.source_id
         FROM dots.GeneFeature gf, dots.NaSequence ens,
              dots.Transcript t, dots.translatedAaFeature taf,
              dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
         WHERE ('$$organism$$' = '-1'
                OR ens.taxon_id in (select taxon_id from sres.taxon
                                    connect by parent_id = prior taxon_id
                                    start with taxon_id in ($$organism$$)))
           AND  ens.na_sequence_id = gf.na_sequence_id
           AND gf.na_feature_id = t.parent_id
           AND t.na_feature_id = taf.na_feature_id
           AND taf.aa_sequence_id = asec.aa_sequence_id
           AND asec.enzyme_class_id = ec.enzyme_class_id
           AND ec.ec_number LIKE REPLACE(REPLACE('$$ec_number_pattern$$',' ',''),
                                         '-', '%')
         ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

<!-- GeneFeatureIds.GenesByAnnotatedKeyword -->
 <wsQuery name="GenesByAnnotatedKeyword" 
          displayName="By Annotated Keywords" 
          isCacheable='true' 
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.TextSearchPlugin">
       <paramRef ref="params.text_expression"/>
  <!--     <paramRef ref="params.case_independent" />   -->
       <paramRef ref="params.whole_words" />
       <paramRef ref="params.max_pvalue"/>
       <paramRef ref="params.datasets" default="Gene product, Gene notes, User comments, Protein domain names and descriptions, EC descriptions, GO terms and definitions"/>
       <paramRef ref="params.organism" default="C. parvum,C. hominis"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="Fields" width="64" wsName="Datasets"/>
    </wsQuery>  


    <!-- GeneFeatureIds.GenesByAnnotatedKeyword -->
 <!--   <sqlQuery name="GenesByAnnotatedKeyword" displayName="By Annotated Keywords" isCacheable='true'>
       <paramRef ref="params.organism"/>
       <paramRef ref="params.keyword"/>
       <column name="source_id" />
       <sql>-->
           <!-- use CDATA because query includes angle brackets -->
           <!-- <![CDATA[
            SELECT DISTINCT g.source_id
            FROM dots.genefeature g, dots.externalNAsequence enas 
            WHERE LOWER(g.product) LIKE 
              '%' || TRIM(LOWER(REPLACE('$$keyword$$', '*', '%'))) || '%'
            AND enas.na_sequence_id = g.na_sequence_id
            AND ('$$organism$$' = '-1'
                   OR enas.taxon_id in 
                       (select taxon_id from sres.taxon
                        connect by parent_id = prior taxon_id
                        start with taxon_id in ($$organism$$)))
            ]]>
        </sql>
    </sqlQuery>   
     -->  
    <!-- GeneFeatureIds.GenesByLocation -->
    <sqlQuery name="GenesByLocation"
              displayName="by  genomic location" isCacheable="true">
        <description>
            genes by genomic location
        </description>
        <paramRef ref="params.parvum_chromosome"/>
        <paramRef ref="params.contig"/>
        <paramRef ref="params.start_location"/>
        <paramRef ref="params.end_location"/>
        <column name="source_id"  />
        <sql>
            <![CDATA[
            SELECT distinct gf.source_id
            FROM dots.GeneFeature gf, dots.naLocation nl, dots.ExternalNaSequence ens
            WHERE nl.na_feature_id = gf.na_feature_id
              AND (ens.source_id = '$$parvum_chromosome$$'
                   OR lower(ens.source_id) = lower('$$contig$$'))
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= $$start_location$$ 
              AND (start_min <= $$end_location$$ OR $$end_location$$ = 0)
           ]]>
       </sql>
    </sqlQuery>

    <!-- GeneFeatureIds.GenesByGeneType -->
    <sqlQuery name="GenesByGeneType" displayName="By RNA Type" isCacheable='true'>
       <paramRef ref="params.organism"/>
       <paramRef ref="params.rnatype"/>
       <paramRef ref="params.includePseudogenes"/>
       <column name="source_id" />
        <column name="is_pseudo" />
       <sql>
           <!-- use CDATA because query includes angle brackets MUST ADD IS_PSEUDO-->
            <![CDATA[
           SELECT gf.source_id,DECODE(gf.is_pseudo,0,'No',1,'Yes') as is_pseudo
            FROM dots.GeneFeature gf, dots.ExternalNaSequence ens
            WHERE gf.sequence_ontology_id IN ($$rnatype$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              AND gf.is_pseudo IN ($$includePseudogenes$$)
              AND ens.taxon_id IN (SELECT taxon_id FROM sres.taxon
                                   CONNECT BY parent_id = prior taxon_id
                                   START WITH taxon_id IN ($$organism$$))
            ]]>
          </sql>
    </sqlQuery>   
       
    <!-- GeneFeatureIds.GeneByContig -->
               
    <!-- GeneFeatureIds.GenesByMolecularWeight -->
    <sqlQuery name="GenesByMolecularWeight" displayName="By Protein Molecular Weight" isCacheable='true'>
       <paramRef ref="params.organism"/>
       <paramRef ref="params.lowerMolWtBound"/>
       <paramRef ref="params.upperMolWtBound"/>
       <column name="source_id" />

       <sql>
          <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
            SELECT DISTINCT gf.source_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.min_molecular_weight <= $$upperMolWtBound$$
              AND asa.max_molecular_weight >= $$lowerMolWtBound$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in (SELECT taxon_id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$))
           ]]>
          </sql>
    </sqlQuery>   

    <!-- GeneFeatureIds.GenesWithSignalPeptide -->
    <sqlQuery name="GenesWithSignalPeptide" displayName="Encoding a Signal Peptide" isCacheable='true'>
       <paramRef ref="params.organism"/>
       <paramRef ref="params.min_sigp_sum_score" groupRef="paramGroups.advancedParams" />
       <column name="source_id" />
        <column name="sigp_sum_score"/>
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <!--<![CDATA[
            SELECT gf.source_id 
            FROM   dots.translatedaasequence tas, 
                   dots.translatedaafeature taf, 
                   dots.transcript t,
                   dots.signalpeptidefeature spf, 
                   dots.externalNAsequence enas,
                   dots.genefeature gf
            WHERE tas.aa_sequence_id=spf.aa_sequence_id 
              AND maxy_conclusion=1 
              AND maxc_conclusion=1 
              AND maxs_conclusion=1 
              AND means_conclusion=1 
              AND tas.aa_sequence_id = taf.aa_sequence_id 
              AND taf.na_feature_id = t.na_feature_id 
              AND t.parent_id = gf.na_feature_id
              AND gf.na_sequence_id = enas.na_sequence_id 
              AND ('$$organism$$' = '-1'
                   OR enas.taxon_id in 
                       (select taxon_id from sres.taxon
                        connect by parent_id = prior taxon_id
                        start with taxon_id in ($$organism$$)))
            ]]>-->

            <![CDATA[
            SELECT DISTINCT gf.source_id,
            (spf.maxy_conclusion + spf.maxc_conclusion + 
             spf.maxs_conclusion + spf.means_conclusion ) as sigp_sum_score
            FROM dots.nasequence ens, dots.GeneFeature gf, 
                 dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.SignalPeptideFeature spf
            WHERE  gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = spf.aa_sequence_id
              AND (spf.maxy_conclusion +
                   spf.maxc_conclusion +
                   spf.maxs_conclusion +
                   spf.means_conclusion ) >= $$min_sigp_sum_score$$ 
              AND ens.na_sequence_id = gf.na_sequence_id
              AND ens.taxon_id in (select * from (SELECT taxon_id id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$)))
           ]]>
          </sql>
    </sqlQuery>  
    
    <!-- GeneFeatureIds.GenesByPfamDomain -->
<sqlQuery name="GenesByPfamDomain"
              isCacheable="true">
        <paramRef ref="params.domain_database"/>
        <paramRef ref="params.pfam_term"/>
        <paramRef ref="params.organism"/>
<!--    <paramRef ref="params.e_value"/>-->
        <column name="source_id"/>
        <column name="e_value"/>  
        <sql>
            <![CDATA[
            SELECT gf.source_id,avg(df.e_value) as e_value
            FROM dots.DomainFeature df,dots.translatedaasequence tas,
                 dots.genefeature gf, dots.transcript t, dots.TranslatedAAFeature taf,
                 dots.DbRefAaFeature draf, sres.DbRef dr
            WHERE tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND dr.primary_identifier
                  = substr('$$pfam_term$$', 1, instr('$$pfam_term$$'||':', ':')-1)
              AND tas.taxon_id IN (select * from (SELECT taxon_id id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$)))
              AND tas.aa_sequence_id = taf.aa_sequence_id
              AND taf.na_feature_id = t.na_feature_id
              AND gf.na_feature_id = t.parent_id
              GROUP BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>



    <!-- GeneFeatureIds.GenesByExonCount -->
    <sqlQuery name="GenesByExonCount" displayName="By Number of Exons" isCacheable='true'>
       <paramRef ref="params.organism"/>
       <paramRef ref="params.num_exons_gte"/>
       <paramRef ref="params.num_exons_lte"/>
       <column name="source_id" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           SELECT gf.source_id
            FROM dots.geneFeature gf, dots.ExternalNaSequence ns,dots.nalocation l,
                 (SELECT t.parent_id, count(*) AS exon_count
                  FROM dots.Transcript t, dots.ExonFeature ef, dots.rnafeatureexon rfe
                  WHERE t.na_feature_id = rfe.rna_feature_id
                  and ef.na_feature_id = rfe.exon_feature_id
                  GROUP BY t.parent_id, t.na_feature_id
                  HAVING COUNT(*) >= $$num_exons_gte$$ and count(*) <= $$num_exons_lte$$) exons
            WHERE exons.parent_id = gf.na_feature_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND gf.na_feature_id = l.na_feature_id
              AND ns.taxon_id in (select * from (SELECT taxon_id id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$)))
            ORDER BY ns.taxon_id,ns.source_id,l.start_min
            ]]>
          </sql>
    </sqlQuery>   
       
    <!-- GeneFeatureIds.GenesByESTOverlap -->
    <sqlQuery name="GenesByESTOverlap" displayName="By EST Overlap" isCacheable='true'>
       <paramRef ref="params.est_libraryId"/>
       <paramRef ref="params.parvumOrganism"/>
       <paramRef ref="params.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="params.best_alignment_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="params.high_confidence_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="params.min_percent_identity" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="params.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
       <column name="source_id" />
       <column name="number_of_ests" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
            SELECT gf.source_id,count(*) as number_of_ests
            FROM dots.genefeature gf, 
                 dots.nalocation nal, 
                 dots.blatalignment blat, 
                 dots.est query,
                 dots.library lib,
                 dots.assemblysequence asbl,
                 dots.externalnasequence target 
            WHERE gf.na_feature_id = nal.na_feature_id 
              AND gf.na_sequence_id = target.na_sequence_id 
              AND target.na_sequence_id = blat.target_na_sequence_id 
              AND query.na_sequence_id = blat.query_na_sequence_id 
              AND (blat.target_end - nal.start_max) >= $$bp_overlap_gte$$ 
              AND (nal.end_min - blat.target_start) >= $$bp_overlap_gte$$ 
              AND (query_end - query_start) >= $$bp_overlap_gte$$ 
              AND blat.max_target_gap < 10000 
              AND query.library_id = lib.library_id
              AND lib.library_id in ($$est_libraryId$$)
              AND blat.is_best_alignment in ($$best_alignment_only$$)
              AND blat.is_consistent in ($$high_confidence_only$$)
              AND blat.query_na_sequence_id = asbl.na_sequence_id
              AND blat.percent_identity >= $$min_percent_identity$$
              AND ((blat.query_bases_aligned / (asbl.sequence_end - asbl.sequence_start + 1)) * 100) >= $$min_percent_est_aligned$$
           GROUP BY gf.source_id
           ORDER BY gf.source_id
            ]]>
          </sql>
    </sqlQuery>   

    <!-- GeneFeatureIds.GenesByESTClusterOverlap -->
    <sqlQuery name="GenesByESTClusterOverlap" displayName="By EST Cluster Overlap" isCacheable='true'>
       <paramRef ref="params.bp_overlap_gte"/>
       <column name="source_id" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
            SELECT distinct(gf.source_id) 
            FROM dots.genefeature gf, 
                 dots.nalocation nal, 
                 dots.blatalignment blat, 
                 dots.assembly query, 
                 dots.externalnasequence target 
            WHERE gf.na_feature_id = nal.na_feature_id 
              AND gf.na_sequence_id = target.na_sequence_id 
              AND target.na_sequence_id = blat.target_na_sequence_id 
              AND query.na_sequence_id = blat.query_na_sequence_id 
              AND (blat.target_end - nal.start_max) >= $$bp_overlap_gte$$ 
              AND (nal.end_min - blat.target_start) >= $$bp_overlap_gte$$ 
              AND (query_end - query_start) >= $$bp_overlap_gte$$ 
              AND blat.max_target_gap < 10000 
              AND ('$$organism$$' = '-1'
                   OR blat.target_taxon_id in 
                       (select taxon_id from sres.taxon
                        connect by parent_id = prior taxon_id
                        start with taxon_id = '$$organism$$'))
            ORDER BY gf.source_id
            ]]>
          </sql>
    </sqlQuery>   

    <!-- GeneFeatureIds.GenesByTransmembraneDomains -->
    <sqlQuery name="GenesByTransmembraneDomains" displayName="By Number of Predicted Transmembrane Domains" isCacheable='true'>
       <paramRef ref="params.organism"/>
       <paramRef ref="params.num_tm_gte"/>
       <paramRef ref="params.num_tm_lte"/>
       <column name="source_id" />
       <column name="predicted_helices" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
            SELECT g.source_id, tmf.predicted_helices
            FROM dots.genefeature g,
                 dots.transcript t,
                 dots.translatedaafeature taaf,
                 dots.TransmembraneAAFeature tmf,
                 dots.NAsequence enas,
                 core.algorithm alg
            WHERE g.na_feature_id = t.parent_id
              AND t.na_feature_id = taaf.na_feature_id
              AND taaf.aa_sequence_id = tmf.aa_sequence_id
              AND tmf.predicted_helices >= $$num_tm_gte$$
              AND tmf.predicted_helices <= $$num_tm_lte$$
              AND enas.taxon_id in (select * from (SELECT taxon_id id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$)))
              AND t.na_sequence_id = enas.na_sequence_id
              AND tmf.prediction_algorithm_id = alg.algorithm_id
              AND alg.name = 'TMHMM'
            ORDER BY tmf.predicted_helices 
            ]]>
          </sql>
    </sqlQuery>   

    <!-- GeneFeatureIds.GenesByOrthologPattern -->
    <sqlQuery name="GenesByOrthologPattern" displayName="by Ortholog Pattern"
              isCacheable="true">
        <paramRef ref="params.profile_pattern"/>
        <paramRef ref="params.included_species"/>
        <paramRef ref="params.excluded_species"/>
        <paramRef ref="params.organism"/>
        <paramRef ref="params.phyletic_indent_map"/>
        <paramRef ref="params.phyletic_term_map"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT pp.source_id
            FROM apidb.PhylogeneticProfile pp, dots.GeneFeature gf, dots.NaSequence ns
            WHERE pp.profile_string LIKE '$$profile_pattern$$'
              AND pp.source_id = gf.source_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in 
                       (select taxon_id from sres.taxon
                        connect by parent_id = prior taxon_id
                        start with taxon_id = '$$organism$$')
            ORDER BY ns.taxon_id, gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <sqlQuery name="GenesByTaxon" displayName="by taxon"
              isCacheable="true">
        <paramRef ref="params.organism"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT gf.source_id
                FROM DoTS.GeneFeature gf
                WHERE gf.na_sequence_id IN
                      (SELECT ens.na_sequence_id
                       FROM dots.ExternalNaSequence ens
                       WHERE
               ( '$$organism$$' = '-1'
                 OR
                 ens.taxon_id in (select taxon_id from sres.taxon
                                       connect by parent_id = prior taxon_id
                                       start with taxon_id in ($$organism$$)))
               )
                  AND gf.source_id IS NOT NULL
                ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>



<wsQuery name="GenesBySimilarity" displayName="BLAST Genes"
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="GeneBlastDbParams.BlastDatabaseType"/>
       <paramRef ref="GeneBlastDbParams.BlastDatabaseOrganism"/>
       <paramRef ref="params.BlastQueryType"/>
       <paramRef ref="params.BlastQuerySequence"/>
       <paramRef ref="params.-e"/>
       <paramRef ref="params.-v"/>
       <paramRef ref="params.-b"/>
       <paramRef ref="params.-filter"/>

       <wsColumn name="source_id" width="32" wsName="Identifier"/>


       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="4000"/>
    </wsQuery>






<wsQuery name="GenesByMotifSearch" displayName="Motif Search"
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.MotifSearchPlugin">
       <paramRef ref="params.DatasetGene"/>
       <paramRef ref="params.Expression"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="Locations" width="1000"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </wsQuery>


</querySet>

    

<!-- Querys that return Orf primary keys (for use in questions). -->
<querySet name="OrfIds">

<sqlQuery name="OrfsByLocation"
              displayName="by  genomic location" isCacheable="true">
        <description>
            genes by genomic location
        </description>
        <paramRef ref="params.parvum_chromosome"/>
        <paramRef ref="params.contig"/>
        <paramRef ref="params.start_location"/>
        <paramRef ref="params.end_location"/>
        <column name="source_id"  />
        <sql>
            <![CDATA[

SELECT t.source_id
	    FROM  dots.externalNASequence enas,
	          dots.nafeature t,
	          sres.sequenceontology so,
	          dots.nalocation nal
	    WHERE enas.na_sequence_id = t.na_sequence_id
	      AND t.sequence_ontology_id = so.sequence_ontology_id
	      AND so.term_name = 'ORF'
	      AND t.na_feature_id = nal.na_feature_id
	      AND (enas.source_id = '$$parvum_chromosome$$'
                   OR lower(enas.source_id) = lower('$$contig$$'))
              AND nal.end_max >= $$start_location$$ 
              AND (nal.start_min <= $$end_location$$ OR $$end_location$$ = 0)

           ]]>
       </sql>
    </sqlQuery>

     <!-- OrfIds.OrfsBySourceId -->
     <sqlQuery name="OrfsBySourceId" displayName="By Orf ID" isCacheable='true'>
        <paramRef ref="params.orf"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT misc.source_id as source_id
            FROM dots.miscellaneous misc,
                 sres.sequenceontology so
            WHERE LOWER(misc.source_id) LIKE TRIM(LOWER(REPLACE('$$orf$$', '*', '%')))
              AND misc.sequence_ontology_id = so.sequence_ontology_id
              AND so.term_name = 'ORF'
           ]]>
       </sql>
    </sqlQuery>

    <!-- OrfIds.OrfsByMassSpec -->
    <sqlQuery name="OrfsByMassSpec" displayName="By Mass Spec. Evidence" isCacheable='true'>
        <paramRef ref="params.parvumOrganism"/>
        <paramRef ref="params.wastling_ms_assay"/>
        <paramRef ref="params.min_sequence_count"/>
        <paramRef ref="params.min_spectrum_count"/>
        <column name="source_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />
        <sql>
            <![CDATA[
                select distinct misc.source_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, dots.translatedaafeature taaf,  
                 dots.miscellaneous misc, sres.sequenceontology o,
                 dots.nasequence nas,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$wastling_ms_assay$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$wastling_ms_assay$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = misc.na_feature_id
            and misc.sequence_ontology_id = o.sequence_ontology_id
            and o.term_name = 'ORF'
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
            and misc.na_sequence_id = nas.na_sequence_id
            and nas.taxon_id in 
            (select taxon_id from sres.taxon
             connect by parent_id = prior taxon_id
             start with taxon_id in ($$parvumOrganism$$))
            and misc.source_id not in 
            ('AAEE01000003-2-916100-917650',
             'AAEE01000002-1-148078-149013',
             'AAEE01000002-1-1046305-1047540',
             'AAEE01000003-3-881301-881756',
             'AAEE01000001-3-426675-427121',
             'AAEE01000004-3-483288-483752',
             'AAEE01000003-2-1036973-1038130',
             'AAEE01000001-1-392320-392592',
             'AAEE01000009-1-131134-131337')
           ]]>
       </sql>
    </sqlQuery>   

<wsQuery name="OrfsBySimilarity" displayName="BLAST ORFs"
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="OrfBlastDbParams.BlastDatabaseType"/>
       <paramRef ref="OrfBlastDbParams.BlastDatabaseOrganism"/>
       <paramRef ref="params.BlastQueryType"/>
       <paramRef ref="params.BlastQuerySequence"/>
       <paramRef ref="params.-e"/>
       <paramRef ref="params.-v"/>
       <paramRef ref="params.-b"/>
       <paramRef ref="params.-filter"/>

       <wsColumn name="source_id" width="60" wsName="Identifier"/>


       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="4000"/>
    </wsQuery>




<wsQuery name="OrfsByMotifSearch" displayName="Motif Search"
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.MotifSearchPlugin">
       <paramRef ref="params.DatasetORF"/>
       <paramRef ref="params.Expression"/>

       <wsColumn name="source_id" width="60" wsName="GeneID"/>
       <wsColumn name="Locations" width="1000"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </wsQuery>


</querySet>

<querySet name="Upcoming">
    <sqlQuery name="Query">
        <column name="null" />
        <sql />
    </sqlQuery>
</querySet>

<!-- Added for the GFF Reports on May 1 2007 by Cary P -->
<querySet name="DataDumpQueries">

    <sqlQuery name="GenesByExternalDatabase" isCacheable="true">
        <paramRef ref="params.extDbName"/>
        <paramRef ref="params.extDbRlsVer"/>
        <column name="source_id"/>
        <sql>
                SELECT DISTINCT gf.source_id AS source_id
                FROM DoTS.GeneFeature gf, SRes.ExternalDatabase ed,
                     SRes.ExternalDatabaseRelease edr
                WHERE gf.external_database_release_id = edr.external_database_release_id 
                AND edr.version = '$$extDbRlsVer$$'
                AND ed.name = '$$extDbName$$'
                AND edr.external_database_id = ed.external_database_id
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneGffQuery" isCacheable="true">
        <paramRef ref="params.organism"/>
        <column name="source_id"/>
        <sql>
            <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
                SELECT DISTINCT gf.source_id AS source_id
                FROM DoTS.GeneFeature gf
                WHERE gf.na_sequence_id in
                      (SELECT na_sequence_id
                       FROM dots.ExternalNaSequence ens
                       WHERE ens.taxon_id IN (select * from (SELECT taxon_id id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism$$))))
                  AND gf.source_id IS NOT NULL
            ]]>
        </sql>
    </sqlQuery>

    <sqlQuery name="SequenceGffQuery" isCacheable="true">
        <paramRef ref="params.organism"/>
        <column name="source_id"/>
        <sql>
            <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
                SELECT DISTINCT ens.source_id AS source_id
                FROM dots.ExternalNaSequence ens, sres.SequenceOntology so
                WHERE ens.taxon_id IN (SELECT taxon_id FROM sres.taxon
                                       CONNECT BY parent_id = prior taxon_id
                                       START WITH taxon_id in ($$organism_with_sequences$$))
                  AND ens.sequence_ontology_id = so.sequence_ontology_id
                  AND (so.term_name = 'supercontig' OR so.term_name = 'contig')
            ]]>
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneGffAttrs">
        <paramRef ref="params.primaryKey"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_locus_tag"/>
        <column name="gff_attr_size"/>
        <sql>
            select gf.source_id,
                   ens.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'gene' as gff_type,
                   least(nl.start_min, nl.end_max) as gff_fstart,
                   greatest(nl.start_min, nl.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   '.' as gff_phase,
                   gf.source_id as gff_attr_id,
                   gf.source_id as gff_attr_name,
                   gf.product as gff_attr_description,
                   gf.source_id as gff_attr_locus_tag,
                   (greatest(nl.start_min, nl.end_max) - least(nl.start_min, nl.end_max) + 1) as gff_attr_size
            from DoTS.GeneFeature gf, 
                 DoTS.NaLocation nl, 
                 DoTS.ExternalNaSequence ens
            where gf.source_id = '$$primaryKey$$'
                  and gf.na_feature_id = nl.na_feature_id
                  and gf.na_sequence_id = ens.na_sequence_id
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneGffDbxrefs" isCacheable="false">
        <paramRef ref="params.primaryKey"/>
        <column name="gff_dbxref"/>
        <sql>
/*          SELECT gts.source_id,
                   gts.go_id AS gff_dbxref
            FROM apidb.GoTermSummary gts
            WHERE gts.source_id = '$$primaryKey$$'
           UNION
*/          SELECT gf.source_id,
                   'taxon:' || t.ncbi_tax_id AS gff_dbxref
            FROM dots.GeneFeature gf, dots.NaSequence ns, sres.Taxon t
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id = t.taxon_id
           UNION
            SELECT gf.source_id,
                   'EC:' || ec.ec_number AS gff_dbxref
            FROM dots.GeneFeature gf,
                 dots.translatedAaFeature taf, dots.Transcript t,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE gf.source_id='$$primaryKey$$'
              AND t.parent_id = gf.na_feature_id
              AND taf.na_feature_id = t.na_feature_id
              AND asec.aa_sequence_id = taf.aa_sequence_id
              AND ec.enzyme_class_id = asec.enzyme_class_id
           UNION
/*            SELECT gf.source_id, so.so_id AS gff_dbxref
            FROM dots.GeneFeature gf, sres.SequenceOntology so
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.sequence_ontology_id = so.sequence_ontology_id
           UNION
*/            SELECT gf.source_id,
                   'NCBI_gi:' || dr.secondary_identifier AS gff_dbxref
            FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.na_feature_id = drnf.na_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id
                    = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name in ('NRDB_gb_dbXRefBySeqIdentity',
                              'NRDB_ref_dbXRefBySeqIdentity',
                              'NRDB_sp_dbXRefBySeqIdentity')
           UNION
            SELECT gf.source_id,
                   'PDB:' || dr.primary_identifier AS gff_dbxref
            FROM dots.aafeature aaf, dots.GeneFeature gf, dots.transcript t,
                 dots.DbRefaaFeature drnf,  sres.DbRef dr,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = aaf.na_feature_id
              AND aaf.aa_feature_id = drnf.aa_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'Predicted protein structures'
           UNION
            SELECT DISTINCT gf.source_id,
                   'Sanger:' || gf.source_id AS gff_dbxref
            FROM dots.GeneFeature gf, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.external_database_release_id
                  = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name like 'Sanger%'
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneRnas" displayName="Constituent RNAs">
        <paramRef ref="params.primaryKey"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_locus_tag"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_parent"/>
        <column name="gff_transcript_sequence"/>
        <sql>
            select ens.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   decode(so.term_name,
                          'protein_coding', 'mRNA',
                          'rRNA_encoding', 'rRNA',
                          'snRNA_encoding', 'snRNA',
                          'tRNA_encoding', 'tRNA',
                          'non_protein_coding', 'transcript',
                          so.term_name) as gff_type,
                   least(nl.start_min, nl.end_max) as gff_fstart,
                   greatest(nl.start_min, nl.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   '.' as gff_phase,
                   gf.source_id as gff_attr_parent,
                   'rna_' || rna.source_id as gff_attr_id,
                   rna.source_id as gff_attr_name,
                   rna.product as gff_attr_description,
                   rna.source_id as gff_attr_locus_tag,
                   (nl.end_max - nl.start_min + 1) as gff_attr_size,
                   s.sequence as gff_transcript_sequence
            from DoTS.GeneFeature gf,
                 DoTS.Transcript rna,
                 DoTS.NaLocation nl,
                 DoTS.ExternalNaSequence ens,
                 sres.externaldatabase ed,
                 sres.externaldatabaserelease edr,
                 sres.SequenceOntology so,
                 dots.splicednasequence s
            where gf.source_id = '$$primaryKey$$'
                and gf.na_feature_id = rna.parent_id
                and rna.na_feature_id = nl.na_feature_id
                and gf.na_sequence_id = ens.na_sequence_id
                and rna.external_database_release_id = edr.external_database_release_id
                AND edr.external_database_id = ed.external_database_id
                and gf.sequence_ontology_id = so.sequence_ontology_id
                and s.na_sequence_id = rna.na_sequence_id
            order by nl.start_min asc, nl.end_max asc
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneCdss" displayName="Constituent CDSs">
        <paramRef ref="params.primaryKey"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_locus_tag"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_parent"/>
        <column name="gff_coding_sequence"/>
        <column name="gff_protein_sequence"/>
        <sql>
            select ens.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'CDS' as gff_type,
                   least(tf.translation_start, tf.translation_stop) as gff_fstart,
                   greatest(tf.translation_start, tf.translation_stop) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   mod(tf.translation_start, 3) as gff_phase,
                   rna.source_id as gff_attr_parent,
                   'cds_' || tf.source_id as gff_attr_id,
                   tf.source_id as gff_attr_name,
                   gf.product as gff_attr_description,
                   tf.source_id as gff_attr_locus_tag,
                   (tf.translation_stop - tf.translation_start + 1) as gff_attr_size,
                   SUBSTR(s.sequence,tf.translation_start,(tf.translation_stop - tf.translation_start + 1)) as gff_coding_sequence,
                   tas.sequence as gff_protein_sequence
              from dots.genefeature gf, 
                   dots.transcript rna,
                   dots.splicednasequence s, 
                   dots.TranslatedAaFeature tf,
                   dots.TranslatedAaSequence tas,
                   dots.ExternalNaSequence ens, 
                   dots.NaLocation nl
              where gf.source_id = '$$primaryKey$$'
                and rna.parent_id = gf.na_feature_id
                and s.na_sequence_id = rna.na_sequence_id
                and rna.na_feature_id = tf.na_feature_id
                AND tf.aa_sequence_id = tas.aa_sequence_id
                and gf.na_sequence_id = ens.na_sequence_id
                and gf.na_feature_id = nl.na_feature_id
              order by tf.translation_start asc, tf.translation_stop asc
        </sql>
    </sqlQuery>


    <sqlQuery name="GeneExons" displayName="Constituent exons">
        <paramRef ref="params.primaryKey"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_locus_tag"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_parent"/>
        <sql>
            select ens.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'exon' as gff_type,
                   least(nl.start_min, nl.end_max) as gff_fstart,
                   greatest(nl.start_min, nl.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   decode(ef.reading_frame, NULL, '.', ef.reading_frame) as gff_phase,
                   rna.source_id as gff_attr_parent,
                   'exon_' || ef.source_id as gff_attr_id,
                   ef.name as gff_attr_name,
                   ef.name as gff_attr_description,
                   ef.source_id as gff_attr_locus_tag,
                   (nl.end_max - nl.start_min + 1) as gff_attr_size
            from DoTS.GeneFeature gf, 
                 DoTS.Transcript rna, 
                 DoTS.ExonFeature ef,
                 DoTS.NaLocation nl, 
                 DoTS.ExternalNaSequence ens,
                 dots.RnaFeatureExon rfe
            where gf.source_id = '$$primaryKey$$'
            and gf.na_feature_id = rna.parent_id
            and rna.na_feature_id = rfe.rna_feature_id
            and ef.na_feature_id = rfe.exon_feature_id
            and ef.na_feature_id = nl.na_feature_id
            and gf.na_sequence_id = ens.na_sequence_id
            order by nl.start_min asc, nl.end_max asc
        </sql>
    </sqlQuery>

  <sqlQuery name="SequenceGffAttrs" displayName="Chromosomes">
    <paramRef ref="params.primaryKey"/>
    <column name="gff_seqid"/>
    <column name="gff_source"/>
    <column name="gff_type"/>
    <column name="gff_fstart"/>
    <column name="gff_fend"/>
    <column name="gff_score"/>
    <column name="gff_strand"/>
    <column name="gff_phase"/>
    <column name="gff_attr_id"/>
    <column name="gff_attr_name"/>
    <column name="gff_attr_description"/>
    <column name="gff_attr_size"/>
    <column name="gff_attr_molecule_type"/>
    <column name="gff_attr_organism_name"/>
    <column name="gff_attr_translation_table"/>
    <column name="gff_attr_topology"/>
    <column name="gff_attr_localization"/>
    <column name="gff_sequence"/>
    <sql>
      select ens.source_id,
      ens.source_id as gff_seqid,
      'ApiDB' as gff_source,
      'supercontig' as gff_type,
      1 as gff_fstart,
      ens.length as gff_fend,
      '.' as gff_score,
      '+' as gff_strand,
      '.' as gff_phase,
      ens.source_id as gff_attr_id,
      ens.source_id as gff_attr_name,
      ens.description as gff_attr_description,
      ens.length as gff_attr_size,
      'dsDNA' as gff_attr_molecule_type,
      SUBSTR(tn.name, 1, INSTR(tn.name || '  ', ' ', 1, 2) - 1) as gff_attr_organism_name,
      11 as gff_attr_translation_table,
      'linear' as gff_attr_topology,
      'nuclear' as gff_attr_localization,
      ens.sequence as gff_sequence
      from DoTS.ExternalNaSequence ens,
      sres.externaldatabase ed,
      sres.externaldatabaserelease edr,
      sres.taxon t,
      sres.TaxonName tn
      where ens.source_id = '$$primaryKey$$'
      and ens.external_database_release_id = edr.external_database_release_id
      and edr.external_database_id = ed.external_database_id
      and ens.taxon_id = t.taxon_id
      and ens.taxon_id = tn.taxon_id
      and tn.name_class = 'scientific name'
    </sql>
  </sqlQuery>
  
  <sqlQuery name="SequenceGffDbxrefs" isCacheable="false">
    <paramRef ref="params.primaryKey"/>
    <column name="gff_dbxref"/>
    <sql>
      SELECT ens.source_id,
      'taxon:' || t.ncbi_tax_id AS gff_dbxref
      FROM dots.ExternalNaSequence ens, sres.Taxon t
      WHERE ens.source_id = '$$primaryKey$$'
      AND ens.taxon_id = t.taxon_id
      /*           UNION
      SELECT ens.source_id, so.so_id AS gff_dbxref
      FROM dots.ExternalNaSequence ens, sres.SequenceOntology so
      WHERE ens.source_id = '$$primaryKey$$'
      AND ens.sequence_ontology_id = so.sequence_ontology_id
      */           UNION
      SELECT ens.source_id,
      'GenBank:' || dr.primary_identifier AS thingie
      FROM dots.ExternalNaSequence ens, dots.dbrefNaSequence drns,
      sres.DbRef dr, sres.ExternalDatabaseRelease edr,
      sres.ExternalDatabase ed
      WHERE ens.source_id = '$$primaryKey$$'
      AND ens.na_sequence_id = drns.na_sequence_id
      AND drns.db_ref_id = dr.db_ref_id
      AND dr.external_database_release_id
      = edr.external_database_release_id
      AND edr.external_database_id = ed.external_database_id
      AND ed.name = 'GenBank'
    </sql>
  </sqlQuery>
  
</querySet>
<!-- end GFF Report Section -->

    

    <!-- *************** -->
    <!-- recordClassSets -->
    <!-- *************** -->

    <!-- 
    A "record" is an object that gathers together data about an entity in the
    database.  The entity is defined as data associated with a primary key, 
    and data in the record is based on that key. The data comes in three forms:
    attributes, text attributes and tables.  An attribute is a single value
    that describes the entity, such as "size."  A text attribute is similar,
    but the value is created by defining a text string and optionally embedding
    into that string the values of other attributes.  A table is a value
    in the form of columns and rows, such as a table describing related 
    publications.
  
    A record class is a template for creating records from a given primary key.
    It includes "attribute queries," "table queries" and "text attributes."  

    An attribute query must have only one parameter, the primary key.  It must
    return exactly zero or one rows.  The columns in the query are interpreted
    as attributes of the record.  

    A text attribute has a body of text with the values of other attributes
    optionally embedded in it.  The other attribute values are referred to
    as variables of the form "$$name_of_attribute$$".

    A table query must have only one parameter, the primary key.  It may
    return any number of rows (but typically not a huge number).  The result
    of the query is interpreted as being a table that 
    
    A "record set" is a grouping of records. It is useful in organizing the
    model xml file.

    The full name of a record is is of the form "set_name.name."
    --> 


    <recordClassSet name="OrfRecordClasses">

        <!-- OrfRecordClasses.OrfRecordClass -->
        <recordClass idPrefix="" 
          name="OrfRecordClass" type="Open Reading Frame">


          <reporter name="tabular" displayName="Summary - tab delimited"
                    implementation="org.gusdb.wdk.model.report.TabularReporter"/>
          <reporter name="gff3" displayName="Summary - GFF3"
                    implementation="org.apidb.apicommon.model.report.Gff3Reporter"/>
          <reporter name="fullRecord" displayName="Detailed - text"
                    implementation="org.gusdb.wdk.model.report.FullRecordReporter"/>


        <attributeQueryRef ref="OrfAttributes.Bfmv">
              <columnAttribute name="nas_id" displayName="Sequence ID" internal="false"/>
              <!--columnAttribute name="orf_id" displayName="ORF ID" internal="false"/-->
              <columnAttribute name="orf_start" internal="true"/>
              <columnAttribute name="orf_end" internal="true"/>
              <columnAttribute name="orf_start_text" displayName="Start" internal="false"/>
              <columnAttribute name="orf_end_text" displayName="End" internal="false"/>
              <columnAttribute name="orf_strand" displayName="Strand" internal="false"/>
              <columnAttribute name="length" displayName="Length" internal="false"/>
              <columnAttribute name="organism" displayName="Species" internal="true" inReportMaker="true"/>
        </attributeQueryRef>

        <attributeQueryRef ref="OrfAttributes.OrfAttrs">
            <columnAttribute name="source_id" internal="true"/>
            <columnAttribute name="sequence" />
        </attributeQueryRef>

        <textAttribute name="overview" displayName="Overview" inReportMaker="false">
           <text>
                <![CDATA[
                Open Reading Frame $$source_id$$ from $$nas_id$$.
            ]]>
           </text>
       </textAttribute>

	   <textAttribute name="orf_location_text" displayName="Location"
		       internal="false" inReportMaker="true">
          <text>
	      <![CDATA[
                 $$nas_id$$: $$orf_start_text$$ - $$orf_end_text$$ ($$orf_strand$$)
	      ]]>
          </text>
        </textAttribute>           

        <table name="UniqueMassSpecPeptides" displayName="Mass Spec Peptide Summary"
               queryRef="OrfTables.UniqueMassSpecPeptides">
          <columnAttribute name="sequence"   displayName="Sequence"/>
          <columnAttribute name="start_min"  displayName="Start"     />
          <columnAttribute name="end_max"    displayName="End"       />
          <columnAttribute name="count"      displayName="Count"     />
        </table>

        </recordClass>
    </recordClassSet>
    
    <recordClassSet name="ContigRecordClasses">
        
        <!-- ContigRecordClasses.ContigRecordClass -->
        <recordClass idPrefix="" 
          name="ContigRecordClass" type="Contig">

  <reporter name="tabular" displayName="Summary - tab delimited"
                    implementation="org.gusdb.wdk.model.report.TabularReporter"/>
          <reporter name="gff3" displayName="Summary - GFF3"
                    implementation="org.apidb.apicommon.model.report.Gff3Reporter"/>
          <reporter name="fullRecord" displayName="Detailed - text"
                    implementation="org.gusdb.wdk.model.report.FullRecordReporter"/>
          <reporter name="srt" displayName="Sequence - configurable FASTA"
                    implementation=""/>

       
        <attributeQueryRef ref="ContigAttributes.ContigAttrs">
            <columnAttribute displayName="Sequence"   name="sequence" />
            <columnAttribute inReportMaker="false"    name="source_id"   internal="true" />
            <columnAttribute inReportMaker="false"    name="a_count"     internal="true" />
            <columnAttribute inReportMaker="false"    name="c_count"     internal="true" />
            <columnAttribute inReportMaker="false"    name="g_count"     internal="true" />
            <columnAttribute inReportMaker="false"    name="t_count"     internal="true" />
            <columnAttribute inReportMaker="false"    name="other_count" internal="true" />
            <columnAttribute displayName="length"     name="length"      internal="true" />
            <columnAttribute inReportMaker="false"    name="secondary_identifier"  internal="true" />
            <columnAttribute inReportMaker="false"    name="chromosomemappingtext" internal="true" />
            <columnAttribute displayName="Species"    name="organism"     internal="true" />
            <columnAttribute inReportMaker="false"    name="cryptocyc_db" internal="true" />
            <columnAttribute inReportMaker="false"    name="extdbname"    internal="true" />
        </attributeQueryRef>
                
            
        <attributeQueryRef ref="ContigAttributes.ExternalDbInfo">
           <columnAttribute displayName="External DB Name" name="externalDbName"
                                 inReportMaker="false"
                                 internal="true"/>
           <columnAttribute displayName="External DB Version" name="externalDbVersion"
                                 inReportMaker="false"
                                 internal="true"/>
 
        </attributeQueryRef>
          <attributeQueryRef ref="DataDumpQueries.SequenceGffAttrs">
            <columnAttribute displayName="SeqId" name="gff_seqid" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Data Source" name="gff_source" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Feature Type" name="gff_type" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Start" name="gff_fstart" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="End" name="gff_fend" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Score" name="gff_score" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Strand" name="gff_strand" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Reading Frame" name="gff_phase" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="ID" name="gff_attr_id" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Name" name="gff_attr_name" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="description" name="gff_attr_description" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Genome Size" name="gff_attr_size" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Molecule type" name="gff_attr_molecule_type" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Organism name" name="gff_attr_organism_name" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Translation table" name="gff_attr_translation_table" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Topology" name="gff_attr_topology" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Localization" name="gff_attr_localization" inReportMaker="false" internal="true"/>
            <columnAttribute displayName="Sequence" name="gff_sequence" inReportMaker="false" internal="true"/>
          </attributeQueryRef>
          
          <table name="SequenceGffDbxrefs"
            displayName="Sequence DbXrefs"
            queryRef="DataDumpQueries.SequenceGffDbxrefs" inReportMaker="false">
            <columnAttribute displayName="Dbxref" name="gff_dbxref"/>
          </table>
          
          
        <textAttribute name="overview" displayName="Overview" inReportMaker="false">
           <text>
                <![CDATA[
                Residue counts: <b>A</b>:$$a_count$$, <b>T</b>:$$t_count$$, <b>C</b>:$$c_count$$, 
                <b>G</b>:$$g_count$$, <b>other</b>:$$other_count$$<br>
                Length: $$length$$<br>
                $$chromosomemappingtext$$
            ]]>
           </text>
       </textAttribute>

         <textAttribute name="GBrowse" inReportMaker="false">
            <text>
                 <![CDATA[
                <a href="/@CGI_OR_MOD@/gbrowse/cryptodb/?name=$$primaryKey$$:1-$$length$$;enable=AnnotatedGenes">view</a>
                ]]>
            </text>
         </textAttribute>

       <textAttribute name="ptoolscontigurl" displayName="" internal="true" inReportMaker="false">
         <text>
              <![CDATA[
                  <a href="@PATHWAYTOOLS_CONTIG_URL@">CryptoCyc Metabolic Pathway Database</a>
              ]]>
         </text>
      </textAttribute>
       <textAttribute name="genbankcontigurl" displayName="" internal="true"  inReportMaker="false">
         <text>
              <![CDATA[
                  <a href="@GENBANK_CONTIG_ID_URL@">GenBank Record</a>
              ]]>
         </text>
      </textAttribute>
       <textAttribute name="genebycontigurl" displayName="" internal="true" inReportMaker="false">
         <text>
              <![CDATA[
                  <a href="@GENE_BY_CONTIG_URL@">Lookup Genes on this Contig</a>
              ]]>
         </text>
      </textAttribute>
      <table name="UserComments"
             displayName="User Comments"
             queryRef="SequenceTables.SequenceComments">
        <columnAttribute name="comment_id" internal="true"/>
        <columnAttribute name="stable_id" internal="true"/>
        <columnAttribute name="headline" internal="true"/>
        <linkAttribute name="headline_link" 
                        displayName="Headline"
                        visible="$$headline$$">
            <url>
            <![CDATA[showRecord.do?name=UserCommentsRecordClasses.SequenceCommentsClass&project_id=&primary_key=$$stable_id$$#$$comment_id$$]]>
            </url>
        </linkAttribute>
        <columnAttribute name="user_name" displayName="Made by"/>
        <columnAttribute name="organization" displayName="Affiliation"/>
        <columnAttribute name="comment_date" displayName="Date"/>
      </table>

       </recordClass>
    </recordClassSet>

    <recordClassSet name="AssemblyRecordClasses">

        <!-- AssemblyRecordClasses.AssemblyRecordClass -->
        <recordClass idPrefix="" 
          name="AssemblyRecordClass" type="EST Cluster"
          attributeOrdering="reference">

        <table name="AlignmentInfoParvum"
               displayName="Alignments to &lt;i&gt;C. parvum&lt;/i&gt; contigs"
               queryRef="AssemblyTables.AlignmentInfoParvum">
            <columnAttribute inReportMaker="false" name="id"      internal="true" />
            <columnAttribute inReportMaker="false" name="contig_p"        internal="true" />
            <columnAttribute inReportMaker="false" name="target_start_p"  internal="true" />
            <columnAttribute inReportMaker="false" name="target_end_p"    internal="true" />
            <columnAttribute inReportMaker="false" name="context_start_p" internal="true" />
            <columnAttribute inReportMaker="false" name="context_end_p"   internal="true" />
            <linkAttribute displayName="Contig" name="alignedcontig_p" visible="$$contig_p$$">
                 <url>
                    <![CDATA[
                    showRecord.do?name=ContigRecordClasses.ContigRecordClass&id=$$contig_p$$&modgbrowse=startOverride=$$target_start_p$$:endOverride=$$target_end_p$$
                    ]]>
                 </url>
            </linkAttribute>
            <linkAttribute displayName="" name="alignmentlink_p" visible="View Alignment">
                 <url>
                    <![CDATA[
                    /@CGI_OR_MOD@/gbrowse/cryptodb/?name=$$contig_p$$%3A$$context_start_p$$-$$context_end_p$$;width=550;label=Gene;label=EST;label=Cluster;h_feat=$$id$$
                    ]]>
                 </url>
            </linkAttribute>
        </table>  
        
        <table name="AlignmentInfoHominis"
               displayName="Alignments to &lt;i&gt;C. hominis&lt;/i&gt; contigs" 
               queryRef="AssemblyTables.AlignmentInfoHominis">
            <columnAttribute inReportMaker="false" name="id"      internal="true" />
            <columnAttribute inReportMaker="false" name="contig_h"        internal="true" />
            <columnAttribute inReportMaker="false" name="target_start_h"  internal="true" />
            <columnAttribute inReportMaker="false" name="target_end_h"    internal="true" />
            <columnAttribute inReportMaker="false" name="context_start_h" internal="true" />
            <columnAttribute inReportMaker="false" name="context_end_h"   internal="true" />
            <linkAttribute displayName="Contig" name="alignedcontig_h" visible="$$contig_h$$">
                 <url>
                    <![CDATA[
                    showRecord.do?name=ContigRecordClasses.ContigRecordClass&id=$$contig_h$$&modgbrowse=startOverride=$$target_start_h$$:endOverride=$$target_end_h$$
                    ]]>
                 </url>
            </linkAttribute>
            <linkAttribute displayName="" name="alignmentlink_h" visible="View Alignment">
                 <url>
                    <![CDATA[
                    /@CGI_OR_MOD@/gbrowse/cryptodb/?name=$$contig_h$$%3A$$context_start_h$$-$$context_end_h$$;width=550;label=Gene;label=EST;label=Cluster;h_feat=$$id$$
                    ]]>
                 </url>
            </linkAttribute>
        </table>         
       
        <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
        <textAttribute name="reference" displayName="Sequence Attribution" internal="true">
           <text>
                <![CDATA[
                <font size="-1">CAP4 clustering by CryptoDB.org. EST sequences as individually attributed.</font>
                ]]>
           </text>
        </textAttribute>
           
           
       </recordClass>
    </recordClassSet>


    <recordClassSet name="EstRecordClasses">

        <!-- EstRecordClasses.EstRecordClass -->
        <recordClass idPrefix="" 
          name="EstRecordClass" type="EST">



  <reporter name="tabular" displayName="Summary - tab delimited"
                    implementation="org.gusdb.wdk.model.report.TabularReporter"/>
          <reporter name="gff3" displayName="Summary - GFF3"
                    implementation="org.apidb.apicommon.model.report.Gff3Reporter"/>
          <reporter name="fullRecord" displayName="Detailed - text"
                    implementation="org.gusdb.wdk.model.report.FullRecordReporter"/>


            <attributeQueryRef ref="EstAttributes.EstAttrs">
                <columnAttribute name="sequence" displayName="Sequence" /> 
                <columnAttribute name="source_id"   inReportMaker="false"  internal="true" /> 
                <columnAttribute name="a_count"     inReportMaker="false"  internal="true" /> 
                <columnAttribute name="c_count"     inReportMaker="false"  internal="true" /> 
                <columnAttribute name="g_count"     inReportMaker="false"  internal="true" /> 
                <columnAttribute name="t_count"     inReportMaker="false"  internal="true" /> 
                <columnAttribute name="other_count" inReportMaker="false"  internal="true" /> 
                <columnAttribute name="length"      displayName="length"   internal="true" /> 
                <columnAttribute name="primer"      inReportMaker="false"  internal="true" /> 
                <columnAttribute name="dbest_name"  displayName="Library"  internal="true" /> 
                <columnAttribute name="vector"      displayName="Vector"   internal="true" /> 
                <columnAttribute name="stage"       displayName="Stage"    internal="true" /> 
                <columnAttribute name="organism"    displayName="Organism" internal="true" /> 
                <columnAttribute name="extdbname"   inReportMaker="false"  internal="true" /> 
            </attributeQueryRef>
            
            <attributeQueryRef ref="EstAttributes.Cluster">
                <columnAttribute inReportMaker="false" name="na_sequence_id" internal="true" />
                <columnAttribute inReportMaker="false" name="number_of_contained_sequences" internal="true" />
            </attributeQueryRef>
            
            <attributeQueryRef ref="EstAttributes.Reference">
                <columnAttribute inReportMaker="false" name="author"      internal="true" />
                <columnAttribute inReportMaker="false" name="affiliation" internal="true" />
                <columnAttribute inReportMaker="false" name="address"     internal="true" />
            </attributeQueryRef>
            
            <table name="ClusterMates" 
                   displayName="Other ESTs that Cluster with this EST:" 
                   queryRef="EstTables.ClusterMates">
                <columnAttribute displayName="ID" name="mate_id" internal="true" />
                <linkAttribute displayName="ID" name="mate_link" visible="$$mate_id$$">
                     <url>
                        <![CDATA[showRecord.do?name=EstRecordClasses.EstRecordClass&project_id=&primary_key=$$mate_id$$]]>
                     </url>
                </linkAttribute>
                
                <!-- not clustering with mRNA's this release, so turn off mate_type -->
                <columnAttribute displayName="EST/mRNA" name="mate_type"  internal="true" />
            </table>
            
            <table name="AlignmentInfo" 
                   displayName="Alignments to &lt;i&gt;C. parvum&lt;/i&gt; contigs"
                   queryRef="EstTables.AlignmentInfo">  
                <columnAttribute inReportMaker="false"  name="accession"    internal="true" />
                <columnAttribute inReportMaker="false"  name="contig"       internal="true" />
                <columnAttribute inReportMaker="false"  name="target_start" internal="true" />
                <columnAttribute inReportMaker="false"  name="target_end"   internal="true" />
                <columnAttribute inReportMaker="false"  name="context_start" internal="true" />
                <columnAttribute inReportMaker="false"  name="context_end"   internal="true" />
                <linkAttribute displayName="Contig" name="alignedcontig" visible="$$contig$$">
                     <url>
                        <![CDATA[showRecord.do?name=ContigRecordClasses.ContigRecordClass&id=$$contig$$&modgbrowse=showEst:startOverride=$$target_start$$:endOverride=$$target_end$$]]>
                     </url>
                </linkAttribute>
                <linkAttribute displayName="" name="alignmentlink" visible="View Alignment">
                     <url>
                        <![CDATA[
                        /@CGI_OR_MOD@/gbrowse/cryptodb/?name=$$contig$$%3A$$context_start$$-$$context_end$$;width=550;label=Gene;label=EST;label=Cluster;h_feat=$$accession$$
                        ]]>
                     </url>
                </linkAttribute>
            </table>
            
             <textAttribute name="overview" displayName="Overview">
               <text>
                    <![CDATA[
                    Library: $$dbest_name$$<br>
                    Primer: $$primer$$<br>
                    Vector: $$vector$$<br>
                    Stage:  $$stage$$<br>
                    Residue counts: <b>A</b>:$$a_count$$, <b>T</b>:$$t_count$$, <b>C</b>:$$c_count$$, 
                    <b>G</b>:$$g_count$$, <b>other</b>:$$other_count$$<br>
                    Length: $$length$$<br>
                    Link out: <a href="http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?val=$$source_id$$">NCBI</a>
                ]]>
               </text>
           </textAttribute>
           
           <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
           <!-- custom record jsp page embeds EstTables.ClusterMates with this attribute -->
           <textAttribute name="linktocluster" displayName="EST Cluster Data">
               <text>
                    <![CDATA[
                    <a href="showRecord.do?name=AssemblyRecordClasses.AssemblyRecordClass&project_id=&primary_key=$$na_sequence_id$$">View Cluster Assembly Containing this EST</a>
                ]]>
               </text>
           </textAttribute>
           
          
           <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
           <textAttribute name="reference" displayName="Sequence Attribution" internal="true">
              <text>
                   <![CDATA[
                   <font size="-1">$$author$$<br>$$affiliation$$<br> $$address$$</font>
                   ]]>
              </text>
           </textAttribute>
              
              
       </recordClass>
    </recordClassSet>


    <recordClassSet name="ProteinRecordClasses">
        
        <!-- ProteinRecordClasses.ProteinRecordClass -->
        <recordClass idPrefix="" 
            name="ProteinRecordClass" type="Protein">
            
            <attributeQueryRef ref="ProteinAttributes.ProteinAttrs">
                <columnAttribute displayName="Species" name="organism"    internal="true" />
                <columnAttribute displayName="Locus Tag" name="locus_tag" internal="true" />
                <columnAttribute name="extdbname" internal="true" />
                <columnAttribute name="citation" internal="true" />
            </attributeQueryRef>  
            <attributeQueryRef ref="ProteinAttributes.Sequence">
                <columnAttribute displayName="CDS" name="sequence" />
            </attributeQueryRef>    
            <attributeQueryRef ref="ProteinAttributes.Translation">
                <columnAttribute displayName="Predicted Protein Sequence" name="translation" />
            </attributeQueryRef>    
            <attributeQueryRef ref="ProteinAttributes.Reference">
                <columnAttribute inReportMaker="false" name="author" internal="true" />
                <columnAttribute inReportMaker="false" name="title"  internal="true" />
                <columnAttribute inReportMaker="false" name="journal_or_book_name" internal="true" />
                <columnAttribute inReportMaker="false" name="journal_vol"  internal="true" />
                <columnAttribute inReportMaker="false" name="journal_page" internal="true" />
                <columnAttribute inReportMaker="false" name="year" internal="true" />
            </attributeQueryRef>    
            <attributeQueryRef ref="ProteinAttributes.TMCount">
                <columnAttribute inReportMaker="false" displayName="Predicted TM Count" name="tmcount" internal="true" />
                <columnAttribute inReportMaker="false" name="dtext" internal="true" />
            </attributeQueryRef>    
            <attributeQueryRef ref="ProteinAttributes.SignalP">
                <columnAttribute inReportMaker="false" name="sptext"    internal="true" />
                <columnAttribute inReportMaker="false" name="start_min" internal="true" />
                <columnAttribute inReportMaker="false" name="end_max"   internal="true" />
            </attributeQueryRef>    

            <textAttribute name="overview" displayName="Overview">
               <text>
                    <![CDATA[
                    This <b><i>$$organism$$</i></b> protein encoded by  
                    <a href="showRecord.do?name=GeneRecordClasses.GeneRecordClass&project_id=&primary_key=$$locus_tag$$"><b>$$locus_tag$$</b></a></b>
                    ]]>
               </text>
           </textAttribute>

           <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
           <textAttribute name="reference" displayName="Sequence Attribution" internal="true">
              <text>
                   <![CDATA[
                       <font size="-1">$$author$$. $$title$$. 
                       $$journal_or_book_name$$ $$journal_vol$$</font>
                   ]]>
              </text>
           </textAttribute>
              
           <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
           <textAttribute name="tmdata" displayName="Predicted Protein Features" inReportMaker="false">
              <text>
                   <![CDATA[
                   /@CGI_OR_MOD@/gbrowse_img/cryptodbaa/?name=$$locus_tag$$;hmap=pbrowse;type=PfamDomains+SignalP+TMHMM+HydropathyPlot+BLASTP;width=640;embed=1
                   ]]>
              </text>
          </textAttribute>

           <!-- Protein page jsp code checks for displayName='none' and loops past such attributes.
               Instead we conditionally print the tmlegend precisely where we want it. -->
           <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
           <textAttribute name="tmlegend" inReportMaker="false">
               <text>
                    <![CDATA[
                   <br><font size='-1'><b>$$tmcount$$</b> $$dtext$$ predicted by <a href="http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0b.guide.php">TMHMM2</a></font><br>
                    <font size='-1'>A signal peptide $$sptext$$ predicted by <a href="http://www.cbs.dtu.dk/services/SignalP/abstract.php">SignalP</a></font>
                    ]]>
               </text>
           </textAttribute>
    
           <!-- custom record jsp page has a dependency on this attribute name. if you change here, change there -->
           <textAttribute name="blastpgraphic" displayName="Top 5 matches to nonredundant protein database (NRDB)" inReportMaker="false">
              <text>
                   <![CDATA[
                   /cgi-bin/blastp?name=$$locus_tag$$;embed=1
                   ]]>
              </text>
          </textAttribute>
           
        </recordClass>
    </recordClassSet>
    
    <!-- Gene recordClasses -->
    <recordClassSet name="GeneRecordClasses">

        <!-- GeneRecordClasses.GeneRecordClass -->
        <recordClass idPrefix="" 
          name="GeneRecordClass" type="Gene">

  <reporter name="tabular" displayName="Summary - tab delimited"
                    implementation="org.gusdb.wdk.model.report.TabularReporter"/>
          <reporter name="gff3" displayName="Summary - GFF3"
                    implementation="org.apidb.apicommon.model.report.Gff3Reporter"/>
          <reporter name="fullRecord" displayName="Detailed - text"
                    implementation="org.gusdb.wdk.model.report.FullRecordReporter"/>
          <reporter name="srt" displayName="Sequence - configurable FASTA"
                    implementation=""/>

       
        <attributeQueryRef ref="GeneAttributes.GeneAttrs">
               <columnAttribute name="contig" displayName="Contig ID"  
                                 internal="true" />
                <columnAttribute name="chromosome" displayName="Chromosome" 
                                 internal="true" />
            <!--    <columnAttribute name="organism"   displayName="Species"
                                 internal="true" />-->
                <columnAttribute name="source_id"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="start_max"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="end_min"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="context_start_range"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="context_end_range"   
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="cryptocyc_db" 
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="citation" 
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="extdbname" 
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>
         
      <!--      <attributeQueryRef ref="GeneAttributes.ExtDbName">
                <columnAttribute name="contig" displayName="Contig ID"  
                                 internal="true" />
                <columnAttribute name="extdbname" 
                                 internal="true"
                                 inReportMaker="false" /> 
                <columnAttribute name="context_start_range"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="context_end_range"   
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>-->




        <!-- may14 copied latest from plasmo  -->

        <attributeQueryRef ref="GeneAttributes.Bfmv">
            <columnAttribute displayName="Gene Type" name="gene_type"
                             internal="true"/>

        <textAttribute name="location_text" displayName="Genomic Location">
              <text>
                  <![CDATA[
                  $$sequence_id$$: $$start_min_text$$ - $$end_max_text$$ ($$strand_plus_minus$$)
                  ]]>
              </text>
            </textAttribute>

            <columnAttribute name="product" displayName="Product"
                             internal="true"/>
            <columnAttribute displayName="Start Location" name="start_min"
                             internal="true"/>
            <columnAttribute displayName="Start Location"
                             name="start_min_text"
                             internal="true" inReportMaker="false"/>
            <columnAttribute displayName="End Location" name="end_max"
                             internal="true"/>
            <columnAttribute displayName="End Location"
                             name="end_max_text"
                             internal="true" inReportMaker="false"/>
            <columnAttribute displayName="CDS Length" name="cds_length"
                             internal="true"/>
            <columnAttribute displayName="Transcript Length" name="transcript_length"
                             internal="true"/>
            <columnAttribute displayName="Protein Length" name="protein_length"
                             internal="true"/>
            <columnAttribute displayName="Strand" name="strand"
                             internal="true"/>
            <columnAttribute displayName="Strand" name="strand_plus_minus"
                                 inReportMaker="false"
                                 internal="true"/>
            <columnAttribute displayName="Genomic Sequence ID"
                             name="sequence_id"/>
            <columnAttribute name="context_start" internal="true"
                             inReportMaker="false"/>
            <columnAttribute name="context_end" internal="true"
                             inReportMaker="false"/>
            <columnAttribute displayName="Number of Transmembrane Domains"
                             name="tm_count" align="center"/>
            <columnAttribute displayName="Organism" name="organism"
                            />
            <columnAttribute displayName="genus_species" name="genus_species"
                             internal="true" inReportMaker="false"/>
            <columnAttribute displayName="Taxonomy Id" name="ncbi_tax_id"
                             internal="true" inReportMaker="false"/>
            <columnAttribute displayName="PlasmoCYC DB Name"
                             name="plasmocyc_db" internal="true"
                             inReportMaker="false"/>
            <columnAttribute displayName="PlasmoCYC Gene ID"
                             name="plasmocyc_gene_id"
                             internal="true" inReportMaker="false"/>
            <columnAttribute displayName="External DB Name" name="external_db_name"
                                 inReportMaker="false"
                                 internal="true"/>
            <columnAttribute displayName="External DB Version" name="external_db_version"
                                 inReportMaker="false"
                                 internal="true"/>
            <columnAttribute displayName="Molecular Weight"
                             name="molecular_weight"/>
            <columnAttribute displayName="SO Id" name="so_id" internal="true"
                              inReportMaker="false"/>
            <columnAttribute displayName="SO Term Name" name="so_term_name"
                              inReportMaker="false"/>
            <columnAttribute displayName="SO Term Definition"
                             name="so_term_definition" inReportMaker="false"/>
            <columnAttribute displayName="Ontology Name" name="ontology_name"
                             internal="true" inReportMaker="false"/>
            <columnAttribute displayName="SO Version" name="so_version"
                             internal="true" inReportMaker="false"/>
            <columnAttribute name="anticodon" displayName="Anticodon"
                            />
            <columnAttribute name="exon_count" displayName="Number of Exons" align="center"  />
            <columnAttribute name="isoelectric_point" displayName="Isoelectric Point" align="center"/>
            <columnAttribute name="min_molecular_weight"
                             displayName="Min Molecular Wt"/>
            <columnAttribute name="max_molecular_weight"
                             displayName="Max Molecular Wt"/>
            <columnAttribute name="hydropathicity_gravy_score"
                             displayName="Hydropathicity Gravy Score"
                                 inReportMaker="false"
                                 internal="true"/>
            <columnAttribute name="aromaticity_score"
                             displayName="Aromaticity"
                             internal="true" 
                             inReportMaker="false"/>
            <columnAttribute name="species" internal="true"
                             inReportMaker="false"/>
          </attributeQueryRef>









            <attributeQueryRef ref="GeneAttributes.ExternalDbInfo">
               <columnAttribute displayName="External DB Name" name="externalDbName" internal="true"
                             inReportMaker="false"/>
               <columnAttribute displayName="External DB Version" name="externalDbVersion" internal="true"
                             inReportMaker="false"/>
            </attributeQueryRef>

            <attributeQueryRef ref="GeneAttributes.Product">
               <!-- <columnAttribute name="product" displayName="Product Description" />-->
                <columnAttribute name="so_type" displayName="Sequence Ontology Term" />
            </attributeQueryRef>  

            <attributeQueryRef ref="GeneAttributes.SGC_3D_Struct">
                <columnAttribute name="pdb_id" displayName="Structural Genomics Consortium 3D Structure"
                                 inReportMaker="false"
                                 internal="true"  />
            </attributeQueryRef>  

            <attributeQueryRef ref="GeneAttributes.ProteinId">
                <columnAttribute name="protein_id" displayName="Protein ID"
                                 internal="true" />
                <columnAttribute name="linkout"
                                 inReportMaker="false"
                                 internal="true" />
            </attributeQueryRef>
            <attributeQueryRef ref="GeneAttributes.TranscriptSequence">
                <columnAttribute displayName="Predicted RNA/mRNA Sequence (introns spliced out)"
                    name="transcript_sequence"/>
            </attributeQueryRef>
            <attributeQueryRef ref="GeneAttributes.CDS">
                <columnAttribute displayName="Coding Sequence"
                    name="cds"/>
            </attributeQueryRef>
            <attributeQueryRef ref="GeneAttributes.Translation">
                <columnAttribute name="translation" displayName="Predicted Protein Sequence" />
               <!-- <columnAttribute name="molecular_weight" displayName="Mol. Wt." 
                                 internal="true" />-->
                <columnAttribute name="molecular_weight_note"
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>  
            <attributeQueryRef ref="GeneAttributes.ExonCount">
                <columnAttribute name="exoncount"
                                 internal="true"
                                 displayName="Exon Count" />
            </attributeQueryRef>  
            <!--<attributeQueryRef ref="GeneAttributes.TMCount">
                <columnAttribute name="tmcount" 
                                 internal="true"
                                 displayName="Predicted TM Count" />
                <columnAttribute name="dtext"
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>-->  
            <attributeQueryRef ref="GeneAttributes.SignalP">
                <columnAttribute name="sptext"    
                                 internal="true"
                                 inReportMaker="false" />
                <!--<columnAttribute name="start_min"
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="end_max"
                                 internal="true"
                                 inReportMaker="false" />-->
            </attributeQueryRef>
              
            <table name="EcNumber" displayName="EC Numbers"
                   queryRef="GeneTables.EcNumber">
              <linkAttribute name="expasy_url" displayName="Accession"
                             visible="$$ec_number$$">
                   <url>
                      <![CDATA[http://us.expasy.org/enzyme/$$ec_number$$]]>
                   </url>
              </linkAttribute>
              <columnAttribute name="ec_number" 
                               internal="true"/>
              <columnAttribute name="ec_description" displayName="Description" />
              <columnAttribute name="source" displayName="Source" />
            </table>
 
            <table name="UniqueMassSpecPeptides" displayName="Mass Spec Peptide Summary"
                   queryRef="GeneTables.UniqueMassSpecPeptides">
              <columnAttribute name="sequence"   displayName="Sequence"/>
              <columnAttribute name="start_min"  displayName="Start"     />
              <columnAttribute name="end_max"    displayName="End"       />
              <columnAttribute name="count"      displayName="Count"     />
            </table>

            <table name="PfamDomains" displayName="Pfam Domains"
                   queryRef="GeneTables.PfamDomains">
              <linkAttribute name="pfam_link" displayName="Accession"
                             visible="$$accession$$">
                   <url>
                      <![CDATA[http://www.sanger.ac.uk/cgi-bin/Pfam/getacc?$$accession$$]]>
                   </url>
              </linkAttribute>
              <columnAttribute name="accession"  displayName="Accession" 
                               internal="true"/>
              <columnAttribute name="definition" displayName="Definition"/>
              <columnAttribute name="start_min"  displayName="Start"     />
              <columnAttribute name="end_max"    displayName="End"       />
              <columnAttribute name="score"      displayName="Score"     />
            </table>
            <table name="GoTerms" displayName="GO Terms"
                   queryRef="GeneTables.GoTerms">
              <columnAttribute name="go_id"
                               internal="true"/>
              <columnAttribute name="ontology" displayName="Ontology" />
              <linkAttribute name="go_id_link" displayName="GO ID" 
                             visible="$$go_id$$">
                   <url>
                      <![CDATA[http://www.godatabase.org/cgi-bin/amigo/go.cgi?action=query&view=query&query=+$$go_id$$&search_constraint=terms]]>
                   </url>
              </linkAttribute>
              <columnAttribute name="go_term_name" displayName="GO Term Name" />
              <columnAttribute name="source" displayName="Source" />
              <columnAttribute name="evidence_code" internal="true" />
              <columnAttribute name="lowercase_evidence_code" internal="true" />
              <linkAttribute name="evidence_code_link" displayName="Evidence Code" 
                             visible="$$evidence_code$$">
                   <url>
                      <![CDATA[http://www.geneontology.org/GO.evidence.shtml#$$lowercase_evidence_code$$]]>
                   </url>
              </linkAttribute>
            </table>
                        
            <table name="Notes" displayName="Notes"
                   queryRef="GeneTables.Notes">
              <columnAttribute name="comment_string" displayName="Annotation Notes"/>
            </table>
                        
            <table name="BlastP" displayName="" 
                   queryRef="GeneTables.BlastP">
                <linkAttribute name="ProteinId" displayName="Protein ID" 
                               visible="$$source_id$$">
                     <url>
                        <![CDATA[@GENBANK_CONTIG_ID_URL@]]>
                     </url>
                </linkAttribute>
                <columnAttribute name="source_id" displayName="Protein ID"
                                 internal="true" />
                <columnAttribute name="description" displayName="Description" />
                <columnAttribute name="pval" displayName="P Val" />
                <columnAttribute name="secondary_identifier" displayName="none"
                                 internal="true" inReportMaker="false" />            
            </table>
            
            <table name="Orthologs"
                   displayName="Cryptosporidium Orthologs"
                   queryRef="GeneTables.Orthologs">
              <columnAttribute name="source_id" internal="true"/>
              <linkAttribute name="gene" displayName="Gene" visible="$$source_id$$">
                   <url>
                      <![CDATA[showRecord.do?name=GeneRecordClasses.GeneRecordClass&primary_key=$$source_id$$]]>
                   </url>
              </linkAttribute>
              <columnAttribute displayName="Species" name="species"/>
              <columnAttribute displayName="Product" name="product"/>
            </table>

            <table name="Epitopes"
                displayName="Epitopes from IEDB"
                queryRef="GeneTables.Epitopes">
                <columnAttribute name="iedb_id" internal="true"/>
                <linkAttribute name="iedb_link" displayName="Epitope"
                    visible="$$iedb_id$$">
                    <url>
                        <![CDATA[
                    http://www.immuneepitope.org/httpQuery.do?dispatch=runquery&eid=$$iedb_id$$
                    ]]>
                    </url>
                </linkAttribute>
                <columnAttribute name="sequence" displayName="Sequence"/>
                <columnAttribute name="location" displayName="Location on Protein"/>
                <columnAttribute name="name" displayName="Strain"/>
                <columnAttribute name="confidence" displayName="Confidence"/>
            </table>

            <table name="UserComments"
                   displayName="User Comments"
                   queryRef="GeneTables.UserComments">
              <columnAttribute name="comment_id" internal="true"/>
              <columnAttribute name="stable_id" internal="true"/>
              <columnAttribute name="headline" internal="true"/>
              <linkAttribute name="headline_link" 
                              displayName="Headline"
                              visible="$$headline$$">
                  <url>
                  <![CDATA[showRecord.do?name=UserCommentsRecordClasses.GeneCommentsClass&project_id=&primary_key=$$stable_id$$#$$comment_id$$]]>
                  </url>
              </linkAttribute>
              <columnAttribute name="user_name" displayName="Made by"/>
              <columnAttribute name="organization" displayName="Affiliation"/>
              <columnAttribute name="comment_date" displayName="Date"/>
            </table>
          

          <table name="Aliases"
                 displayName="Aliases"
                 queryRef="GeneTables.Aliases">
            <columnAttribute displayName="Alias" name="alias"/>
          </table>


            <textAttribute name="overview" displayName="Overview"
                           inReportMaker="false">
               <text>
                    <![CDATA[
                    This <b><i>$$organism$$</i></b> gene spans positions  
                    <b>$$start_min$$</b> - <b>$$end_max$$</b> of contig 
                    <a href="showRecord.do?name=ContigRecordClasses.ContigRecordClass&id=$$contig$$"><b>$$contig$$</b></a> 
                    which maps to chromosome $$chromosome$$.</b><br><br>
                    $$molecular_weight_note$$
                    ]]>
               </text>
           </textAttribute>
  
           <textAttribute name="ptoolsgeneurl" displayName="" 
                          inReportMaker="false"
                          internal="true">
             <text>
                  <![CDATA[
                      <a href="@PATHWAYTOOLS_GENE_URL@">CryptoCyc Metabolic Pathway Database</a>
                  ]]>
             </text>
          </textAttribute>
 
           <textAttribute name="sgcurl" displayName="" 
                          inReportMaker="false"
                          internal="true">
             <text>
                  <![CDATA[
                      <a href="@SGC_URL@">Structural Genomics Consortium 3D Structure</a>
                  ]]>
             </text>
          </textAttribute>
 
         <textAttribute name="GBrowse" inReportMaker="false">
            <text>
                 <![CDATA[
                <a href="/@CGI_OR_MOD@/gbrowse/cryptodb/?name=$$contig$$%3A$$context_start$$-$$context_end$$;enable=AnnotatedGenes;h_feat=$$primaryKey$$@thistle">view</a>
                ]]>
            </text>
         </textAttribute>



         <attributeQueryRef ref="DataDumpQueries.GeneGffAttrs">
              <columnAttribute displayName="SeqId" name="gff_seqid" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Data Source" name="gff_source" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Feature Type" name="gff_type" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fstart" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fend" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Score" name="gff_score" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Strand" name="gff_strand" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Reading Frame" name="gff_phase" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="ID" name="gff_attr_id" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Name" name="gff_attr_name" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="description" name="gff_attr_description" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Locus Tag" name="gff_attr_locus_tag" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Size" name="gff_attr_size" internal="true" inReportMaker="false"/>
          </attributeQueryRef>

          <table name="gff_GeneDbxrefs"
                 displayName="Gene Exons"
                 queryRef="DataDumpQueries.GeneGffDbxrefs" inReportMaker="false">

              <columnAttribute displayName="Dbxref" name="gff_dbxref"/>
          </table>

          <table name="gff_GeneRnas"
                 displayName="Gene RNAs"
                 queryRef="DataDumpQueries.GeneRnas" internal="true" inReportMaker="false">
              <columnAttribute displayName="SeqId" name="gff_seqid" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Data Source" name="gff_source" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Feature Type" name="gff_type" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fstart" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fend" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Score" name="gff_score" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Strand" name="gff_strand" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Reading Frame" name="gff_phase" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="ID" name="gff_attr_id" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Name" name="gff_attr_name" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="description" name="gff_attr_description" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Locus Tag" name="gff_attr_locus_tag" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Size" name="gff_attr_size" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Parent" name="gff_attr_parent" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Transcript Sequence" name="gff_transcript_sequence" internal="true" inReportMaker="false"/>
          </table>

          <table name="gff_GeneCdss"
                 displayName="Gene CDSs"
                 queryRef="DataDumpQueries.GeneCdss" inReportMaker="false">
              <columnAttribute displayName="SeqId" name="gff_seqid" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Data Source" name="gff_source" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Feature Type" name="gff_type" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fstart" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fend" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Score" name="gff_score" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Strand" name="gff_strand" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Reading Frame" name="gff_phase" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="ID" name="gff_attr_id" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Name" name="gff_attr_name" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="description" name="gff_attr_description" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Locus Tag" name="gff_attr_locus_tag" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Size" name="gff_attr_size" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Parent" name="gff_attr_parent" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Coding Sequence" name="gff_coding_sequence" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Protein Sequence" name="gff_protein_sequence" internal="true" inReportMaker="false"/>
          </table>

          <table name="gff_GeneExons"
                 displayName="Gene Exons"
                 queryRef="DataDumpQueries.GeneExons" inReportMaker="false">

              <columnAttribute displayName="SeqId" name="gff_seqid" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Data Source" name="gff_source" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Feature Type" name="gff_type" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fstart" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Start" name="gff_fend" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Score" name="gff_score" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Strand" name="gff_strand" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Reading Frame" name="gff_phase" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="ID" name="gff_attr_id" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Name" name="gff_attr_name" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="description" name="gff_attr_description" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Locus Tag" name="gff_attr_locus_tag" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Size" name="gff_attr_size" internal="true" inReportMaker="false"/>
              <columnAttribute displayName="Parent" name="gff_attr_parent" internal="true" inReportMaker="false"/>
          </table>



        </recordClass>

        <!-- GeneRecordClasses.TestRecordClass -->
     <!--   <recordClass idPrefix="" 
          name="TestRecordClass" type="Gene">
       
            <attributeQueryRef ref="GeneAttributes.GeneAttrs">
                <columnAttribute name="contig" displayName="Contig ID"  
                                 internal="true" />
                <columnAttribute name="chromosome" displayName="Chromosome" 
                                 internal="true" />
                <columnAttribute name="organism"   displayName="Species"
                                 internal="true" />
                <columnAttribute name="source_id"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="start_max"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="end_min"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="context_start_range"
                                 internal="true" 
                                 inReportMaker="false" />
                <columnAttribute name="context_end_range"   
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="cryptocyc_db" 
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="citation" 
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="extdbname" 
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>
            <attributeQueryRef ref="GeneAttributes.Product">
                <columnAttribute name="product" displayName="Product Description" />
                <columnAttribute name="so_type" displayName="Sequence Ontology Term" />
            </attributeQueryRef>  
            <attributeQueryRef ref="GeneAttributes.ProteinId">
                <columnAttribute name="protein_id" displayName="Protein ID"
                                 internal="true" />
                <columnAttribute name="linkout"
                                 inReportMaker="false"
                                 internal="true" />
            </attributeQueryRef>  
            <attributeQueryRef ref="GeneAttributes.CDS">
                <columnAttribute name="sequence" displayName="Coding Sequence" />
            </attributeQueryRef>
            <attributeQueryRef ref="GeneAttributes.Translation">
                <columnAttribute name="translation" displayName="Predicted Protein Sequence" />
                <columnAttribute name="molecular_weight" displayName="Mol. Wt." 
                                 internal="true" />
                <columnAttribute name="molecular_weight_note"
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>  
            <attributeQueryRef ref="GeneAttributes.ExonCount">
                <columnAttribute name="exoncount"
                                 internal="true"
                                 displayName="Exon Count" />
            </attributeQueryRef>  
            <attributeQueryRef ref="GeneAttributes.TMCount">
                <columnAttribute name="tmcount" 
                                 internal="true"
                                 displayName="Predicted TM Count" />
                <columnAttribute name="dtext"
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>  
            <attributeQueryRef ref="GeneAttributes.SignalP">
                <columnAttribute name="sptext"    
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="start_min"
                                 internal="true"
                                 inReportMaker="false" />
                <columnAttribute name="end_max"
                                 internal="true"
                                 inReportMaker="false" />
            </attributeQueryRef>
              
            <table name="EcNumber" displayName="EC Numbers"
                   queryRef="GeneTables.EcNumber">
              <linkAttribute name="expasy_url" displayName="Accession"
                             visible="$$ec_number$$">
                   <url>
                      <![CDATA[http://us.expasy.org/enzyme/$$ec_number$$]]>
                   </url>
              </linkAttribute>
              <columnAttribute name="ec_number" 
                               internal="true"/>
              <columnAttribute name="ec_description" displayName="Description" />
              <columnAttribute name="source" displayName="Source" />
            </table>
 
            <table name="PfamDomains" displayName="Pfam Domains"
                   queryRef="GeneTables.PfamDomains">
              <linkAttribute name="pfam_link" displayName="Accession"
                             visible="$$accession$$">
                   <url>
                      <![CDATA[http://www.sanger.ac.uk/cgi-bin/Pfam/getacc?$$accession$$]]>
                   </url>
              </linkAttribute>
              <columnAttribute name="accession"  displayName="Accession" 
                               internal="true"/>
              <columnAttribute name="definition" displayName="Definition"/>
              <columnAttribute name="start_min"  displayName="Start"     />
              <columnAttribute name="end_max"    displayName="End"       />
              <columnAttribute name="score"      displayName="Score"     />
            </table>

            <table name="GoTerms" displayName="GO Terms"
                   queryRef="GeneTables.GoTerms">
              <columnAttribute name="go_id"
                               internal="true"/>
              <columnAttribute name="ontology" displayName="Ontology" />
              <linkAttribute name="go_id_link" displayName="GO ID" 
                             visible="$$go_id$$">
                   <url>
                      <![CDATA[http://www.godatabase.org/cgi-bin/amigo/go.cgi?action=query&view=query&query=+$$go_id$$&search_constraint=terms]]>
                   </url>
              </linkAttribute>
              <columnAttribute name="go_term_name" displayName="GO Term Name" />
              <columnAttribute name="source" displayName="Source" />
              <columnAttribute name="evidence_code" internal="true" />
              <columnAttribute name="lowercase_evidence_code" internal="true" />
              <linkAttribute name="evidence_code_link" displayName="Evidence Code" 
                             visible="$$evidence_code$$">
                   <url>
                      <![CDATA[http://www.geneontology.org/GO.evidence.shtml#$$lowercase_evidence_code$$]]>
                   </url>
              </linkAttribute>
            </table>
                        
            <table name="Notes" displayName="Notes"
                   queryRef="GeneTables.Notes">
              <columnAttribute name="comment_string" displayName="Annotation Notes"/>
            </table>
                        
            <table name="BlastP" displayName="" 
                   queryRef="GeneTables.BlastP">
                <linkAttribute name="ProteinId" displayName="Protein ID" 
                               visible="$$source_id$$">
                     <url>
                        <![CDATA[@GENBANK_CONTIG_ID_URL@]]>
                     </url>
                </linkAttribute>
                <columnAttribute name="source_id" displayName="Protein ID"
                                 internal="true" />
                <columnAttribute name="description" displayName="Description" />
                <columnAttribute name="pval" displayName="P Val" />
                <columnAttribute name="secondary_identifier" displayName="none"
                                 internal="true" inReportMaker="false" />            
            </table>
            
            <table name="Orthologs"
                   displayName="Cryptosporidium Orthologs"
                   queryRef="GeneTables.Orthologs">
              <columnAttribute name="source_id" internal="true"/>
              <linkAttribute name="gene" displayName="Gene" visible="$$source_id$$">
                   <url>
                      <![CDATA[showRecord.do?name=GeneRecordClasses.GeneRecordClass&primary_key=$$source_id$$]]>
                   </url>
              </linkAttribute>
              <columnAttribute displayName="Species" name="species"/>
              <columnAttribute displayName="Product" name="product"/>
            </table>

            <textAttribute name="overview" displayName="Overview"
                           inReportMaker="false">
               <text>
                    <![CDATA[
                    This <b><i>$$organism$$</i></b> gene spans positions  
                    <b>$$start_max$$</b> - <b>$$end_min$$</b> of contig 
                    <a href="showRecord.do?name=ContigRecordClasses.ContigRecordClass&id=$$contig$$"><b>$$contig$$</b></a> 
                    which maps to chromosome <b>$$chromosome$$.</b><br><br>
                    $$molecular_weight_note$$
                    ]]>
               </text>
           </textAttribute>
  
           <textAttribute name="otherInfo" displayName="Links to Other Web Pages" 
                          inReportMaker="false">
             <text>
                  <![CDATA[
                      <a href="@PATHWAYTOOLS_GENE_URL@">CryptoCyc Metabolic Pathway Database</a><br>
                      $$linkout$$
                  ]]>
             </text>
          </textAttribute>
     
        </recordClass>-->

    </recordClassSet>

    <recordClassSet name="UtilityRecordClasses">
    
        <!-- UtilityRecordClasses.SiteInfo -->
        <recordClass idPrefix="" 
          name="SiteInfo" type="Gene">
<!--
            <attributeQueryRef ref="UtilityQueries.PingCrypto">
                <columnAttribute name="cryptolink" internal="true" />
            </attributeQueryRef>

            <attributeQueryRef ref="UtilityQueries.PingToxo">
                <columnAttribute name="toxolink" internal="true" />
            </attributeQueryRef>

            <attributeQueryRef ref="UtilityQueries.PingPlasmo">
                <columnAttribute name="plasmolink" internal="true" />
            </attributeQueryRef>
-->
            <attributeQueryRef ref="UtilityQueries.CurrentInstance">
                <columnAttribute name="global_name" internal="true" />
                <columnAttribute name="host_name" internal="true" />
                <columnAttribute name="address" internal="true" />
                <columnAttribute name="version" internal="true" />
                <columnAttribute name="system_date" internal="true" />
                <columnAttribute name="login" internal="true" />
            </attributeQueryRef>

            <attributeQueryRef ref="UtilityQueries.CacheState">
                <columnAttribute name="cache_count" internal="true" />
            </attributeQueryRef>
 
            <attributeQueryRef ref="UtilityQueries.ApiCommDbLink">
                <columnAttribute name="apicomm_global_name" internal="true" />
            </attributeQueryRef>

            <table name="AllDbLinks" displayName="All DBLinks"
                   queryRef="UtilityQueries.AllDbLinks">
                <columnAttribute name="owner"      displayName="owner" />
                <columnAttribute name="db_link"   displayName="db_link" />
                <columnAttribute name="username"  displayName="username" />
                <columnAttribute name="host"      displayName="host" />
                <columnAttribute name="created"   displayName="created" />
            </table>

           <textAttribute name="apicommMacro" displayName="Links to Other Web Pages" 
                          inReportMaker="false">
             <text>
                  LOGIN_DBLINK=@LOGIN_DBLINK@
             </text>
          </textAttribute>

        </recordClass>
        
    </recordClassSet>
    
    <recordClassSet name="InterproTermClasses">
        <!-- InterproTermClasses.InterproTermClass -->
        <recordClass idPrefix="" 
          name="InterproTermClass" type="Ontology">
            <table name="InterproTerms" displayName="Pfam Terms"
                   queryRef="UtilityTables.PfamTermList">
                <columnAttribute name="accession"/>
                <columnAttribute name="name"/>
                <columnAttribute name="description"/>
            </table>
        </recordClass>
        
    </recordClassSet>

    <recordClassSet name="UserCommentsRecordClasses">
        <!-- UserCommentsRecordClasses.GeneCommentsClass -->
        <recordClass idPrefix=""
         name="GeneCommentsClass" 
         type="GeneComments">
            <table name="UserComments"
             displayName="User Comments"
             queryRef="UserCommentTables.GeneComments">
                <columnAttribute name="comment_id" displayName="Comment ID"/>
                <columnAttribute name="headline" displayName="Headline"/>
                <columnAttribute name="content" displayName="Comment"/>
                <columnAttribute name="location_string" displayName="Location(s)"/>
                <columnAttribute name="user_name" displayName="Made by"/>
                <columnAttribute name="organization" displayName="Affiliation"/>
                <columnAttribute name="comment_date" displayName="Date"/>
                <columnAttribute name="project_name_version" displayName="Version"/>
                <columnAttribute name="review_status_id" displayName="Review Status"/>
            </table>
        </recordClass>
        
        <!-- UserCommentsRecordClasses.SequenceCommentsClass -->
        <recordClass idPrefix=""
         name="SequenceCommentsClass" 
         type="SequenceComments">
            <table name="UserComments"
             displayName="User Comments"
             queryRef="UserCommentTables.SequenceComments">
                <columnAttribute name="comment_id" displayName="Comment ID"/>
                <columnAttribute name="headline" displayName="Headline"/>
                <columnAttribute name="content" displayName="Comment"/>
                <columnAttribute name="location_string" displayName="Location(s)"/>
                <columnAttribute name="user_name" displayName="Made by"/>
                <columnAttribute name="organization" displayName="Affiliation"/>
                <columnAttribute name="comment_date" displayName="Date"/>
                <columnAttribute name="project_name_version" displayName="Version"/>
                <columnAttribute name="review_status_id" displayName="Review Status"/>
            </table>
        </recordClass>
        
    </recordClassSet>


    <!-- *************** -->
    <!-- model querySets -->
    <!-- *************** -->

    <!--
    A "query" obtains tabular values from a data source.  It has columns
    and parameters.  So far, only SQL data sources are supported, but others,
    such as flat files are coming.  

    Queries are used for different purposes: providing primary keys to a 
    question; providing attributes and tables to a record; and, providing
    vocabularies to vocabulary parameters.

    A "query set" is a grouping of queries.  It is useful in organizing the
    model xml file.  

    The full name of a query is of the form "set_name.name."
    -->


<!-- //////////  ORFPAGE ORF PAGE //////////// -->
    <!-- Queries that retrieve attributes of Contigs -->
    <querySet name="OrfAttributes">

        <!-- OrfAttributes.Bfmv -->
        <sqlQuery name="Bfmv" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="nas_id"  sortingTable="apidb.OrfAttributes" />
            <!--column name="orf_id" sortingTable="apidb.OrfAttributes" sortingColumn="source_id" /-->
            <column name="length" sortingTable="apidb.OrfAttributes" />
            <column name="organism" sortingTable="apidb.OrfAttributes" />
            <column name="orf_start" sortingTable="apidb.OrfAttributes" sortingColumn="start_min" />
            <column name="orf_end" sortingTable="apidb.OrfAttributes" sortingColumn="end_max" />
            <column name="orf_start_text" sortingTable="apidb.OrfAttributes" sortingColumn="start_min" />
            <column name="orf_end_text" sortingTable="apidb.OrfAttributes" sortingColumn="end_max" />
            <column name="orf_strand" sortingTable="apidb.OrfAttributes" sortingColumn="is_reversed" />
            <sql> 
            <![CDATA[           
                SELECT bfmv.source_id, bfmv.nas_id, bfmv.length, 
                       bfmv.ncbi_tax_id,
                      '<i>' || 
                         SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                         SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) ||
                         '</i>' as organism,
                      bfmv.start_min as orf_start,bfmv.end_max as orf_end,
                      trim(to_char(bfmv.end_max,'999,999,999')) as orf_end_text,
                      trim(to_char(bfmv.start_min,'999,999,999')) as orf_start_text,
                      decode(bfmv.is_reversed,0,'+',1,'-',null) as orf_strand
                FROM apidb.OrfAttributes bfmv
                WHERE bfmv.source_id = '$$primaryKey$$'
        ]]>
           </sql>
        </sqlQuery>

        <!-- OrfAttributes.OrfAttrs -->
        <sqlQuery name="OrfAttrs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="sequence" />
            <sql> 
            <![CDATA[           
            SELECT
                tn.name,
                t.source_id as source_id,
                taas.sequence
               FROM dots.externalNASequence enas,
                    dots.miscellaneous t,
                    dots.translatedaafeature taaf,
                    dots.translatedaasequence taas,
                    sres.taxonname tn,
                    sres.sequenceontology so
              WHERE t.na_feature_id = taaf.na_feature_id
                AND taaf.aa_sequence_id = taas.aa_sequence_id
                AND enas.na_sequence_id = t.na_sequence_id 
                AND enas.taxon_id = tn.taxon_id
                AND tn.name_class = 'scientific name'
                AND t.sequence_ontology_id = so.sequence_ontology_id
                AND so.term_name = 'ORF'
                AND t.source_id = '$$primaryKey$$'
        ]]>
           </sql>
        </sqlQuery>

    </querySet>
<!-- //////////  CONTIGPAGE CONTIG PAGE //////////// -->
    <!-- Queries that retrieve attributes of Contigs -->
    <querySet name="ContigAttributes">

        <!-- ContigAttributes.ContigAttrs -->
        <sqlQuery name="ContigAttrs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="sequence" />
            <column name="a_count" />
            <column name="c_count" />
            <column name="g_count" />
            <column name="t_count" />
            <column name="other_count" />
            <column name="length" />
            <column name="secondary_identifier" />
            <column name="chromosomemappingtext" />
            <column name="organism" />
            <column name="cryptocyc_db" />
            <column name="extdbname" />
            <sql> 
            <![CDATA[           
            SELECT enas.sequence, 
            enas.source_id, 
            enas.source_id as secondary_identifier, 
            DECODE(src.chromosome, NULL, 'This contig has not been mapped to a chromosome.', 
            'This contig has been mapped to chromosome ' || src.chromosome || '.') as chromosomemappingtext, 
            enas.a_count, 
            enas.c_count, 
            enas.g_count, 
            enas.t_count, 
            (length - (a_count + c_count + g_count + t_count)) as other_count, 
            enas.length, 
            '<i>' || SUBSTR(tn.name, 1, 1) || '.&nbsp;' || 
                 SUBSTR(tn.name, INSTR(tn.name, ' ', 1, 1) +1) || '</i>' as organism,
            DECODE(
              substr(
                tn.name, 
                instr(ltrim(tn.name), ' ', 1, 1)+1, 
                instr(ltrim(tn.name)||' ', ' ', 1, 2) - instr(tn.name, ' ', 1, 1) -1
              ),
              'parvum', 'cparvum', 'hominis') as cryptocyc_db,
            ed.name as extdbname
            FROM dots.externalnasequence enas, 
            dots.source src, 
            sres.taxonname tn,
            sres.externaldatabaserelease edr,
            sres.externaldatabase ed
            WHERE enas.na_sequence_id = src.na_sequence_id (+)
            AND enas.taxon_id = tn.taxon_id
            AND tn.name_class = 'scientific name'
            AND enas.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND enas.source_id = '$$primaryKey$$'
             ]]>
           </sql>
        </sqlQuery>

        <!-- ContigAttributes.ExternalDbInfo -->
        <sqlQuery name="ExternalDbInfo" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="externalDbName"/>
            <column name="externalDbVersion"/>
            <sql>
              <![CDATA[
              SELECT ed.name AS externalDbName, edr.version AS externalDbVersion
              FROM dots.externalnasequence enas, 
                      sres.externaldatabase ed, 
                      sres.externaldatabaserelease edr
              WHERE enas.external_database_release_id = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
                  AND source_id = '$$primaryKey$$' 
              ]]>
            </sql>
        </sqlQuery>

    </querySet>
<!-- //////////  END CONTIGPAGE CONTIG PAGE //////////// -->
    
    
<!-- //////////  ESTPAGE EST PAGE //////////// -->
    <!-- Queries that retrieve attributes of ESTs -->
    <querySet name="EstAttributes">

        <!-- EstAttributes.EstAttrs -->
        <sqlQuery name="EstAttrs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/>   
            <column name="source_id" />
            <column name="sequence" />
            <column name="a_count" />
            <column name="c_count" />
            <column name="g_count" />
            <column name="t_count" />
            <column name="other_count" />
            <column name="length" />
            <column name="primer" />
            <column name="vector" />
            <column name="stage" />
            <column name="dbest_name" />
            <column name="organism" />
            <column name="extdbname" />
            <sql> 
            <![CDATA[           
           SELECT enas.source_id,
                   enas.sequence,  
                   e.seq_primer as primer, 
                   enas.a_count, 
                   enas.c_count, 
                   enas.g_count, 
                   enas.t_count, 
                   (length - (a_count + c_count + g_count + t_count)) as other_count, 
                   enas.length, 
                   l.dbest_name,
           nvl(l.vector, 'unknown') as vector,
           nvl(l.stage, 'unknown') as stage,
                   '<i>' || SUBSTR(tn.name, 1, 1) || '.&nbsp;' || 
                   SUBSTR(tn.name, INSTR(tn.name, ' ', 1, 1) +1) || '</i>' as organism,
                   ed.name as extdbname
            FROM  dots.est e, 
                  dots.externalnasequence enas, 
                  dots.library l,
                  sres.taxonname tn,
                  sres.externaldatabase ed,
                  sres.externaldatabaserelease edr
            WHERE e.na_sequence_id = enas.na_sequence_id 
            AND   e.library_id = l.library_id
            AND   enas.taxon_id = tn.taxon_id
            AND   tn.name_class = 'scientific name'
            AND   enas.external_database_release_id = edr.external_database_release_id
            AND   edr.external_database_id = ed.external_database_id
            AND   enas.source_id = '$$primaryKey$$'
            ]]>
           </sql>
        </sqlQuery>
           
        <!-- EstAttributes.Cluster -->
        <sqlQuery name="Cluster" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="na_sequence_id" />
            <column name="number_of_contained_sequences" />
            <sql>
            <![CDATA[           
            SELECT enas.source_id,
                   asmbly.na_sequence_id, 
                   asmbly.number_of_contained_sequences 
            FROM   dots.assembly asmbly, dots.assemblysequence aseq, dots.ExternalNASequence enas
            WHERE  aseq.assembly_na_sequence_id = asmbly.na_sequence_id 
            AND    aseq.na_sequence_id = enas.na_sequence_id
            AND    enas.source_id = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>

        <!-- EstAttributes.Reference -->
        <sqlQuery name="Reference" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="author" />
            <column name="affiliation" />
            <column name="address" />
            <sql>
            <![CDATA[           
            SELECT e.accession as source_id,
                   c.name as author, 
                   c.address1 as affiliation, 
                   c.address2 as address
            FROM dots.est e, sres.contact c
            WHERE e.contact_id = c.contact_id
            AND e.accession = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>
    </querySet>
<!-- //////////  END ESTPAGE EST PAGE //////////// -->

    <!-- //////////  ASSEMBLYPAGE ASSEMBLY PAGE //////////// -->
    <!-- Queries that retrieve attributes of EST Assemblies -->
 
 <!-- //////////  END ASSEMBLYPAGE ASSEMBLY PAGE //////////// -->
    
    
    <!-- //////////  PROTEINPAGE PROTEIN PAGE //////////// -->
    <!-- Queries that retrieve attributes of Contigs -->
    <querySet name="ProteinAttributes">
        
        <!-- ProteinAttributes.ProteinAttrs -->
        <sqlQuery name="ProteinAttrs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/>   
            <column name="protein_id" />
            <column name="organism" />
            <column name="locus_tag" />
            <column name="extdbname" />
            <column name="citation" />
            <sql>
            <![CDATA[           
                SELECT t.protein_id,
                       t.source_id as locus_tag,
                '<i>' || SUBSTR(tn.name, 1, 1) 
                      || '.&nbsp;' 
                      || SUBSTR(tn.name, INSTR(tn.name, ' ', 1, 1) +1) 
                      || '</i>' as organism,
                         ed.name as extdbname,
                         gf.citation
                FROM dots.transcript t, 
                     dots.rnatype r,
                     dots.genefeature gf,
                     dots.externalnasequence enas,
                     sres.taxonname tn,
                     sres.externaldatabaserelease edr,
                     sres.externaldatabase ed
                WHERE gf.na_feature_id = r.parent_id
                AND r.na_feature_id = t.parent_id
                AND t.na_sequence_id = enas.na_sequence_id
                AND enas.taxon_id = tn.taxon_id
                AND tn.name_class = 'scientific name'
                AND enas.external_database_release_id = edr.external_database_release_id
                AND edr.external_database_id = ed.external_database_id
                AND t.protein_id = '$$primaryKey$$'
              ]]>
            </sql>
        </sqlQuery>
        
        
        <!-- ProteinAttributes.Sequence (CDS)-->
        <sqlQuery name="Sequence" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="protein_id" />
            <column name="sequence" />
            <sql>
            <![CDATA[           
                SELECT t.protein_id,
                       sequence 
                FROM   dots.SplicedNaSequence snas, 
                       dots.transcript t,
                       sres.sequenceontology so
                WHERE  snas.source_id = t.source_id 
                AND    snas.sequence_ontology_id = so.sequence_ontology_id
                AND    so.term_name = 'CDS'
                AND    t.protein_id = 'EAL38458.1'
            ]]>
           </sql>
        </sqlQuery>

        <!-- ProteinAttributes.Translation -->
        <sqlQuery name="Translation" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="protein_id" />
            <column name="translation" />
            <sql>
            SELECT secondary_identifier as protein_id,
                   sequence as translation
            FROM   dots.translatedaasequence 
            WHERE  secondary_identifier = '$$primaryKey$$'
           </sql>
        </sqlQuery>

        <!-- ProteinAttributes.TMCount -->
        <sqlQuery name="TMCount" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="protein_id" />
            <column name="tmcount" />
            <column name="dtext" />
             <sql>
            <!-- LoadTMDomains.pm no longer adds an entry when protein has
                 0 TMDs, hence the funky sql -->
            <![CDATA[           
            SELECT protein_id,
                   tmcount,
                   CASE  
                       WHEN B.tmcount is null THEN '0 domains' 
                       WHEN B.tmcount = 1 THEN 'domain' 
                       ELSE 'domains' 
                   END AS dtext  
            FROM
                (SELECT t.protein_id,
                        t.source_id 
                 FROM   dots.transcript t
                 WHERE  t.protein_id = '$$primaryKey$$') A,
                (SELECT tmf.predicted_helices AS tmcount, 
                        t.source_id
                  FROM dots.transcript t, 
                       dots.translatedaafeature taaf, 
                       dots.TransMembraneAAFeature tmf,
                       core.algorithm alg
                  WHERE t.na_feature_id = taaf.na_feature_id  
                    AND taaf.aa_sequence_id = tmf.aa_sequence_id 
                    AND t.protein_id = '$$primaryKey$$'
                    AND tmf.prediction_algorithm_id = alg.algorithm_id
                    AND alg.name = 'TMHMM') B
            where A.source_id = B.source_id(+)
            ]]>
            </sql>
        </sqlQuery>

        <!-- ProteinAttributes.SignalP -->
        <sqlQuery name="SignalP" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="protein_id" />
            <column name="sptext" />
            <column name="start_min" />
            <column name="end_max" />
             <sql>
            <![CDATA[           
            SELECT
                t.protein_id,
                CASE WHEN 
                  maxy_conclusion=1 
                  AND maxc_conclusion=1 
                  AND maxs_conclusion=1 
                  AND means_conclusion=1 
                THEN 'was' 
                ELSE 'was not' 
                END AS sptext, 
                aal.start_min, aal.end_max  
            FROM dots.signalpeptidefeature spf, 
                 dots.aalocation aal, 
                 dots.translatedaasequence tas, 
                 dots.translatedaafeature taf, 
                 dots.transcript t 
            WHERE spf.aa_feature_id = aal.aa_feature_id 
              AND tas.aa_sequence_id=spf.aa_sequence_id 
              AND tas.aa_sequence_id = taf.aa_sequence_id  
              AND taf.na_feature_id = t.na_feature_id  
              AND t.protein_id = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>


        <!-- ProteinAttributes.Reference -->
        <sqlQuery name="Reference" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="protein_id" />
            <column name="author" />
            <column name="title" />
            <column name="journal_or_book_name" />
            <column name="journal_vol" />
            <column name="journal_page" />
            <column name="year" />
            <sql>
            <![CDATA[           
            SELECT t.protein_id,
                   ref.author, 
                   ref.title, 
                   ref.journal_or_book_name, 
                   ref.journal_vol, 
                   ref.journal_page, 
                   ref.year
            FROM sres.reference ref, 
                 dots.NASequenceRef nasr, 
                 dots.externalnasequence enas, 
                 dots.transcript t
            WHERE ref.reference_id = nasr.reference_id 
            AND nasr.na_sequence_id = enas.na_sequence_id 
            AND enas.na_sequence_id = t.na_sequence_id
            AND ref.title != 'Direct Submission'
            AND t.protein_id = '$$primaryKey$$' 
            ]]>
        </sql>
        </sqlQuery>
    </querySet>
    <!-- //////////  END PROTEINPAGE PROTEIN PAGE //////////// -->
    
    

<!-- //////////  GENEPAGE GENE PAGE //////////// -->
    <!-- Queries that retrieve attributes of Genes -->

    <querySet name="GeneAttributes">


<sqlQuery name="Bfmv" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="source_id" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="gene_type" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="product" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="start_min" sortingTable="apidb.geneattributes"/>
            <column name="end_max" sortingTable="apidb.geneattributes"/>
            <column name="start_min_text" sortingTable="apidb.geneattributes" sortingColumn="start_min"/>
            <column name="end_max_text" sortingTable="apidb.geneattributes" sortingColumn="end_max"/>
            <column name="transcript_length" sortingTable="apidb.geneattributes"/>
            <column name="cds_length" sortingTable="apidb.geneattributes"/>
            <column name="protein_length" sortingTable="apidb.geneattributes"/>
            <column name="context_start" sortingTable="apidb.geneattributes"/>
            <column name="context_end" sortingTable="apidb.geneattributes"/>
            <column name="strand" sortingTable="apidb.geneattributes"/>
            <column name="strand_plus_minus" sortingTable="apidb.geneattributes" sortingColumn="strand"/>
            <column name="sequence_id" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="plasmocyc_db" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="plasmocyc_gene_id" sortingTable="apidb.geneattributes" sortingColumn="source_id"/>
            <column name="tm_count" sortingTable="apidb.geneattributes"/>
            <column name="so_id" sortingTable="apidb.geneattributes"/>
            <column name="so_term_name" sortingTable="apidb.geneattributes"/>
            <column name="so_term_definition" sortingTable="apidb.geneattributes"/>
            <column name="ontology_name" sortingTable="apidb.geneattributes"/>
            <column name="so_version" sortingTable="apidb.geneattributes"/>
            <column name="anticodon" sortingTable="apidb.geneattributes"/>
            <column name="molecular_weight" sortingTable="apidb.geneattributes"/>
            <column name="isoelectric_point" sortingTable="apidb.geneattributes"/>
            <column name="min_molecular_weight" sortingTable="apidb.geneattributes"/>
            <column name="max_molecular_weight" sortingTable="apidb.geneattributes"/>
            <column name="hydropathicity_gravy_score" sortingTable="apidb.geneattributes"/>
            <column name="aromaticity_score" sortingTable="apidb.geneattributes"/>
            <column name="external_db_name" sortingTable="apidb.geneattributes"/>
            <column name="external_db_version" sortingTable="apidb.geneattributes"/>
            <column name="ncbi_tax_id" sortingTable="apidb.geneattributes"/>
            <column name="species" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="genus_species" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="organism" sortingTable="apidb.geneattributes"/>
            <column name="exon_count" sortingTable="apidb.geneattributes"/>
            <sql>
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, bfmv.strand,
                   bfmv.sequence_id,
                   '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                       SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) || '</i>' as organism,
                   bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version,
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1, INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1) AS genus_species,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - INSTR(bfmv.organism, ' ') - 1) AS species,
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                   AS plasmocyc_db,
                   UPPER(bfmv.source_id) AS plasmocyc_gene_id
            FROM apidb.GeneAttributes bfmv
               WHERE bfmv.source_id='$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>



        <!-- GeneAttributes.GeneAttrs -->
      <sqlQuery name="GeneAttrs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="contig" />
            <column name="chromosome" />
            <!--<column name="organism" />-->
            <column name="start_max" />
            <column name="end_min" />
            <column name="context_start_range" />
            <column name="context_end_range" />
            <column name="cryptocyc_db" />
            <column name="citation" />
            <column name="extdbname" />
            <sql>
            <!-- organism (species) gets abbreviated with non-breaking space. Cryptosporidium parvum -> C. parvum -->
            <![CDATA[           
            SELECT
            g.source_id,
            g.citation,
            enas.source_id as contig,
            nal.start_max, nal.end_min,
            (nal.start_max - 1000) as context_start_range,
            (nal.end_min + 1000) as context_end_range,
            src.chromosome, 
            DECODE(
              substr(
                tn.name, 
                instr(ltrim(tn.name), ' ', 1, 1)+1, 
                instr(ltrim(tn.name)||' ', ' ', 1, 2) - instr(tn.name, ' ', 1, 1) -1
              ),
              'parvum', 'cparvum', 'hominis') as cryptocyc_db,
            ed.name as extdbname
            FROM dots.genefeature g,
            dots.externalnasequence enas,
            dots.nalocation nal,
            dots.source src, 
            sres.taxonname tn,
            sres.externaldatabaserelease edr,
            sres.externaldatabase ed
            WHERE g.na_sequence_id= enas.na_sequence_id 
            AND  enas.na_sequence_id = src.na_sequence_id
            AND nal.na_feature_id = g.na_feature_id
            AND enas.taxon_id = tn.taxon_id
            AND tn.name_class='scientific name'
            AND enas.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND g.source_id = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>
        
        <!-- GeneAttributes.ExtDbName -->
       <!-- <sqlQuery name="ExtDbName" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="contig" />
            <column name="extdbname"/>
            <column name="context_start_range" />
            <column name="context_end_range" />
            <sql>
              <![CDATA[
              SELECT ed.name AS extdbname,
                     enas.source_id as contig,
                     (nal.start_max - 1000) as context_start_range,
                     (nal.end_min + 1000) as context_end_range
              FROM dots.genefeature gf, 
                      sres.externaldatabase ed, 
                      sres.externaldatabaserelease edr,
                      dots.externalnasequence enas,
                      dots.nalocation nal
              WHERE gf.na_sequence_id= enas.na_sequence_id 
                  AND nal.na_feature_id = gf.na_feature_id
                  AND gf.external_database_release_id = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
                  AND gf.source_id = '$$primaryKey$$' 
              ]]>
            </sql>
        </sqlQuery>-->

        <!-- GeneAttributes.ExternalDbInfo -->
        <sqlQuery name="ExternalDbInfo" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="externalDbName"/>
            <column name="externalDbVersion"/>
            <sql>
              <![CDATA[
              SELECT ed.name AS externalDbName, edr.version AS externalDbVersion
              FROM dots.genefeature gf, 
                      sres.externaldatabase ed, 
                      sres.externaldatabaserelease edr
              WHERE gf.external_database_release_id = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
                  AND source_id = '$$primaryKey$$' 
              ]]>
            </sql>
        </sqlQuery>

        <!-- GeneAttributes.SGC_3D_Struct -->
        <sqlQuery name="SGC_3D_Struct" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="pdb_id"/>
            <sql>
              <![CDATA[
            SELECT dr.primary_identifier AS pdb_id
            FROM dots.GeneFeature gf,
                 dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.source_id = '$$primaryKey$$'
            AND gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            AND dr.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND ed.name = 'Structural Genomics Consortium 3D Structures'
            ORDER BY dr.primary_identifier
              ]]>
            </sql>
        </sqlQuery>

        <!-- GeneAttributes.Product -->
        <sqlQuery name="Product" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="so_type" />
            <column name="product" />
            <sql> 
            <!-- this sql is compatible with the WDK caching engine -->
            <!-- and should always return a record (even if the product field
                 is empty - the wdk does not like 'no rows returned'   -->
            SELECT g.source_id, 
                   u.product  as product,
                   so.term_name as so_type
            FROM (
                  SELECT r.source_id, r.product, r.sequence_ontology_id
                  FROM dots.rnatype r 
                  UNION 
                  SELECT t.source_id, t.product, t.sequence_ontology_id
                  FROM dots.transcript t 
                  ) u, 
                  dots.genefeature g,
                  sres.sequenceontology so
            WHERE  g.source_id = u.source_id(+)
              AND  u.sequence_ontology_id = so.sequence_ontology_id
              AND  g.source_id = '$$primaryKey$$'
            </sql>
        </sqlQuery>
                
        <!-- GeneAttributes.ProteinId -->
        <sqlQuery name="ProteinId" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="protein_id" />
            <column name="linkout" />
            <sql>
            <![CDATA[           
            SELECT 
                  g.source_id,
                  DECODE (
                       protein_id, null, 
                           '', 
                           'Genbank Protein Record ' ||
                           '(<a href="http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?val=' ||
                            protein_id         || 
                            '">' || 
                            protein_id         ||
                            '</a>)'
                       )
                  as linkout, 
                  t.protein_id
            FROM  dots.transcript t, dots.genefeature g
            WHERE g.source_id = '$$primaryKey$$'
            AND   g.na_feature_id = t.parent_id(+)
            ]]>
            </sql>
        </sqlQuery>
       
        <!-- GeneAttributes.TranscriptSequence -->
        <sqlQuery name="TranscriptSequence" isCacheable="false"
                       displayName="RNA Sequence">
            <paramRef ref="params.primaryKey"/>
            <column name="source_id"/>
            <column name="transcript_sequence"/>
            <sql>
            <![CDATA[
SELECT gf.source_id,  
       sns.sequence AS transcript_sequence 
FROM dots.SplicedNaSequence sns, 
     sres.SequenceOntology so,
     dots.genefeature gf,
     dots.transcript t 
WHERE gf.source_id = '$$primaryKey$$'
  AND gf.na_feature_id = t.parent_id
  AND t.na_sequence_id = sns.na_sequence_id
  AND sns.sequence_ontology_id = so.sequence_ontology_id
  AND so.term_name = 'processed_transcript'
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneAttributes.CDS -->
        <sqlQuery name="CDS" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="cds" />
            <sql>SELECT gf.source_id,
                     SUBSTR(s.sequence,
                            tf.translation_start,
                            tf.translation_stop - tf.translation_start + 1)
                       AS cds
              FROM dots.genefeature gf, dots.transcript t,
                   dots.splicednasequence s, dots.TranslatedAaFeature tf
              WHERE gf.source_id = '$$primaryKey$$'
                AND t.parent_id = gf.na_feature_id
                AND s.na_sequence_id = t.na_sequence_id
                AND t.na_feature_id = tf.na_feature_id
             
           </sql>
        </sqlQuery>

        <!-- GeneAttributes.Translation -->
        <sqlQuery name="Translation" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="translation" />
            <column name="molecular_weight" />
            <column name="molecular_weight_note" />
            <sql>
            <!-- UPPER(source_id) is a workaround to some unresolved bug where
                 the translation doesn't get returned via webservices
                 (UPPER removed until new sql munger updated to handle it) -->
            <!-- The sql weirdness is to force a single row result set of null
                 values when there is no translation (as is the case for 
                 non-protein coding genes) - the WDK doesn't allow an empty result.    -->
            <![CDATA[  SELECT g.source_id, tas.sequence as translation,
                          tas.molecular_weight,
                          DECODE (
                            tas.molecular_weight, null,
                            '',
                            'Approximate protein mol. wt. (Daltons): <b>'  ||
                            tas.molecular_weight  ||
                            '</b><font size=''-1''><i> [computed from raw translation]</i></font>'
                          ) as molecular_weight_note
            FROM    dots.genefeature g,
                    dots.translatedaasequence tas, 
                    dots.translatedaafeature taf, 
                    dots.transcript t
            WHERE g.source_id = '$$primaryKey$$'
            AND taf.aa_sequence_id = tas.aa_sequence_id 
            AND taf.na_feature_id = t.na_feature_id
            AND g.na_feature_id = t.parent_id         
           
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneAttributes.ExonCount -->
        <sqlQuery name="ExonCount" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="exoncount" />
             <sql>
            <![CDATA[           
           SELECT g.source_id,
                   ex.exonnumber as exoncount
            FROM (SELECT COUNT(parent_id)
                AS exonNumber, parent_id
                FROM dots.exonfeature
                GROUP BY parent_id) ex,
            dots.genefeature g
            WHERE ex.parent_id = g.na_feature_id
            AND g.source_id = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneAttributes.TMCount -->
 <!--       <sqlQuery name="TMCount" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="tmcount" />
            <column name="dtext" />
             <sql>-->
            <!-- LoadTMDomains.pm no longer adds an entry when protein has
                 0 TMDs, hence the funky sql -->
           <!-- <![CDATA[           
            SELECT A.source_id, tmcount,
                   CASE  
                       WHEN B.tmcount is null THEN '0 domains' 
                       WHEN B.tmcount = 1 THEN 'domain' 
                       ELSE 'domains' 
                   END AS dtext  
            FROM
                (SELECT t.source_id 
                 FROM   dots.transcript t
                 WHERE  t.source_id = '$$primaryKey$$') A,
                (SELECT tmf.predicted_helices as tmcount,
                        t.source_id
                 FROM dots.transcript t, 
                      dots.translatedaafeature taaf, 
                      dots.TransmembraneAaFeature tmf,
                      core.algorithm alg
                WHERE t.na_feature_id = taaf.na_feature_id  
                  AND taaf.aa_sequence_id = tmf.aa_sequence_id 
                  AND tmf.prediction_algorithm_id = alg.algorithm_id
                  AND alg.name = 'TMHMM') B
            where A.source_id = B.source_id(+)
            ]]>
            </sql>
        </sqlQuery>-->

        <!-- GeneAttributes.SignalP -->
        <sqlQuery name="SignalP" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="sptext" />
            <column name="start_min" />
            <column name="end_max" />
             <sql>
            <![CDATA[           
            SELECT t.source_id, 
                CASE WHEN 
                    maxy_conclusion=1 
                    AND maxc_conclusion=1 
                    AND maxs_conclusion=1 
                    AND means_conclusion=1 
                THEN 'was' 
                ELSE 'was not' 
                END AS sptext, 
                aal.start_min, 
                aal.end_max  
            FROM dots.signalpeptidefeature spf, 
                 dots.aalocation aal, 
                 dots.translatedaasequence tas, 
                 dots.translatedaafeature taf, 
                 dots.transcript t 
            WHERE spf.aa_feature_id = aal.aa_feature_id 
              AND tas.aa_sequence_id=spf.aa_sequence_id 
              AND tas.aa_sequence_id = taf.aa_sequence_id  
              AND taf.na_feature_id = t.na_feature_id  
              AND t.source_id = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>


    </querySet>

<!-- ////////// END GENEPAGE GENE PAGE //////////// -->

  
<!-- ////////// UTILITY //////////// -->
    <querySet name="UtilityQueries">

        <!-- UtilityQueries.PingCrypto (cryptolink hard coded in jsp) 
        <sqlQuery name="PingCrypto" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="cryptolink" />
            <sql> 
            <![CDATA[           
            select 
                global_name as cryptolink
            from global_name@crypto
             ]]>
           </sql>
        </sqlQuery>
        -->
        <!-- UtilityQueries.PingToxo (toxolink hard coded in jsp) 
        <sqlQuery name="PingToxo" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="toxolink" />
            <sql> 
            <![CDATA[           
            select 
                global_name as toxolink
            from global_name@toxo
             ]]>
           </sql>
        </sqlQuery>
        -->
        <!-- UtilityQueries.PingPlasmo (plasmolink hard coded in jsp) 
        <sqlQuery name="PingPlasmo" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="plasmolink" />
            <sql> 
            <![CDATA[           
            select 
                global_name as plasmolink
            from global_name@plasmo
             ]]>
           </sql>
        </sqlQuery>
        -->

        <!-- UtilityQueries.CurrentInstance -->
        <sqlQuery name="CurrentInstance" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="global_name" />
            <column name="host_name" />
            <column name="address" />
            <column name="version" />
            <column name="system_date" />
            <column name="login" />
           <sql> 
            <![CDATA[           
            select 
                global_name, 
                ver.banner version,
                UTL_INADDR.get_host_name as host_name,
                UTL_INADDR.get_host_address as address,
                to_char(sysdate, 'Dy DD-Mon-YYYY HH24:MI:SS') as system_date,
                sys_context('USERENV', 'SESSION_USER') as login
            from global_name, v$version ver
            where lower(ver.banner) like '%oracle%'
             ]]>
           </sql>
        </sqlQuery>

        <!-- UtilityQueries.CacheState -->
        <sqlQuery name="CacheState" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="cache_count" />
           <sql> 
            <![CDATA[           
            select count(*) as cache_count
             from queryinstance
             ]]>
           </sql>
        </sqlQuery>
        
        <!-- UtilityQueries.ApiCommDbLink -->
        <sqlQuery name="ApiCommDbLink" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="apicomm_global_name" />
           <sql> 
            <![CDATA[           
             select global_name as apicomm_global_name
            from global_name@LOGIN_DBLINK@
             ]]>
           </sql>
        </sqlQuery>

        <!-- UtilityQueries.AllDbLinks -->
        <sqlQuery name="AllDbLinks" isCacheable='false'>
            <paramRef ref="params.primaryKey"/> 
            <column name="owner" />
            <column name="db_link" />
            <column name="username" />
            <column name="host" />
            <column name="created" />
           <sql> 
            <![CDATA[           
            select 
            lower(owner) owner, lower(db_link) db_link, 
            lower(username) username, lower(host) host, created
            from  all_db_links
            ]]>
           </sql>
        </sqlQuery>

     </querySet>
<!-- ////////// END UTILITY //////////// -->

<!-- //////////  VOCABULARY //////////// -->

    <querySet name="VocabQueries">


<sqlQuery name="IncludePseudogenes">
            <column name="internal"/>
            <column name="term"/>
            <column name="idx"/>
            <sql>
            select 'Yes' as term, 2 as idx, '0,1' as internal from dual
            UNION
            select 'No' as term, 1 as idx, '0' as internal from dual
            UNION
            select 'Pseudogenes Only' as term, 3 as idx, '1' as internal from dual
            ORDER BY idx
            </sql>
        </sqlQuery>



  <!-- VocabQueries.LibraryId -->
    <sqlQuery name="LibraryId">
       <column name="internal"/>
       <column name="term"/>
       <sql>
           SELECT REPLACE(dbest_name, ',', ' - ') AS term,
                  library_id AS internal
           FROM dots.library
           ORDER BY dbest_name
       </sql>
     </sqlQuery>

        <!-- VocabQueries.CaseIndependence -->
         <sqlQuery name="CaseIndependence">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT internal, term FROM (
               SELECT 'yes' AS term,
                      '-i' AS internal,
                      0 AS ord FROM dual
               UNION
               SELECT 'no' AS term,
                      ' ' AS internal,
                      1 AS ord FROM dual)
            ORDER BY ord
            </sql>
        </sqlQuery>

        <!-- VocabQueries.WholeWords -->
        <sqlQuery name="WholeWords">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT internal, term FROM (
               SELECT 'yes' AS term,
                      'true' AS internal,
                      0 AS ord FROM dual
               UNION
               SELECT 'no' AS term,
                      'false' AS internal,
                      1 AS ord FROM dual)
            ORDER BY ord
            </sql>
        </sqlQuery>


        <!-- VocabQueries.TextSearchDatasets -->
        <sqlQuery name="TextSearchDatasets">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT internal, term FROM (
               SELECT 'Gene product' AS term,
                      'product.txt' AS internal,
                      0 AS ord FROM dual
               UNION
               SELECT 'Gene notes' AS term,
                      'notes.txt' AS internal,
                      1 AS ord FROM dual
               UNION
               SELECT 'User comments' AS term,
                      'comments.txt' AS internal,
                      2 AS ord FROM dual
               UNION
               SELECT 'Protein domain names and descriptions' AS term,
                      'interpro.txt' AS internal,
                      3 AS ord FROM dual
               UNION
               SELECT 'Similar proteins (BLAST hits v. NRDB)' AS term,
                      'blast.txt' AS internal,
                      4 AS ord FROM dual
               UNION
               SELECT 'EC descriptions' AS term,
                      'ec.txt' AS internal,
                      5 AS ord FROM dual
               UNION
               SELECT 'GO terms and definitions' AS term,
                      'go.txt' AS internal,
                      6 AS ord FROM dual
                )
            ORDER BY ord
            </sql>
        </sqlQuery>

        <!-- VocabQueries.ParvumChromosome -->
        <sqlQuery name="ParvumChromosome">
            <column name="internal"/>
            <column name="term"/>
            <column name="idx"/>
          <sql>
             <![CDATA[ 
                  SELECT term, internal, idx 
                  FROM (SELECT enas.source_id||
                  '   (Chromosome '||src.chromosome||')' as term, 
                  enas.source_id as internal, 1 as idx 
                  FROM dots.ExternalNASequence enas,
                       dots.source src,
                       sres.taxon t
                  WHERE enas.na_sequence_id = src.na_sequence_id
                    AND t.taxon_id = enas.taxon_id
                    AND t.taxon_id IN (select taxon_id from sres.taxon
                        connect by parent_id = prior taxon_id
                        start with taxon_id in (89025)) ORDER BY src.chromosome)
                  UNION ALL
                  (SELECT 'choose one' as term, ' ' as internal, 0 as idx FROM dual)
                  ORDER BY idx
              ]]>
            </sql>
        </sqlQuery>
    
        <!-- VocabQueries.DomainDatabase -->
        <sqlQuery name="DomainDatabase">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT DISTINCT ed.name AS term,
                            edr.external_database_release_id AS internal
            FROM sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE dr.external_database_release_id
                  = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND dr.db_ref_id IN
                  (SELECT draf.db_ref_id
                   FROM dots.DomainFeature df, dots.DbRefAaFeature draf,
                        core.AlgorithmInvocation ainv,
                        core.AlgorithmImplementation aimp
                   WHERE df.aa_feature_id = draf.aa_feature_id
                     AND df.row_alg_invocation_id = ainv.algorithm_invocation_id
                     AND ainv.algorithm_implementation_id
                         = aimp.algorithm_implementation_id
                     AND aimp.executable
                         = 'ApiCommonData::Load::Plugin::InsertInterproscanResults')
            UNION
              SELECT ' Choose one:' AS term, -1 AS internal
              FROM dual
            ORDER BY term
            </sql>
        </sqlQuery>


        <!-- VocabQueries.AnnotatedOrganisms -->
        <sqlQuery name="AnnotatedOrganisms">
            <column name="internal"/>
            <column name="term"/>
            <column name="idx"/>
            <sql>
            select * from (
            SELECT 
                     SUBSTR(tn.name, 1, 1) || '. ' || 
                     SUBSTR(tn.name, INSTR(tn.name, ' ', 1, 1) +1)  
                   AS term, 
                   t.taxon_id AS internal,
                   rownum as idx
            FROM sres.TaxonName tn, sres.taxon t
            WHERE tn.name_class='scientific name'
              AND t.taxon_id = tn.taxon_id
              AND t.rank = 'species'
              AND t.taxon_id in
                  (SELECT taxon_id
                   FROM sres.taxon
                   CONNECT BY taxon_id = prior parent_id
                   START WITH taxon_id IN
                   (SELECT taxon_id
                    FROM dots.ExternalNaSequence enas,
                         dots.genefeature gf
                    WHERE enas.na_sequence_id = gf.na_sequence_id))
             ) ORDER BY internal DESC
            </sql>
        </sqlQuery>

        <!-- VocabQueries.ParvumOrganism -->
        <sqlQuery name="ParvumOrganism">
            <column name="internal"/>
            <column name="term"/>
            <column name="idx"/>
            <sql>
            SELECT 'C. parvum'
                   AS term, 
                   t.taxon_id AS internal,
                   rownum as idx
            FROM sres.TaxonName tn, sres.taxon t
            WHERE tn.name_class='scientific name'
              AND t.taxon_id = tn.taxon_id
              AND t.ncbi_tax_id = 353152
            </sql>
        </sqlQuery>

        <!-- VocabQueries.AllOrganisms -->
        <sqlQuery name="AllOrganisms">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT orgs.term, orgs.internal
                FROM (
                  SELECT 
                     SUBSTR(tn.name, 1, 1) || '. ' || 
                     SUBSTR(tn.name, INSTR(tn.name, ' ', 1, 1) +1)  AS term, 
                     t.taxon_id AS internal
                  FROM sres.TaxonName tn, sres.taxon t
                  WHERE tn.name_class='scientific name'
                    AND t.taxon_id = tn.taxon_id
                    AND t.rank = 'species'
                    AND t.taxon_id in
                     (SELECT taxon_id
                      FROM sres.taxon
                      CONNECT BY taxon_id = prior parent_id
                      START WITH taxon_id IN
                         (SELECT ens.taxon_id
                          FROM dots.ExternalNaSequence ens))) orgs,
                     (
                      SELECT 'C. parvum' AS term, 1 as rank from dual
                      UNION
                      SELECT 'C. hominis' AS term, 2 as rank from dual
                      ) partial_order
                  WHERE orgs.term = partial_order.term(+)
                  ORDER BY partial_order.rank
            </sql>
        </sqlQuery>

        <!-- VocabQueries.inNotIn -->
        <sqlQuery name="inNotIn">
            <column name="internal"/>
            <column name="term"/>
            <column name="idx"/>
            <sql>
            SELECT * FROM (
               SELECT 'does overlap with a gene' as term, 'in' as internal, 1 as idx
               FROM dual
            UNION
                SELECT 'does not overlap with a gene' as term, 'not in' as internal, 2 as idx
                FROM dual
            ) order by idx
            </sql>
        </sqlQuery>
       <!-- VocabQueries.Chromosomes -->
        <sqlQuery name="Chromosomes">
            <column name="internal"/>
            <column name="term"/>
            <sql>
                select distinct(chromosome) as term, chromosome as internal 
                from dots.source where chromosome in ('1','2','3','4','5','6','7','8') order by chromosome
            </sql>
        </sqlQuery>

        <!-- VocabQueries.RNAType -->
        <sqlQuery name="RNAType">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT REPLACE(REPLACE(REPLACE(term_name, 'non_protein_coding', 'misc RNA'), '_encoding', ''), '_', ' ')  AS term,
                   sequence_ontology_id AS internal
              FROM sres.SequenceOntology
              WHERE term_name IN ('protein_coding',
                                  'rRNA_encoding',
                                  'snoRNA_encoding',
                                  'tRNA_encoding',
                                  'non_protein_coding')
            </sql>
        </sqlQuery>

        <!-- VocabQueries.EstLibraries -->
        <sqlQuery name="EstLibraries">
            <column name="internal"/>
            <column name="term"/>
            <sql>
                select dbest_name as term, library_id as internal from dots.library
            </sql>
        </sqlQuery>

        <!-- VocabQueries.PfamTermList -->
        <sqlQuery name="PfamTermList" isCacheable='true'>
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT distinct SUBSTR(external_primary_identifier, 1, 
                   INSTR(external_primary_identifier, '.', 1, 1) -1) as internal,
                   ede.description as term
            FROM   dots.domainfeature df,
                   sres.externaldatabaseentry ede,
                   sres.externaldatabase ed, 
                   sres.externaldatabaserelease edr
            WHERE  df.source_id = SUBSTR(external_primary_identifier, 1, 
                                  INSTR(external_primary_identifier, '.', 1, 1) -1) 
                   AND df.external_database_release_id = edr.external_database_release_id
                   AND edr.external_database_id = ed.external_database_id
                   AND ed.name = 'PFAM (ipro)'
                   ORDER BY UPPER(REPLACE(term, '''', ''))
            </sql>
        </sqlQuery>

        <!-- VocabQueries.PhyleticIndentMap -->
        <sqlQuery name="PhyleticIndentMap">
            <column name="internal"/>
            <column name="term"/>
            <sql><![CDATA[
         SELECT internal, term FROM (
 SELECT 'Archaea' AS term, '0' AS internal, 1 AS ord FROM dual
 UNION
   SELECT 'hal' AS term, '1' AS internal, 2 AS ord FROM dual
   UNION
   SELECT 'mja' AS term, '1' AS internal, 3 AS ord FROM dual
   UNION
   SELECT 'neq' AS term, '1' AS internal, 4 AS ord FROM dual
   UNION
   SELECT 'sso' AS term, '1' AS internal, 5 AS ord FROM dual
   UNION
 SELECT 'Bacteria' AS term, '0' AS internal, 6 AS ord FROM dual
 UNION
     SELECT 'aae' AS term, '1' AS internal, 8 AS ord FROM dual
     UNION
     SELECT 'ban' AS term, '1' AS internal, 9 AS ord FROM dual
     UNION
     SELECT 'cpe' AS term, '1' AS internal, 10 AS ord FROM dual
     UNION
     SELECT 'cpn' AS term, '1' AS internal, 11 AS ord FROM dual
     UNION
     SELECT 'cte' AS term, '1' AS internal, 12 AS ord FROM dual
     UNION
     SELECT 'det' AS term, '1' AS internal, 13 AS ord FROM dual
     UNION
     SELECT 'dra' AS term, '1' AS internal, 14 AS ord FROM dual
     UNION
     SELECT 'lmo' AS term, '1' AS internal, 15 AS ord FROM dual
     UNION
     SELECT 'mtu' AS term, '1' AS internal, 16 AS ord FROM dual
     UNION
     SELECT 'rba' AS term, '1' AS internal, 17 AS ord FROM dual
     UNION
     SELECT 'sau' AS term, '1' AS internal, 18 AS ord FROM dual
     UNION
     SELECT 'spn' AS term, '1' AS internal, 19 AS ord FROM dual
     UNION
     SELECT 'syn' AS term, '1' AS internal, 20 AS ord FROM dual
     UNION
     SELECT 'tma' AS term, '1' AS internal, 21 AS ord FROM dual
     UNION
     SELECT 'tpa' AS term, '1' AS internal, 22 AS ord FROM dual
     UNION
   SELECT 'Proteobacteria' AS term, '1' AS internal, 23 AS ord FROM dual
   UNION
     SELECT 'atu' AS term, '2' AS internal, 24 AS ord FROM dual
     UNION
     SELECT 'bsu' AS term, '2' AS internal, 25 AS ord FROM dual
     UNION
     SELECT 'bur' AS term, '2' AS internal, 26 AS ord FROM dual
     UNION
     SELECT 'cbu' AS term, '2' AS internal, 27 AS ord FROM dual
     UNION
     SELECT 'cje' AS term, '2' AS internal, 28 AS ord FROM dual
     UNION
     SELECT 'eco' AS term, '2' AS internal, 29 AS ord FROM dual
     UNION
     SELECT 'ftu' AS term, '2' AS internal, 30 AS ord FROM dual
     UNION
     SELECT 'gsu' AS term, '2' AS internal, 31 AS ord FROM dual
     UNION
     SELECT 'rso' AS term, '2' AS internal, 32 AS ord FROM dual
     UNION
     SELECT 'rty' AS term, '2' AS internal, 33 AS ord FROM dual
     UNION
     SELECT 'sfl' AS term, '2' AS internal, 34 AS ord FROM dual
     UNION
     SELECT 'sty' AS term, '2' AS internal, 35 AS ord FROM dual
     UNION
     SELECT 'vch' AS term, '2' AS internal, 36 AS ord FROM dual
     UNION
     SELECT 'wsu' AS term, '2' AS internal, 37 AS ord FROM dual
     UNION
     SELECT 'ype' AS term, '2' AS internal, 38 AS ord FROM dual
     UNION
 SELECT 'Eukaryota' AS term, '0' AS internal, 39 AS ord FROM dual
 UNION
     SELECT 'ddi' AS term, '1' AS internal, 41 AS ord FROM dual
     UNION
     SELECT 'ehi' AS term, '1' AS internal, 42 AS ord FROM dual
     UNION
     SELECT 'gla' AS term, '1' AS internal, 43 AS ord FROM dual
     UNION
   SELECT 'Alveolates' AS term, '1' AS internal, 52 AS ord FROM dual
   UNION
     SELECT 'Ciliates' AS term, '2' AS internal, 53 AS ord FROM dual
     UNION
       SELECT 'tth' AS term, '3' AS internal, 54 AS ord FROM dual
       UNION
     SELECT 'Apicomplexa' AS term, '2' AS internal, 55 AS ord FROM dual
     UNION
       SELECT 'Coccidia' AS term, '3' AS internal, 56 AS ord FROM dual
       UNION
         SELECT 'cho' AS term, '4' AS internal, 57 AS ord FROM dual
         UNION
         SELECT 'cpa' AS term, '4' AS internal, 58 AS ord FROM dual
         UNION
         SELECT 'tgo' AS term, '4' AS internal, 59 AS ord FROM dual
         UNION
       SELECT 'Haemosporida' AS term, '3' AS internal, 61 AS ord FROM dual
       UNION
         SELECT 'pbe' AS term, '4' AS internal, 62 AS ord FROM dual
         UNION
         SELECT 'pch' AS term, '4' AS internal, 62 AS ord FROM dual
         UNION
         SELECT 'pfa' AS term, '4' AS internal, 64 AS ord FROM dual
         UNION
         SELECT 'pvi' AS term, '4' AS internal, 65 AS ord FROM dual
         UNION
         SELECT 'pyo' AS term, '4' AS internal, 66 AS ord FROM dual
         UNION
         SELECT 'pkn' AS term, '4' AS internal, 67 AS ord FROM dual
         UNION
       SELECT 'Piroplasmida' AS term, '3' AS internal, 68 AS ord FROM dual
       UNION
         SELECT 'the' AS term, '4' AS internal, 69 AS ord FROM dual
         UNION
         SELECT 'tan' AS term, '4' AS internal, 70 AS ord FROM dual
         UNION
   SELECT 'Kinetoplastida' AS term, '1' AS internal, 71 AS ord FROM dual
   UNION
     SELECT 'lma' AS term, '2' AS internal, 80 AS ord FROM dual
     UNION
     SELECT 'tbr' AS term, '2' AS internal, 81 AS ord FROM dual
     UNION
     SELECT 'tcr' AS term, '2' AS internal, 82 AS ord FROM dual
     UNION
   SELECT 'Plants/Algae' AS term, '1' AS internal, 82.1 AS ord FROM dual
   UNION
     SELECT 'ath' AS term, '2' AS internal, 82.2 AS ord FROM dual
     UNION
     SELECT 'cre' AS term, '2' AS internal, 82.3 AS ord FROM dual
     UNION
     SELECT 'cme' AS term, '2' AS internal, 82.4 AS ord FROM dual
     UNION
     SELECT 'gth' AS term, '2' AS internal, 82.5 AS ord FROM dual
     UNION
     SELECT 'osa' AS term, '2' AS internal, 82.6 AS ord FROM dual
     UNION
     SELECT 'ota' AS term, '2' AS internal, 82.7 AS ord FROM dual
     UNION
     SELECT 'tps' AS term, '2' AS internal, 82.8 AS ord FROM dual
     UNION
   SELECT 'Fungi' AS term, '1' AS internal, 83 AS ord FROM dual
   UNION
     SELECT 'ago' AS term, '2' AS internal, 84 AS ord FROM dual
     UNION
     SELECT 'aor' AS term, '2' AS internal, 85 AS ord FROM dual
     UNION
     SELECT 'cgl' AS term, '2' AS internal, 86 AS ord FROM dual
     UNION
     SELECT 'cne' AS term, '2' AS internal, 87 AS ord FROM dual
     UNION
     SELECT 'dha' AS term, '2' AS internal, 88 AS ord FROM dual
     UNION
     SELECT 'ecu' AS term, '2' AS internal, 89 AS ord FROM dual
     UNION
     SELECT 'kla' AS term, '2' AS internal, 90 AS ord FROM dual
     UNION
     SELECT 'ncr' AS term, '2' AS internal, 91 AS ord FROM dual
     UNION
     SELECT 'pha' AS term, '2' AS internal, 92 AS ord FROM dual
     UNION
     SELECT 'sce' AS term, '2' AS internal, 93 AS ord FROM dual
     UNION
     SELECT 'sma' AS term, '2' AS internal, 94 AS ord FROM dual
     UNION
     SELECT 'spo' AS term, '2' AS internal, 95 AS ord FROM dual
     UNION
     SELECT 'yli' AS term, '2' AS internal, 96 AS ord FROM dual
     UNION
   SELECT 'Animals' AS term, '1' AS internal, 97 AS ord FROM dual
   UNION
     SELECT 'Nematodes' AS term, '2' AS internal, 98 AS ord FROM dual
     UNION
       SELECT 'bma' AS term, '3' AS internal, 99 AS ord FROM dual
       UNION
       SELECT 'cel' AS term, '3' AS internal, 100 AS ord FROM dual
       UNION
       SELECT 'cbr' AS term, '3' AS internal, 101 AS ord FROM dual
       UNION
     SELECT 'Arthropoda' AS term, '2' AS internal, 102 AS ord FROM dual
     UNION
       SELECT 'aed' AS term, '3' AS internal, 103 AS ord FROM dual
       UNION
       SELECT 'aga' AS term, '3' AS internal, 104 AS ord FROM dual
       UNION
       SELECT 'ame' AS term, '3' AS internal, 105 AS ord FROM dual
       UNION
       SELECT 'dme' AS term, '3' AS internal, 106 AS ord FROM dual
       UNION
     SELECT 'Vertebrates' AS term, '2' AS internal, 107 AS ord FROM dual
     UNION
       SELECT 'Bony Fish' AS term, '3' AS internal, 108 AS ord FROM dual
       UNION
         SELECT 'cin' AS term, '4' AS internal, 109 AS ord FROM dual
         UNION
         SELECT 'dre' AS term, '4' AS internal, 110 AS ord FROM dual
         UNION
         SELECT 'fru' AS term, '4' AS internal, 111 AS ord FROM dual
         UNION
         SELECT 'tni' AS term, '4' AS internal, 112 AS ord FROM dual
         UNION
       SELECT 'Tetrapoda' AS term, '3' AS internal, 113 AS ord FROM dual
       UNION
         SELECT 'Birds' AS term, '4' AS internal, 114 AS ord FROM dual
         UNION
           SELECT 'gga' AS term, '5' AS internal, 115 AS ord FROM dual
           UNION
         SELECT 'Mammals' AS term, '4' AS internal, 116 AS ord FROM dual
         UNION
             SELECT 'hsa' AS term, '5' AS internal, 117 AS ord FROM dual
             UNION
             SELECT 'mmu' AS term, '5' AS internal, 118 AS ord FROM dual
             UNION
             SELECT 'rno' AS term, '5' AS internal, 119 AS ord FROM dual
)
            ORDER BY ord
]]>
            </sql>
        </sqlQuery>

        <!-- VocabQueries.PhyleticTermMap -->
        <sqlQuery name="PhyleticTermMap">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
 SELECT 'Halobacterium sp. NRC-1' as internal, 'hal' as term FROM dual
   UNION
 SELECT 'Methanococcus jannaschii DSSM 2661' as internal, 'mja' as term FROM dual
   UNION
 SELECT 'Sulfolobus solfataricus P2' as internal, 'sso' as term FROM dual
   UNION
 SELECT 'Nanoarchaeum equitans Kin4-M' as internal, 'neq' as term FROM dual
   UNION
 SELECT 'Aquifex aeolicus VF5' as internal, 'aae' as term FROM dual
   UNION
 SELECT 'Thermotoga maritima MSB8' as internal, 'tma' as term FROM dual
   UNION
 SELECT 'Dehalococcoides ethenogenes 195' as internal, 'det' as term FROM dual
   UNION
 SELECT 'Deinococcus radiodurans R1' as internal, 'dra' as term FROM dual
   UNION
 SELECT 'Treponema pallidum subsp. pallidum str. Nichols' as internal, 'tpa' as term FROM dual
   UNION
 SELECT 'Chlorobium tepidum TLS' as internal, 'cte' as term FROM dual
   UNION
 SELECT 'Rhodopirellula baltica SH_1' as internal, 'rba' as term FROM dual
   UNION
 SELECT 'Chlamydophila pneumoniae CWL029' as internal, 'cpn' as term FROM dual
   UNION
 SELECT 'Synechococcus sp. WH8102' as internal, 'syn' as term FROM dual
   UNION
 SELECT 'Mycobacterium tuberculosis H37Rv' as internal, 'mtu' as term FROM dual
   UNION
 SELECT 'Bacillus anthracis Ames' as internal, 'ban' as term FROM dual
   UNION
 SELECT 'Wolinella succinogenes DSM 1740' as internal, 'wsu' as term FROM dual
   UNION
 SELECT 'Geobacter sulfurreducens PCA' as internal, 'gsu' as term FROM dual
   UNION
 SELECT 'Agrobacterium tumefaciens C58 Uwash' as internal, 'atu' as term FROM dual
   UNION
 SELECT 'Ralstonia solanacearum GMI1000' as internal, 'rso' as term FROM dual
   UNION
 SELECT 'Escherichia coli K12' as internal, 'eco' as term FROM dual
   UNION
 SELECT 'Entamoeba histolytica' as internal, 'ehi' as term FROM dual
   UNION
 SELECT 'Dictyostelium discoideum' as internal, 'ddi' as term FROM dual
   UNION
 SELECT 'Cyanodioschyzon merolae 10D' as internal, 'cme' as term FROM dual
   UNION
 SELECT 'Thalassiosira pseudonana' as internal, 'tps' as term FROM dual
   UNION
 SELECT 'Arabidopsis thaliana' as internal, 'ath' as term FROM dual
   UNION
 SELECT 'Oryza sativa' as internal, 'osa' as term FROM dual
   UNION
 SELECT 'Saccharomyces cerevisiae S288C' as internal, 'sce' as term FROM dual
   UNION
 SELECT 'Schizosaccharomyces pombe' as internal, 'spo' as term FROM dual
   UNION
 SELECT 'Yarrowia lipolytica CLIB99' as internal, 'yli' as term FROM dual
   UNION
 SELECT 'Kluyveromyces lactis CLIB210' as internal, 'kla' as term FROM dual
   UNION
 SELECT 'Debaryomyces hansenii CBS767' as internal, 'dha' as term FROM dual
   UNION
 SELECT 'Candida glabrate CBS138' as internal, 'cgl' as term FROM dual
   UNION
 SELECT 'Encephalitozoon cuniculi' as internal, 'ecu' as term FROM dual
   UNION
 SELECT 'Cryptococcus neoformans' as internal, 'cne' as term FROM dual
   UNION
 SELECT 'Ashbya gossypii' as internal, 'ago' as term FROM dual
   UNION
 SELECT 'Neurospora crassa OR74A' as internal, 'ncr' as term FROM dual
   UNION
 SELECT 'Caenorhabditis elegans' as internal, 'cel' as term FROM dual
   UNION
 SELECT 'Caenorhabditis briggsae' as internal, 'cbr' as term FROM dual
   UNION
 SELECT 'Drosophila melanogaster' as internal, 'dme' as term FROM dual
   UNION
 SELECT 'Anopheles gambiae PEST' as internal, 'aga' as term FROM dual
   UNION
 SELECT 'Theileria parva' as internal, 'the' as term FROM dual
   UNION
 SELECT 'Toxoplasma gondii' as internal, 'tgo' as term FROM dual
   UNION
 SELECT 'Cryptosporidium parvum Iowa (Type2)' as internal, 'cpa' as term FROM dual
   UNION
 SELECT 'Cryptosporidium hominis TU502 (Type 1)' as internal, 'cho' as term FROM dual
   UNION
 SELECT 'Plasmodium falciparum 3D7' as internal, 'pfa' as term FROM dual
   UNION
 SELECT 'Plasmodium yoelii 17XNL' as internal, 'pyo' as term FROM dual
   UNION
 SELECT 'Plasmodium knowlesi' as internal, 'pkn' as term FROM dual
   UNION
 SELECT 'Plasmodium vivax' as internal, 'pvi' as term FROM dual
   UNION
 SELECT 'Plasmodium berghei' as internal, 'pbe' as term FROM dual
   UNION
 SELECT 'Plasmodium chabaudi' as internal, 'pch' as term FROM dual
   UNION
 SELECT 'Ciona intestinalis' as internal, 'cin' as term FROM dual
   UNION
 SELECT 'Fugu rubripes' as internal, 'fru' as term FROM dual
   UNION
 SELECT 'Tetraodon nigroviridis' as internal, 'tni' as term FROM dual
   UNION
 SELECT 'Danio rerio' as internal, 'dre' as term FROM dual
   UNION
 SELECT 'Gallus gallus' as internal, 'gga' as term FROM dual
   UNION
 SELECT 'Mus musculus' as internal, 'mmu' as term FROM dual
   UNION
 SELECT 'Rattus norvegicus' as internal, 'rno' as term FROM dual
   UNION
 SELECT 'Homo sapiens' as internal, 'hsa' as term FROM dual
   UNION
 SELECT 'Aedes aegypti' as internal, 'aed' as term FROM dual
   UNION
 SELECT 'Apis mellifera' as internal, 'ame' as term FROM dual
   UNION
 SELECT 'Aspergillus oryzae' as internal, 'aor' as term FROM dual
   UNION
 SELECT 'Brugia malayi' as internal, 'bma' as term FROM dual
   UNION
 SELECT 'Brucella suis 1330' as internal, 'bsu' as term FROM dual
   UNION
 SELECT 'Burkholderia mallei ATCC 23344' as internal, 'bur' as term FROM dual
   UNION
 SELECT 'Coxiella burnetii RSA 493' as internal, 'cbu' as term FROM dual
   UNION
 SELECT 'Campylobacter jejuni subsp. jejuni NCTC 11168' as internal, 'cje' as term FROM dual
   UNION
 SELECT 'Clostridium perfringens str. 13' as internal, 'cpe' as term FROM dual
   UNION
 SELECT 'Chlamydomonas reinhardtii' as internal, 'cre' as term FROM dual
   UNION
 SELECT 'Francisella tularensis subsp. tularensis SCHU S4' as internal, 'ftu' as term FROM dual
   UNION
 SELECT 'Giardia lamblia ATCC 50803' as internal, 'gla' as term FROM dual
   UNION
 SELECT 'Guillardia theta' as internal, 'gth' as term FROM dual
   UNION
 SELECT 'Leishmania major' as internal, 'lma' as term FROM dual
   UNION
 SELECT 'Listeria monocytogenes EGD-e' as internal, 'lmo' as term FROM dual
   UNION
 SELECT 'Ostreococcus tauri' as internal, 'ota' as term FROM dual
   UNION
 SELECT 'Phanerochaete chrysosporium' as internal, 'pha' as term FROM dual
   UNION
 SELECT 'Rickettsia typhi str. Wilmington' as internal, 'rty' as term FROM dual
   UNION
 SELECT 'Staphylococcus aureus subsp. aureus Mu50' as internal, 'sau' as term FROM dual
   UNION
 SELECT 'Shigella flexneri 2a str. 301' as internal, 'sfl' as term FROM dual
   UNION
 SELECT 'Schistosoma mansoni' as internal, 'sma' as term FROM dual
   UNION
 SELECT 'Streptococcus pneumoniae TIGR4' as internal, 'spn' as term FROM dual
   UNION
 SELECT 'Salmonella enterica subsp. enterica serovar Typhi str. CT18' as internal, 'sty' as term FROM dual
   UNION
 SELECT 'Theileria annulata' as internal, 'tan' as term FROM dual
   UNION
 SELECT 'Trypanosoma brucei' as internal, 'tbr' as term FROM dual
   UNION
 SELECT 'Trypanosoma cruzi' as internal, 'tcr' as term FROM dual
   UNION
 SELECT 'Tetrahymena thermophila' as internal, 'tth' as term FROM dual
   UNION
 SELECT 'Vibrio cholerae O1 biovar eltor str. N16961' as internal, 'vch' as term FROM dual
   UNION
 SELECT 'Yersinia pestis CO92' as internal, 'ype' as term FROM dual)
            </sql>
        </sqlQuery>


        <!-- VocabQueries.Filter -->
    <sqlQuery name="Filter">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT internal, term FROM (
               SELECT 'yes' AS term,
                      'yes' AS internal,
                      0 AS ord FROM dual
               UNION
               SELECT 'no' AS term,
                      'no' AS internal,
                      1 AS ord FROM dual)
            ORDER BY ord
            </sql>
    </sqlQuery>

        <!-- VocabQueries.BlastQueryType -->
    <sqlQuery name="BlastQueryType">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'DNA' as term,
                      'dna' as internal FROM dual
               UNION
               SELECT 'Protein' as term,
                      'protein' as internal FROM dual
            )
            </sql>
        </sqlQuery>

        <!-- VocabQueries.BlastDatabaseTypeGene -->
     <sqlQuery name="BlastDatabaseTypeGene">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'Transcripts' as term,
                      'Transcripts' as internal,
                       1 AS idx FROM dual
               UNION
               SELECT 'Translated Transcripts' as term,
                      'Transcripts Translated' as internal,
                       2 AS idx FROM dual
               UNION
               SELECT 'Proteins' as term,
                      'Proteins' as internal,
                       3 AS idx FROM dual
            )
            </sql>
        </sqlQuery>

        <!-- VocabQueries.BlastDatabaseType -->
     <sqlQuery name="BlastDatabaseType">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'Transcripts' as term,
                      'Transcripts' as internal,
                       1 AS idx FROM dual
               UNION
               SELECT 'Translated Transcripts' as term,
                      'Transcripts Translated' as internal,
                       2 AS idx FROM dual
               UNION
               SELECT 'Proteins' as term,
                      'Proteins' as internal,
                       3 AS idx FROM dual
               UNION
               SELECT 'ORF (Protein)' as term,
                      'ORF' as internal,
                       4 AS idx FROM dual
               UNION
               SELECT 'Genome' as term,
                      'Genomics' as internal,
                       5 AS idx FROM dual
               UNION
               SELECT 'Translated Genome' as term,
                      'Genomics Translated' as internal,
                       6 AS idx FROM dual
               UNION
               SELECT 'EST' as term,
                      'EST' as internal,
                       7 AS idx FROM dual
               UNION
               SELECT 'Translated EST' as term,
                      'EST Translated' as internal,
                       8 AS idx FROM dual
            )
            </sql>
        </sqlQuery>

        <!-- VocabQueries.BlastDatabaseTypeORF -->
        <sqlQuery name="BlastDatabaseTypeORF">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (

               SELECT 'ORF (Protein)' as term,
                      'ORF' as internal FROM dual

            )
            </sql>
        </sqlQuery>


        <!-- VocabQueries.BlastDatabaseTypeEST -->
        <sqlQuery name="BlastDatabaseTypeEST">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (

               SELECT 'EST' as term,
                      'EST' as internal FROM dual
               UNION
               SELECT 'Translated EST' as term,
                      'EST Translated' as internal FROM dual
            )
            </sql>
        </sqlQuery>

        <!-- VocabQueries.BlastDatabaseTypeGenome -->
        <sqlQuery name="BlastDatabaseTypeGenome">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'Genome' as term,
                      'Genomics' as internal FROM dual
               UNION
               SELECT 'Translated Genome' as term,
                      'Genomics Translated' as internal FROM dual
            )
            </sql>
        </sqlQuery>


        <!-- VocabQueries.BlastDatabaseOrganism -->
        <sqlQuery name="BlastDatabaseOrganism">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'C. hominis' as term,
                      'Chominis' as internal FROM dual
               UNION
               SELECT 'C. muris' as term,
                      'Cmuris' as internal FROM dual
               UNION
               SELECT 'C. parvum' as term,
                      'Cparvum' as internal FROM dual
               UNION
               SELECT 'C. parvum Chr6' as term,
                      'CparvumChr6' as internal FROM dual
               UNION
               SELECT 'C. parvum EST' as term,
                      'CparvumEST' as internal FROM dual

            )
            </sql>
        </sqlQuery>


        <!-- VocabQueries.BlastDatabaseOrganismGene -->
        <sqlQuery name="BlastDatabaseOrganismGene">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'C. hominis' as term,
                      'Chominis' as internal FROM dual
               UNION
               SELECT 'C. parvum' as term,
                      'Cparvum' as internal FROM dual
               UNION
               SELECT 'C. parvum Chr6' as term,
                      'CparvumChr6' as internal FROM dual

            )
            </sql>
        </sqlQuery>

        <!-- VocabQueries.BlastDatabaseOrganismGenome -->
        <sqlQuery name="BlastDatabaseOrganismGenome">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'C. hominis' as term,
                      'Chominis' as internal FROM dual
               UNION
               SELECT 'C. muris' as term,
                      'Cmuris' as internal FROM dual
               UNION
               SELECT 'C. parvum' as term,
                      'Cparvum' as internal FROM dual
               UNION
               SELECT 'C. parvum Chr6' as term,
                      'CparvumChr6' as internal FROM dual

            )
            </sql>
        </sqlQuery>

        <!-- VocabQueries.BlastDatabaseOrganismEST -->
        <sqlQuery name="BlastDatabaseOrganismEST">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               
               SELECT 'C. parvum' as term,
                      'Cparvum' as internal FROM dual
               
            )
            </sql>
        </sqlQuery>


        <!-- VocabQueries.BlastDatabaseOrganismORF -->
        <sqlQuery name="BlastDatabaseOrganismORF">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT * FROM (
               SELECT 'C. hominis' as term,
                      'Chominis' as internal FROM dual
               UNION
               SELECT 'C. muris' as term,
                      'Cmuris' as internal FROM dual
               UNION
               SELECT 'C. parvum' as term,
                      'Cparvum' as internal FROM dual
               UNION
               SELECT 'C. parvum Chr6' as term,
                      'CparvumChr6' as internal FROM dual
               UNION
               SELECT 'C. parvum EST' as term,
                      'CparvumEST' as internal FROM dual

            )
            </sql>
        </sqlQuery>


        <!-- VocabQueries.MotifDataset -->
        <sqlQuery name="MotifDataset">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT term, internal FROM
               (SELECT 'ChominisAnnotatedProtein.fsa' AS internal,
                       'C. hominis annotated proteins' AS term,
                       1 AS idx FROM dual
                
                UNION
                SELECT 'CparvumAnnotatedProtein.fsa' AS internal,
                       'C. parvum annotated proteins' AS term,
                       2 AS idx FROM dual
                UNION
                SELECT 'CparvumChr6AnnotatedProtein.fsa' AS internal,
                       'C. parvum Chr6 annotated proteins' AS term,
                       3 AS idx FROM dual
               
                UNION
                SELECT 'Chominis_orf50.fsa' AS internal,
                       'C. hominis ORF 50' AS term,
                       4 AS idx FROM dual
                UNION
                SELECT 'Cparvum_orf50.fsa' AS internal,
                       'C. parvum ORF 50' AS term,
                       5 AS idx FROM dual
                
                UNION
                SELECT 'CparvumChr6_orf50.fsa' AS internal,
                       'C. parvum Chr6 ORF 50' AS term,
                       6 AS idx FROM dual
                UNION
                SELECT 'CparvumESTs_orf50.fsa' AS internal,
                       'C. parvum ESTs ORF 50' AS term,
                       7 AS idx FROM dual
                )
            ORDER BY idx
            </sql>
        </sqlQuery>


        <!-- VocabQueries.MotifDatasetGene -->
        <sqlQuery name="MotifDatasetGene">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT term, internal FROM
               (SELECT 'ChominisAnnotatedProtein.fsa' AS internal,
                       'C. hominis annotated proteins' AS term,
                       1 AS idx FROM dual
                 UNION
                SELECT 'CparvumAnnotatedProtein.fsa' AS internal,
                       'C. parvum annotated proteins' AS term,
                       2 AS idx FROM dual
                 UNION
                SELECT 'CparvumChr6AnnotatedProtein.fsa' AS internal,
                       'C. parvum Chr6 annotated proteins' AS term,
                       3 AS idx FROM dual
                 )
            ORDER BY idx
            </sql>
        </sqlQuery>

        <!-- VocabQueries.MotifDatasetORF -->
        <sqlQuery name="MotifDatasetORF">
            <column name="internal"/>
            <column name="term"/>
            <sql>
            SELECT term, internal FROM
               (
                SELECT 'Chominis_orf50.fsa' AS internal,
                       'C. hominis ORF 50' AS term,
                       1 AS idx FROM dual
                UNION
                SELECT 'Cmuris_orf50.fsa' AS internal,
                       'C. muris ORF 50' AS term,
                       2 AS idx FROM dual
                UNION
                SELECT 'Cparvum_orf50.fsa' AS internal,
                       'C. parvum ORF 50' AS term,
                       3 AS idx FROM dual
                UNION
                SELECT 'CparvumChr6_orf50.fsa' AS internal,
                       'C. parvum Chr6 ORF 50' AS term,
                       4 AS idx FROM dual
                UNION
                SELECT 'CparvumESTs_orf50.fsa' AS internal,
                       'C. parvum ESTs ORF 50' AS term,
                       5 AS idx FROM dual
               
                )
            ORDER BY idx
            </sql>
        </sqlQuery>

        <!-- VocabQueries.best_alignment_only -->
        <sqlQuery name="best_alignment_only">
            <column name="internal"/>
            <column name="term"/>
            <sql>
               SELECT * FROM (
               SELECT 'No' as term, '0,1' as internal, 2 as idx
               FROM dual
            UNION
                SELECT 'Yes' as term, '1' as internal, 1 as idx
                FROM dual
            ) order by idx
            </sql>
        </sqlQuery>

        <!-- VocabQueries.high_confidence_only -->
        <sqlQuery name="high_confidence_only">
            <column name="internal"/>
            <column name="term"/>
            <sql>
               SELECT * FROM (
               SELECT 'No' as term, '0,1' as internal, 1 as idx
               FROM dual
            UNION
                SELECT 'Yes' as term, '1' as internal, 2 as idx
                FROM dual
            ) order by idx
            </sql>
        </sqlQuery>
        

      <!-- VocabQueries.WastlingMsAssay -->
      <sqlQuery name="WastlingMsAssay">
            <column name="internal"/>
            <column name="term"/>
            <sql>
           <![CDATA[
             (
             SELECT '''Wastling MassSpec 1D Gel LC-MS/MS''' AS internal,
                    '1D Gel LC-MS/MS<sup>&#182;</sup>' AS term,
                     1 as idx  FROM dual
             UNION
             SELECT '''Wastling MassSpec 2D Gel LC-MS/MS''' AS internal,
                    '2D Gel LC-MS/MS<sup>&#182;</sup>' AS term,
                     2 as idx  FROM dual
             UNION
             SELECT '''Wastling MassSpec MudPit Soluble''' AS internal,
                    'MudPit Soluble fractions<sup>&#182;</sup>' AS term,
                     3 as idx FROM dual
             UNION
             SELECT '''Wastling MassSpec MudPit Insoluble''' AS internal,
                    'MudPit Insoluble fractions<sup>&#182;</sup>' AS term,
                     4 as idx FROM dual
             )
             ORDER BY idx
          ]]>
            </sql>
        </sqlQuery>

      <!-- VocabQueries.WastlingLoweryMsAssay -->
      <sqlQuery name="WastlingLoweryMsAssay">
            <column name="internal"/>
            <column name="term"/>
            <sql>
           <![CDATA[
             (
             SELECT '''Wastling MassSpec 1D Gel LC-MS/MS''' AS internal,
                    '1D Gel LC-MS/MS<sup>&#182;</sup>' AS term,
                     1 as idx  FROM dual
             UNION 
             SELECT '''Wastling MassSpec 2D Gel LC-MS/MS''' AS internal,
                    '2D Gel LC-MS/MS<sup>&#182;</sup>' AS term,
                     2 as idx  FROM dual
             UNION
             SELECT '''Wastling MassSpec MudPit Soluble''' AS internal,
                    'MudPit Soluble fractions<sup>&#182;</sup>' AS term,
                     3 as idx FROM dual
             UNION
             SELECT '''Wastling MassSpec MudPit Insoluble''' AS internal,
                    'MudPit Insoluble fractions<sup>&#182;</sup>' AS term,
                     4 as idx FROM dual
             UNION
             SELECT '''Lowery MassSpec LC-MS/MS Insoluble Excysted Fraction''' AS internal,
                    'Insoluble Excysted Fraction LC-MS/MS<sup>&#167;</sup>' AS term,
                     5 as idx  FROM dual
             UNION
             SELECT '''Lowery MassSpec LC-MS/MS Insoluble Non-excysted fraction''' AS internal,
                    'Insoluble Non-excysted Fraction LC-MS/MS<sup>&#167;</sup>' AS term,
                     6 as idx  FROM dual
             UNION
             SELECT '''Lowery MassSpec LC-MS/MS Soluble Excysted and Non-excysted fractions''' AS internal,
                    'Soluble Excysted and Non-excysted Fraction LC-MS/MS<sup>&#167;</sup>' AS term,
                     7 as idx  FROM dual
             )
             ORDER BY idx
          ]]>
            </sql>
        </sqlQuery>

       <!-- VocabQueries.Confidence -->
       <sqlQuery name="Confidence">
          <column name="internal"/>
          <column name="term"/>
          <sql>
           SELECT * FROM (
               SELECT 'High' as term,
                      '''' ||'Full Set On Blast Hit'  || ''''  as internal FROM dual
               UNION
               SELECT 'Medium' as term,
                      '''' ||'Full Set Not on Blast Hit'''||','||'''Not Full Set On Blast Hit' || ''''  as internal FROM dual
               UNION
               SELECT 'Low' as term,
                      '''' ||'Not Full Set Not on Blast Hit' || '''' as internal FROM dual)
          </sql>
        </sqlQuery>

     </querySet>
     
<!-- ////////// END VOCABULARY //////////// -->

<!-- //////////  TABLE QUERIES //////////// -->
    <querySet name="AssemblyTables">
    
        <!-- AssemblyTables.AlignmentInfoParvum -->
        <!-- custom record jsp page has a dependency on this query name. if you change here, change there -->
        <sqlQuery name="AlignmentInfoParvum" displayName="Alignments to &lt;i&gt;C. parvum&lt;/i&gt; contigs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="id" />
            <column name="contig_p" />
            <column name="target_start_p" />
            <column name="target_end_p" />
            <column name="context_start_p" />
            <column name="context_end_p" />
            <sql>
            <![CDATA[           
            SELECT 'cluster.' || asmbly.na_sequence_id || '.tmp' as id,
                   enas.source_id as contig_p, 
                   blat.target_start as target_start_p, 
                   blat.target_end as target_end_p,
                   blat.target_start -10000 as context_start_p, 
                   blat.target_end +10000 as context_end_p
            FROM   dots.blatalignment blat, 
                   sres.taxonname taxn,
                   dots.externalnasequence enas, 
                   dots.assembly asmbly
            WHERE  blat.query_na_sequence_id = asmbly.na_sequence_id
              AND  blat.target_na_sequence_id = enas.na_sequence_id
              AND  enas.taxon_id = taxn.taxon_id 
              AND  taxn.name like 'Cryptosporidium parvum%'
              AND  taxn.name_class = 'scientific name'
              AND  asmbly.na_sequence_id = '$$primaryKey$$'
            ORDER BY contig_p
            ]]>
            </sql>
        </sqlQuery>

        <!-- AssemblyTables.AlignmentInfoHominis -->
        <!-- custom record jsp page has a dependency on this query name. if you change here, change there -->
        <sqlQuery name="AlignmentInfoHominis" displayName="Alignments to &lt;i&gt;C. hominis&lt;/i&gt; contigs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="id" />
            <column name="contig_h" />
            <column name="target_start_h" />
            <column name="target_end_h" />
            <column name="context_start_h" />
            <column name="context_end_h" />
            <sql>
            <![CDATA[           
            SELECT 'cluster.' || asmbly.na_sequence_id || '.tmp' as id,
                   enas.source_id as contig_h, 
                   blat.target_start as target_start_h, 
                   blat.target_end as target_end_h,
                   blat.target_start -10000 as context_start_h, 
                   blat.target_end +10000 as context_end_h
            FROM   dots.blatalignment blat, 
                   sres.taxonname taxn,
                   dots.externalnasequence enas, 
                   dots.assembly asmbly
            WHERE  blat.query_na_sequence_id = asmbly.na_sequence_id
              AND  blat.target_na_sequence_id = enas.na_sequence_id
              AND  enas.taxon_id = taxn.taxon_id 
              AND  taxn.name = 'Cryptosporidium hominis'
              AND  asmbly.na_sequence_id = '$$primaryKey$$'
            ORDER BY contig_h
            ]]>
            </sql>
        </sqlQuery>
    </querySet>

    <querySet name="EstTables">

        <!-- EstTables.AlignmentInfo -->
        <sqlQuery name="AlignmentInfo" displayName="Alignments to &lt;i&gt;C. parvum&lt;/i&gt; contigs" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="accession" />
            <column name="contig" />
            <column name="target_start" />
            <column name="target_end" />
            <column name="context_start" />
            <column name="context_end" />
            <sql>
            <![CDATA[           
            SELECT enas.source_id as contig,
                   e.accession,
                   blat.target_start, 
                   blat.target_end,
                   blat.target_start -10000 as context_start, 
                   blat.target_end +10000 as context_end
            FROM   dots.blatalignment blat, 
                   dots.est e,
                   dots.externalnasequence enas
            WHERE  blat.query_na_sequence_id = e.na_sequence_id
              AND  blat.target_na_sequence_id = enas.na_sequence_id
              AND  e.accession = '$$primaryKey$$'
            ORDER BY contig
            ]]>
            </sql>
        </sqlQuery>
    
        <!-- EstTables.ClusterMates -->
        <!-- custom record jsp page has a dependency on this query name. if you change here, change there -->
        <sqlQuery name="ClusterMates" displayName="Other ESTs that Cluster with this EST:" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="mate_id" />
            <column name="mate_type" />
            <sql>
            <![CDATA[           
            select enas.source_id as mate_id, 'EST' as mate_type
            from dots.assembly asmbly, dots.assemblysequence aseq, dots.ExternalNASequence enas
            where aseq.assembly_na_sequence_id = asmbly.na_sequence_id 
            and aseq.na_sequence_id = enas.na_sequence_id
            and asmbly.na_sequence_id = 
            (select asmbly.na_sequence_id from dots.assembly asmbly, 
            dots.assemblysequence aseq, dots.ExternalNASequence enas
            where aseq.assembly_na_sequence_id = asmbly.na_sequence_id 
            and aseq.na_sequence_id = enas.na_sequence_id
            and enas.source_id = '$$primaryKey$$')
            and enas.source_id != '$$primaryKey$$'
            order by enas.source_id
            ]]>
            </sql>
        </sqlQuery>
    </querySet>
    
    <querySet name="GeneTables">

        <!-- GeneTables.Aliases   For the GFF Reporter  -->
        <sqlQuery name="Aliases" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="alias"/>
            <sql>
            <![CDATA[
            SELECT distinct ng.name AS alias
            FROM dots.GeneFeature gf, dots.NaFeatureNaGene nfng, dots.NaGene ng
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.na_feature_id = nfng.na_feature_id
              AND nfng.na_gene_id = ng.na_gene_id
            ]]>
            </sql>
        </sqlQuery>


        <!-- GeneTables.Orthologs-->
        <sqlQuery name="Orthologs" displayName="Cryptosporidium Orthologs"
                  isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="source_id" />
            <column name="species"/>
            <column name="product"/>
            <sql>
            <![CDATA[
            SELECT DISTINCT gf2.source_id, tn.name as species, gf2.product
            FROM dots.GeneFeature gf1, dots.SequenceSequenceGroup ssg1,
                 dots.SequenceSequenceGroup ssg2, dots.GeneFeature gf2,
                 dots.ExternalNaSequence ens, core.TableInfo ti,
                 sres.TaxonName tn
            WHERE gf1.source_id = '$$primaryKey$$'
              AND gf1.na_feature_id = ssg1.sequence_id
              AND ssg1.source_table_id = ti.table_id
              AND ssg1.sequence_group_id = ssg2.sequence_group_id
              AND ssg2.source_table_id = ti.table_id
              AND ssg2.sequence_id = gf2.na_feature_id
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id = tn.taxon_id
              AND tn.name_class = 'scientific name'
              AND ti.name = 'GeneFeature'
              AND gf2.source_id != gf1.source_id
            ORDER BY tn.name, gf2.source_id
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneTables.Epitopes -->
        <sqlQuery name="Epitopes"
            isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="iedb_id"/>
            <column name="location"/>
            <column name="sequence"/>
            <column name="name"/>
            <column name="confidence"/>
            <sql>
                <![CDATA[
                SELECT es.iedb_id, es.location, es.sequence, es.name,
                       es.confidence
                FROM apidb.EpitopeSummary es
                WHERE es.source_id = '$$primaryKey$$'
                ORDER BY DECODE(es.confidence, 'Low', 1,
                              'Medium', 2,
                              'High', 3,
                              4) desc,es.location
            ]]>
            </sql>
        </sqlQuery>
        
        <!-- GeneTables.BlastP -->
        <sqlQuery name="BlastP" displayName="" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="source_id" />
            <column name="description" />
            <column name="pval" />
            <column name="secondary_identifier" />
            <sql> 
            <!-- The '409' genes do not have protein_ids so need to test for null -->
            <![CDATA[
            SELECT * 
            FROM (SELECT eaas.source_id as source_id, 
                         eaas.secondary_identifier, 
                         sim.pvalue_mant || 'e' || sim.pvalue_exp as pval,
                         eaas.description
                  FROM dots.similarity sim, 
                       dots.externalaasequence eaas, 
                       dots.translatedaasequence taas, 
                       dots.transcript t, 
                       dots.translatedaafeature taf,
                       core.tableinfo qtab,
                       core.tableinfo stab
                  WHERE sim.QUERY_ID = taas.aa_sequence_id
                  AND taas.aa_sequence_id = taf.aa_sequence_id 
                  AND taf.na_feature_id = t.na_feature_id
                  AND (t.protein_id != eaas.source_id or t.protein_id is null)
                  AND sim.SUBJECT_ID = eaas.AA_SEQUENCE_ID
                  AND sim.subject_table_id = stab.table_id
                  AND stab.name = 'ExternalAASequence'
                  AND sim.query_table_id  = qtab.table_id 
                  AND qtab.name = 'TranslatedAASequence'
                  AND t.source_id = '$$primaryKey$$'
                  ORDER BY to_number(pval) ASC)
            WHERE rownum < 6
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneTables.EcNumber -->
        <sqlQuery name="EcNumber" displayName="EC Numbers" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="ec_number" />
            <column name="source"/>
            <column name="ec_description"/>
            <sql>
            <![CDATA[
            SELECT distinct
                   CASE 
                   WHEN asec.evidence_code = 'CryptoCyc' THEN
                      DECODE(LOWER(SUBSTR(gf.source_id, 1, 3)), 'cgd', 
                      '<a href=''http://cryptocyc.cryptodb.org/CRYPTO/NEW-IMAGE?type=GENE&object=' || gf.source_id || '''>CryptoCyc</a>', 
                      '<a href=''http://cryptocyc.cryptodb.org/HOMINIS/NEW-IMAGE?type=GENE&object=' || gf.source_id || '''>CryptoCyc</a>'
                      )
                   WHEN asec.evidence_code = 'KEGG' THEN
                      DECODE(LOWER(SUBSTR(gf.source_id, 1, 3)), 'cgd', 
                      '<a href=''http://www.genome.jp/dbget-bin/www_bget?cpv:' || gf.source_id || '''>KEGG</a>', 
                      '<a href=''http://www.genome.jp/dbget-bin/www_bget?cho:' || gf.source_id || '''>KEGG</a>' 
                      )
                   ELSE
                       asec.evidence_code 
            END  AS source,
                   ec.ec_number,
                   ec.description as ec_description
            FROM dots.translatedAaFeature taf,
                 dots.genefeature gf,
                 dots.transcript t,
                 dots.aaSequenceEnzymeClass asec, 
                 sres.enzymeClass ec
            WHERE  gf.source_id='$$primaryKey$$'
              AND  gf.na_feature_id = t.parent_id
              AND  t.na_feature_id = taf.na_feature_id
              AND  taf.aa_sequence_id = asec.aa_sequence_id
              AND  asec.enzyme_class_id = ec.enzyme_class_id
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneTables.Notes -->
        <sqlQuery name="Notes" displayName="" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="comment_string" />
            <sql> 
            <![CDATA[
            SELECT comment_string
            FROM   dots.NAFeatureComment nafc,
            (
            select source_id, na_feature_id from dots.transcript
            union
            select source_id, na_feature_id from dots.rnatype
            union
            select source_id, na_feature_id from dots.RNAStructure
            union
            select source_id, na_feature_id from dots.genefeature g
            ) feat
            WHERE nafc.na_feature_id = feat.na_feature_id
            AND feat.source_id = '$$primaryKey$$'
            AND TO_CHAR(comment_string) not like 'introns and exons likely.' 
            AND TO_CHAR(comment_string) not like 'introns and exons likely'
            ]]>
            </sql>
        </sqlQuery>
        
        <!-- GeneTables.UniqueMassSpecPeptides -->
        <sqlQuery name="UniqueMassSpecPeptides" displayName="Mass Spec Peptide Summary"
                  isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="sequence"   />
            <column name="start_min"  />
            <column name="end_max"    />
            <column name="count"      />
            <sql>
            <![CDATA[
             select start_min,
                    end_max,
                    count,
                    SUBSTR(taas.sequence, 
                           start_min, 
                           (end_max - start_min +1)) sequence
             from (select start_min,
                    end_max,
                    taaf.aa_sequence_id,
                    count(*) count
             from apidb.massspecsummary mss,
             dots.massspecfeature msf,
             dots.aalocation aal,
             dots.translatedaafeature taaf,
             dots.transcript t,
             dots.genefeature gf
             where mss.mass_spec_summary_id = msf.source_id
             and msf.aa_feature_id = aal.aa_feature_id
             and mss.aa_sequence_id = taaf.aa_sequence_id
             and taaf.na_feature_id = t.na_feature_id
             and t.parent_id = gf.na_feature_id
             and gf.source_id = '$$primaryKey$$'
             group by start_min, 
                      taaf.aa_sequence_id,
                      end_max
             ) u,
             dots.translatedaasequence taas
             where u.aa_sequence_id = taas.aa_sequence_id
            ]]>
            </sql>
        </sqlQuery>

        <!-- GeneTables.PfamDomains -->
        <sqlQuery name="PfamDomains" displayName="Pfam Domains"
                  isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="definition"/>
            <column name="start_min"/>
            <column name="end_max"/>
            <column name="accession" />
            <column name="score"/>
            <sql>
            <![CDATA[
                SELECT distinct df.source_id as accession, 
                       ede.description as definition, 
                       df.score, 
                       aal.start_min, 
                       aal.end_max
                FROM  dots.translatedaafeature taaf,
                      dots.domainfeature df,
                      dots.aalocation aal,
                      sres.externaldatabaseentry ede
                WHERE taaf.aa_sequence_id = df.aa_sequence_id
                AND df.aa_feature_id = aal.aa_feature_id
                AND df.ALGORITHM_NAME = 'HMMPfam'
                AND df.external_database_release_id = ede.external_database_release_id
                AND df.source_id = SUBSTR(external_primary_identifier, 1, 
                                     INSTR(external_primary_identifier, '.', 1, 1) -1)
                AND taaf.source_id = '$$primaryKey$$'
                ORDER BY start_min
            ]]>
            </sql>
        </sqlQuery>

          
        <!-- GeneTables.GoTerms -->
        <sqlQuery name="GoTerms" displayName="GO Terms" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="go_id"/>
            <column name="ontology"/>
            <column name="go_term_name"/>
            <column name="source"/>
            <column name="evidence_code"/>
            <column name="lowercase_evidence_code"/>
            <sql>
            <![CDATA[
            SELECT  
                    decode(ga.is_not, 0, '', 1, 'not ', ga.is_not) || gt.go_id
                        as go_id, 
                    o.ontology, gt.name AS go_term_name, 
                    gail.name AS source, gec.name as evidence_code,
                    LOWER(gec.name) as lowercase_evidence_code
            FROM dots.GeneFeature gf, 
                 dots.Transcript t,
                 dots.TranslatedAaFeature taf, 
                 dots.GoAssociation ga,
                 sres.GoTerm gt, 
                 dots.GoAssociationInstance gai,
                 dots.GoAssociationInstanceLoe gail,
                 dots.GoAssocInstEvidCode gaiec, 
                 sres.GoEvidenceCode gec,
                 (SELECT gr.child_term_id AS go_term_id,
                         DECODE(gp.name, 'biological_process', 'P', 
                                'molecular_function', 'F', 'cellular_component', 'C')
                         AS ontology
                  FROM sres.GoRelationship gr, sres.GoTerm gp
                  WHERE gr.parent_term_id = gp.go_term_id
                    AND gp.go_id in ('GO:0008150','GO:0003674','GO:0005575')) o
            WHERE gf.source_id = '$$primaryKey$$'
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = (SELECT table_id
                                 FROM core.TableInfo
                                 WHERE name = 'TranslatedAASequence')
              AND ga.go_term_id = gt.go_term_id
              AND ga.go_association_id = gai.go_association_id
              AND gai.go_assoc_inst_loe_id = gail.go_assoc_inst_loe_id
              AND gai.go_association_instance_id
                  = gaiec.go_association_instance_id
              AND gaiec.go_evidence_code_id = gec.go_evidence_code_id
              AND gt.go_term_id = o.go_term_id(+)
            ORDER BY o.ontology, gt.go_id
            ]]>
            </sql>
        </sqlQuery>


        <!-- GeneTables.ProteinIds -->
        <sqlQuery name="ProteinIds">
            <paramRef ref="params.primaryKey"/>
            <column name="protein_id"/>
            <sql>
            SELECT protein_id
            FROM dots.transcript
            WHERE source_id = '$$primaryKey$$'
            </sql>
        </sqlQuery>
        
        <!-- GeneTables.UserComments -->
        <sqlQuery name="UserComments" displayName="User Comments" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="comment_id"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name"/>
            <column name="organization"/>
            <column name="comment_date"/>
            <sql>
            <![CDATA[
              SELECT DISTINCT c.comment_id, c.stable_id, 
                     NVL(c.headline, SUBSTR(c.content,0,20) || '...') AS headline,
                     (u.first_name || ' ' || u.last_name) AS user_name,
                     u.organization,
                     c.comment_date
              FROM @LOGIN_SCHEMA@users@LOGIN_DBLINK@ u,
                   cryptocomm.comments@LOGIN_DBLINK@ c,
                   dots.GeneFeature gf 
              WHERE u.email = c.email
                    AND c.comment_target_id = 'gene'
                    AND c.stable_id = gf.source_id
                    AND gf.source_id = '$$primaryKey$$'
              ORDER BY c.comment_date DESC
            ]]>
            </sql>
        </sqlQuery>

    </querySet>

    <querySet name="SequenceTables">

        <sqlQuery name="SequenceComments" displayName="User Comments" isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="comment_id"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name"/>
            <column name="organization"/>
            <column name="comment_date"/>
            <sql>
            <![CDATA[
              SELECT DISTINCT c.comment_id, c.stable_id, 
			   	     NVL(c.headline, SUBSTR(c.content,0,20) || '...') AS headline,
			  		 (u.first_name || ' ' || u.last_name) AS user_name,
					 u.organization,
                     c.comment_date
              FROM @LOGIN_SCHEMA@users@LOGIN_DBLINK@ u,
                   cryptocomm.comments@LOGIN_DBLINK@ c,
                   dots.ExternalNaSequence ens 
              WHERE u.email = c.email
                    AND c.comment_target_id = 'genome'
                    AND c.stable_id = ens.source_id
                    AND ens.source_id = '$$primaryKey$$'
            ]]>
            </sql>
        </sqlQuery>

    </querySet>


    <querySet name="OrfTables">

        <!-- OrfTables.UniqueMassSpecPeptides -->
        <sqlQuery name="UniqueMassSpecPeptides" displayName="Mass Spec Peptide Summary"
                  isCacheable="false">
            <paramRef ref="params.primaryKey"/>
            <column name="sequence"   />
            <column name="start_min"  />
            <column name="end_max"    />
            <column name="count"      />
            <sql>
            <![CDATA[
             select start_min,
                    end_max,
                    count,
                    SUBSTR(taas.sequence, 
                           start_min, 
                           (end_max - start_min +1)) sequence
             from (select start_min,
                    end_max,
                    taaf.aa_sequence_id,
                    count(*) count
             from apidb.massspecsummary mss,
             dots.massspecfeature msf,
             dots.aalocation aal,
             dots.translatedaafeature taaf,
             dots.transcript t,
             dots.genefeature gf
             where mss.mass_spec_summary_id = msf.source_id
             and msf.aa_feature_id = aal.aa_feature_id
             and mss.aa_sequence_id = taaf.aa_sequence_id
             and taaf.na_feature_id = t.na_feature_id
             and t.parent_id = gf.na_feature_id
             and gf.source_id = '$$primaryKey$$'
             group by start_min, 
                      taaf.aa_sequence_id,
                      end_max
             ) u,
             dots.translatedaasequence taas
             where u.aa_sequence_id = taas.aa_sequence_id
            ]]>
            </sql>
        </sqlQuery>

    </querySet>


    <querySet name="UtilityTables">
        <!-- UtilityTables.PfamTermList -->
        <sqlQuery name="PfamTermList" isCacheable='true'>
            <paramRef ref="params.primaryKey"/> 
            <column name="accession"/>
            <column name="name"/>
            <column name="description"/>
            <sql>
                SELECT DISTINCT dr.primary_identifier AS accession,
                                dr.primary_identifier AS name,
                                dr.primary_identifier || ':' ||
                                dr.secondary_identifier || ' ' || dr.remark
                                AS description
                FROM dots.DbRefAaFeature draf, sres.DbRef dr,
                     sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
                WHERE draf.db_ref_id = dr.db_ref_id
                  AND dr.external_database_release_id
                      = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
                  AND ed.name = '$$primaryKey$$'
            </sql>
        </sqlQuery>

     </querySet>

    <querySet name="UserCommentTables">
        
        <!-- UserCommentTables.GeneComments  -->
        <sqlQuery name="GeneComments">
            <paramRef ref="params.primaryKey"/>
            <column name="comment_id"/>
            <column name="headline"/>
            <column name="content"/>
            <column name="location_string"/>
            <column name="user_name"/>
            <column name="organization"/>
            <column name="comment_date"/>
            <column name="project_name_version"/>
            <column name="review_status_id"/>
            <sql>
            <![CDATA[
              SELECT DISTINCT 
                    c.comment_id,
                    NVL(c.headline, SUBSTR(c.content,0,20) || '...') AS headline,
                    c.content,
                    c.location_string,
                    (u.first_name || ' ' || u.last_name) AS user_name,
                    u.organization,
                    c.comment_date,
                    (c.project_name || ' ' || c.project_version) as project_name_version,
                    c.review_status_id 
              FROM @LOGIN_SCHEMA@users@LOGIN_DBLINK@ u,
                   cryptocomm.comments@LOGIN_DBLINK@ c,
                   dots.GeneFeature gf 
              WHERE u.email = c.email
                    AND c.comment_target_id='gene'
                    AND c.stable_id = gf.source_id
                    AND gf.source_id = '$$primaryKey$$'
                    AND c.review_status_id != 'rejected'
              ORDER BY c.comment_date DESC
              ]]>
            </sql>
        </sqlQuery>

        <!-- UserCommentTables.SequenceComments  -->
        <sqlQuery name="SequenceComments">
            <paramRef ref="params.primaryKey"/>
            <column name="comment_id"/>
            <column name="headline"/>
            <column name="content"/>
            <column name="location_string"/>
            <column name="user_name"/>
            <column name="organization"/>
            <column name="comment_date"/>
            <column name="project_name_version"/>
            <column name="review_status_id"/>
            <sql>
            <![CDATA[
              SELECT DISTINCT 
                    c.comment_id,
                    NVL(c.headline, SUBSTR(c.content,0,20) || '...') AS headline,
                    c.content,
                    c.location_string,
                    (u.first_name || ' ' || u.last_name) AS user_name,
                    u.organization,
                    c.comment_date,
                    (c.project_name || ' ' || c.project_version) as project_name_version,
                    c.review_status_id 
              FROM @LOGIN_SCHEMA@users@LOGIN_DBLINK@ u,
                   cryptocomm.comments@LOGIN_DBLINK@ c,
                   dots.ExternalNaSequence ens 
              WHERE u.email = c.email
                    AND c.comment_target_id='genome'
                    AND c.stable_id = ens.source_id
                    AND ens.source_id = '$$primaryKey$$'
                    AND c.review_status_id != 'rejected'
              ORDER BY c.comment_date DESC
              ]]>
            </sql>
        </sqlQuery>
    </querySet>
    
<!-- //////////  END TABLE QUERIES //////////// -->



<!-- //////////  PARAMETERS //////////// -->

    <!-- parameters used by queries -->
    <paramSet name="params">
        
<historyParam name="historyId"
                     prompt="History ID"
                     help="The number in the left column of My Query History"/>


<flatVocabParam name="includePseudogenes"
                     prompt="Include Pseudogenes"
                     help="Choose whether to include pseudogenes in your query results."
                     multiPick="false"
                     visible="false"
                     queryRef="VocabQueries.IncludePseudogenes"/>




<flatVocabParam name="est_libraryId"
                     prompt="Library"
                     help="Est Library to search"
                     multiPick="true"
                     queryRef="VocabQueries.LibraryId" />


<stringParam name="extDbName"
                     prompt="External Database Name"
                     help="The name of an external database as found in GUS"/>

        <stringParam name="extDbRlsVer"
                     prompt="External Database Release Version"
                     help="The version of an external database release as found in GUS"/>



    <stringParam name="min_sigp_sum_score"
                     prompt="Minimum SignalP conclusion score"
                     help="SignalP provides four scores and a conclusion for each such that the conclusion  is 1 if the score meets a certain criteria and 0 otherwise.  The SignalP summary conclusion is the sum of the four conclusions generated by SignalP, thus four is the highest score possible.  We consider a summary conclusion score of three to be significant"
                     substitute="yes"
                     default="3"/>


    <flatVocabParam name="whole_words"
                     prompt="Match only whole words?"
                     help="Select whether to reject text matches that start or end in the middle of a word"
                     multiPick="false"
                     queryRef="VocabQueries.WholeWords"/>


    <flatVocabParam name="case_independent"
                     prompt="Ignore capitalization?"
                     help="Use this parameter to control whether to include text that matches except for capitalization (e.g. treat 'DNA', 'Dna', and 'dna' as all equal)."
                     multiPick="false"
                     queryRef="VocabQueries.CaseIndependence"/>

    <stringParam name="max_pvalue"
                     prompt="Max p-value exponent (BLAST Hits v. NRDB)"
                     help="Only applicable to the 'Similar proteins' field.  Use this to filter away BLAST hits that are below a threshold of significance, so you only search the descriptions of significantly similar proteins."
                     default="-30"/>


    <flatVocabParam name="datasets"
                     prompt="Fields"
                     help="Choose which text fields to search."
                     multiPick="true"
                     queryRef="VocabQueries.TextSearchDatasets"/>

    <flatVocabParam name="parvum_chromosome"
                     prompt="Contigs (Chromosome)"
                     help="Choose a contig for C. parvum."
                     multiPick="false"
                     queryRef="VocabQueries.ParvumChromosome"/>



    <flatVocabParam name="domain_database"
                     prompt="Domain Database"
                     help="Choose one of the constituent databases of InterPro."
                     multiPick="false"
                     queryRef="VocabQueries.DomainDatabase"/>


    <datasetParam name="ds_gene_ids"
                     prompt="Gene id input set"
                     help="input a comma delimited set of gene ids, or upload a file"
                     default="cgd6_690"
                     />



        <!-- params.primaryKey -->
        <stringParam name="primaryKey" 
                     prompt="Primary Key" 
                     help="primary key"/>
        
        <!-- params.locus_tag -->
        <stringParam name="locus_tag" 
                     prompt="Gene ID" 
                     help="Enter the identifier for the gene in which you are interested. These IDs  correspond to the /locus_tag field of GenBank records submitted by the sequence annotators.  Gene ID's for &lt;i&gt; 
C. hominis &lt;/i&gt; have a 'Chro.' prefix followed by a serial number, e.g. 'Chro.20116'.  Gene ID's from the &lt;i&gt; C. parvum &lt;/i&gt; whole genome project are of the form 
'cgd6_690'.  In the case of &lt;i&gt; C. parvum &lt;/i&gt; the '6' in 'cdg6' indicates that this gene is on chromosome 6. Gene ID's from the independent &lt;i&gt; C. parvum &lt;/i&gt; Chromosome 6 sequencing project have '56k.' or '1MB.' prefixes. Wild card 
searches, e.g.  'cgd7_*' are permitted.  This search would return all annotated genes on chromosome 7 from the &lt;i&gt; C. parvum. &lt;/i&gt; whole genome project" 
                     sample="(Examples: cgd6_690,  Chro.20116, 1MB.13)"
                     substitute="yes"
                     default="cgd6_690"/>
        
        <!-- params.keyword -->
        <stringParam name="text_expression" 
                     prompt="Keyword" 
                     help="Enter one or more words that will be used to search for a match in the 'Gene Product' or the 'Annotated Notes' fields. Multiple words are matched in order. A partial word may be used, e.g. 'dehydr' will match '&lt;b&gt;dehydr&lt;/b&gt;ogenase'. The '*' character may be used as a wildcard to join multiple words or partial words, e.g. 'red*ase' will find '&lt;b&gt;red&lt;/b&gt;uct&lt;b&gt;ase&lt;/b&gt;' and 'p&lt;b&gt;red&lt;/b&gt;icted lactate dehydrogen&lt;b&gt;ase&lt;/b>'. Letter case is not important, e.g. 'ACTIN' or 'actin' will return the same results."
                     sample="(Example: oocyst)"
                     substitute="yes"
                     default="oocyst"/>

        <!-- params.num_exons_gte -->
        <stringParam name="num_exons_gte" 
                     prompt="Minimum Exon Count" 
                     help="Enter a minimum of exons per gene for which you would like to search. The gene exon counts are based on the gene annotations from the sequencing centers and official curators" 
                     sample="(Example: 2)"
                     substitute="yes"
                     default="2"/>

        <!-- params.num_exons_lte -->
        <stringParam name="num_exons_lte" 
                     prompt="Maximum Exon Count" 
                     help="Enter a maximum of exons per gene for which you would like to search. The gene exon counts are based on the gene annotations from the sequencing centers and official curators" 
                     sample="(Example: 5)"
                     substitute="yes"
                     default="5"/>

        <!-- params.bp_overlap_gte -->
        <stringParam name="bp_overlap_gte" 
                     prompt="Minimum Base Overlap" 
                     help="Enter minimum cutoff of EST and gene overlap. Genes having sequence overlap of at least this length with one or more ESTs will be returned. Useful lengths of sequence overlap between an EST sequence and a predicted gene sequence are usually 50nt or greater. " 
                     sample="(Example: 100)"
                     substitute="yes"
                     default="100"/>

        <!-- params.best_alignment_only -->
        <flatVocabParam name="best_alignment_only"
                     prompt="Best alignments only"
                     help="Select yes to return only those EST alignments that are the best alignment for the EST.  Many of the ESTs align at multiple positions in the genome.  Selecting yes will consider only those alignments that are the best for each EST"
                     multiPick="false"
                     queryRef="VocabQueries.best_alignment_only"/>

        <!-- params.high_confidence_only -->
        <flatVocabParam name="high_confidence_only"
                     prompt="Consistent alignments only"
                     help="Select yes to return only those EST alignments that are consistent.  We define define consistent as having >= 95% identity (the majority have >= 99%) and aligning the EST sequence in a manner that is consistent with a gene model.  Ie, there can be gaps (representing introns) in the target genomic sequence but not in the EST query."
                     multiPick="false"
                     queryRef="VocabQueries.high_confidence_only"/>

        <stringParam name="min_percent_identity"
                     prompt="Percent identity >="
                     default="90"
                     help='You can specify a minimum percent identity of the alignment between the EST and genomic DNA.  We only store alignments with >= 90% identity'/>

        <stringParam name="min_percent_est_aligned"
                     prompt="Percent of EST bases aligned >="
                     default="20"
                     help='Enter the minimum percentage of bases in the EST sequence that are aligned to genomic DNA in this alignment.'/>


        <!-- params.upperMolWtBound -->
        <stringParam name="upperMolWtBound" 
                     prompt="Max Molecular Weight (Daltons)" 
                     help="Provide an upper bound, in Daltons, for the molecular weight." 
                     sample="(Example: 40000)"
                     substitute="yes"
                     default="40000"/>

        <!-- params.lowerMolWtBound -->
        <stringParam name="lowerMolWtBound" 
                     prompt="Min Molecular Weight (Daltons)" 
                     help="Provide an lower bound, in Daltons, for the molecular weight." 
                     sample="(Example: 30000)"
                     substitute="yes"
                     default="30000"/>

        <!-- params.num_tm_gte -->
        <stringParam name="num_tm_gte" 
                     prompt="Minimum Number of Transmembrane Domains" 
                     help="Enter a minimum number of predicted transmembrane domains to start your search. The algorithim TMHMM was used to predict putative transmembrane domains on annotated proteins. Proteins may have zero or more transmembrane domains." 
                     sample="(Example: 2)"
                     substitute="yes"
                     default="2"/>

        <stringParam name="num_tm_lte" 
                     prompt="Maximum Number of Transmembrane Domains" 
                     help="Enter a maximum number of predicted transmembrane domains to start your search. The algorithim TMHMM was used to predict putative transmembrane domains on annotated proteins. Proteins may have zero or more transmembrane domains." 
                     sample="(Example: 5)"
                     substitute="yes"
                     default="5"/>

<!-- params.orf -->
        <stringParam name="orf" 
                     prompt="Orf ID" 
                     help="Enter an indentifier for an Open Reading Frame.  Wildcards (*) are allowed." 
                     sample="(Examples: AAEL01000259-5-3339-3085, AAEE01000009*, AAEL*)"
                     substitute="yes"
                     default="AAEL01000259-5-3339-3085"/>

        <!-- params.contig -->
        <stringParam name="contig" 
                     prompt="Contig ID" 
                     help="Enter an identifier for a genomic contig. The IDs correspond to the accession numbers in the GenBank records supplied by the sequencing centers. Contig ID's from &lt;i&gt; C. parvum &lt;/i&gt; whole genome sequencing project begin with 'AAEE' and contig ID's for &lt;i&gt; C. hominis &lt;/i&gt; begin with 'AAEL'. The &lt;i&gt; C. parvum &lt;/i&gt; Chromosome 6 independently sequenced at MRC-LMB  before the whole genome project was completed is 'BX526834 '. Wild cards are permitted in this search, i.e. use AAEE* to ask for all &lt;i&gt; C. 
parvum &lt;/i&gt; contigs." 
                     sample="(Examples: AAEL01000057, AAEE01000009, BX526834)"
                     substitute="yes"
                     default="(Example: AAEE01000006)"/>
                
        <!-- params.protein_id -->
        <stringParam name="protein_id" 
                     prompt="Protein ID" 
                     help="Enter a GenBank Protein ID. Wild cards are permitted in this search, i.e. use EAK* to ask for all &lt;i&gt; C. 
parvum &lt;/i&gt; proteins." 
                     sample="(Examples: EAK89596.1, EAK89596, EAL36295.1, EAL36295)"
                     substitute="yes"
                     default="EAK89769"/>
                
        <!-- params.ec_number_pattern -->
        <stringParam name="ec_number_pattern"
                     prompt="EC Number"
                     help="Enter a valid Enzyme Commission (EC) number. EC numbers describe enzymes hierarchically by the class of reactions they catalize. For example: 2.7.7.6, 3.5.1.31.  Use '-' in place of numbers to denote partial EC Numbers, for example, '2.7.7.-'."
                     sample="Examples: 2.7.7.6, 3.5.1.31"
                     substitute="yes"
                     default="2.7.7.-"/>

        <!-- params.pfam_list -->
        <flatVocabParam name="pfam_list" 
                     prompt="List of Pfam Term"
                     help=''
                     multiPick="false"
                     visible="false"
                     queryRef="VocabQueries.PfamTermList"/>
                     
        <!-- params.pfam_term -->
        <stringParam name="pfam_term"
                     prompt="Pfam Term"
                     default="Protein kinase domain"
                     help='Enter a Pfam term in the form of an accession number (e.g. "PF00478"), description ("IMP dehydrogenase / GMP reductase domain") or name ("IMPDH").  Asterisks can be used as wildcard characters in a Pfam definition (e.g. "Ribosomal*"). Pfam description terms assigned to genes in CryptoDB are available above for pasting into this field.'/>

        <!-- params.go_term -->
        <stringParam name="go_term"
                     prompt="GO Term or GO ID"
                     default="catalytic activity"
                     help='Enter a GO ID (e.g. "GO:0003824") or GO Term (e.g. "catalytic activity").  The character "*" can be used as a wildcard in a GO Term (e.g. "*kinase*")'/>

        <!-- params.organism -->
        <flatVocabParam name="organism" 
                     prompt="&lt;i&gt;Cryptosporidium&lt;/i&gt; species" 
                     help="Use this option to constrain your search to one or more species. Only the &lt;i&gt;Cryptosporidium&lt;/i&gt; species for which we have data relevant to this query are listed." 
                     multiPick="true"
                     queryRef="VocabQueries.AnnotatedOrganisms"/>
        
        <!-- params.parvumOrganism -->
        <flatVocabParam name="parvumOrganism" 
                     prompt="&lt;i&gt;Cryptosporidium&lt;/i&gt; species" 
                     help="Use this option to constrain your search to one or more species. Only the &lt;i&gt;Cryptosporidium&lt;/i&gt; species for which we have data relevant to this query are listed." 
                     visible="false"
                     multiPick="true"
                     queryRef="VocabQueries.ParvumOrganism"/>
        
        <!-- params.allOrganism -->
        <flatVocabParam name="allOrganisms" 
                     prompt="&lt;i&gt;Cryptosporidium&lt;/i&gt; species" 
                     help="Use this option to constrain your search to one or more species. Only the &lt;i&gt;Cryptosporidium&lt;/i&gt; species for which we have data relevant to this query are listed." 
                     multiPick="true"
                     queryRef="VocabQueries.AllOrganisms"/>
        
        <!-- params.rnatype -->
        <flatVocabParam name="rnatype" 
                     prompt="Gene Type" 
                     help="Select one or more gene types to be displaysed. Gene type assignments are based on the gene annotations from the sequencing centers and official curators." 
                     multiPick="true"
                     queryRef="VocabQueries.RNAType"/>
        
        <!-- params.library -->
        <flatVocabParam name="libraryId" 
                     prompt="EST Library" 
                     help="Select a clone library." 
                     multiPick="true"
                     queryRef="VocabQueries.EstLibraries"/>


        <!-- params.inNotIn -->
        <flatVocabParam name="inNotIn" 
                     prompt="EST" 
                     help="" 
                     multiPick="false"
                     queryRef="VocabQueries.inNotIn"/>

        <stringParam name="source_id"
                     prompt="NestedRecord Param"
                     help="Only used in a nested record"/>

        <!-- params.profile_pattern -->
        <stringParam name="profile_pattern"
                     visible="false"
                     prompt="Profile Pattern"
                     help="Example: '%hsa:N%pfa:Y%'"
                     default="%hsa:N%pfa:Y%"/>

        <!-- params.included_species -->
        <stringParam name="included_species"
                     prompt="Included Species"
                     help="List of included species (for documentation only)"/>

        <!-- params.excluded_species -->
        <stringParam name="excluded_species"
                     prompt="Excluded Species"
                     help="List of excluded species (for documentation only)"/>

        <!-- params.phyletic_indent_map -->
        <flatVocabParam name="phyletic_indent_map"
                     visible="false"
                     queryRef="VocabQueries.PhyleticIndentMap"/>

        <!-- params.phyletic_term_map -->
        <flatVocabParam name="phyletic_term_map"
                     visible="false"
                     queryRef="VocabQueries.PhyleticTermMap"/>

        <!-- params.start_location -->
        <stringParam name="start_location"
                     prompt="Start Location"
                     help="Lower bound on nucleotide range to search for gene"
                     default="1"/>

        <!-- params.end_location -->
        <stringParam name="end_location"
                     prompt="End Location (0 = end)"
                     help="Upper bound on nucleotide range to search for gene.  Use 0 to search to end of sequence."
                     default="0"/>



        <!-- params.BlastQueryType -->
        <flatVocabParam name="BlastQueryType"
            id="BlastQueryType"
            prompt="BLAST input sequence type"
            help="Select the type of your query sequence (eg. DNA or protein)"
            multiPick="false"
            queryRef="VocabQueries.BlastQueryType"/>
       
        <!-- params.BlastQuerySequence -->
        <stringParam name="BlastQuerySequence"
            id="BlastQuerySequence"
            prompt="BLAST input sequence"
            help="BLAST Input Sequence"
            length="4000"
            sample=""/>
        

         
  <!-- params.BlastDatabaseType -->
        <flatVocabParam name="BlastDatabaseType"
            id="BlastDatabaseType"
            prompt="BLAST target database type"
            help="Select the type of the database you want to search"
            multiPick="false"
            queryRef="VocabQueries.BlastDatabaseType"/>


  <!-- params.BlastDatabaseOrganism -->
        <flatVocabParam name="BlastDatabaseOrganism"
            id="BlastDatabaseOrganism"
            prompt="Target species"
            help="Select the species from which the sequences in the target database originated"
            multiPick="true"
            queryRef="VocabQueries.BlastDatabaseOrganism"/>

       
        
        <!-- params.-filter -->
        <flatVocabParam name="-filter"
            id="-filter"
            prompt="Low complexity filter"
            queryRef="VocabQueries.Filter"
            help="Set the low complexity filter. WUBLAST's default behavior is not to use this filter. NCBIBLAST's is to use it. When filter is set to 'yes' WUBLAST uses seg; NCBIBLAST uses dust for blastn, seg otherwise."
            default="yes"/>

 <stringParam name="-e"
            id="-e"
            prompt="Expect value (E)"
            help="Set the significance threshold for reporting hits. The E value represents the number of alignments with a given score that would expected to occur randomly in the database. Thus, a hit with an E value of 10 can be interpreted as meaning that one would expect to see 10 similar matches in the database purely by chance."
            default="0.05"
            sample="1e-10"/>

        
        <!-- params.-v -->
        <stringParam name="-v"
            id="-v"
            prompt="Maximum descriptions (V)"
            help="Set the maximum number of one-line descriptions of matching database sequences to show at the top of the report."
            default="50"/>
        
        <!-- params.-b -->
        <stringParam name="-b"
            id="-b"
            prompt="Maximum alignments (B)"
            help="Set the maximum number of database sequences for which any alignments will be reported."
            default="50"/>

        <!-- params.Dataset -->
        <flatVocabParam name="Dataset"
            id="Dataset"
            prompt="Dataset"
            help="Choose one or more datasets to search with the given motif"
            multiPick="true"
            queryRef="VocabQueries.MotifDataset"/>
        
        
        <!-- params.DatasetGene -->
        <flatVocabParam name="DatasetGene"
            id="Dataset"
            prompt="Gene Dataset"
            help="Choose one or more datasets to search with the given motif"
            multiPick="true"
            queryRef="VocabQueries.MotifDatasetGene"/>
        
        <!-- params.DatasetORF -->
        <flatVocabParam name="DatasetORF"
            id="Dataset"
            prompt="ORF Dataset"
            help="Choose one or more datasets to search with the given motif"
            multiPick="true"
            queryRef="VocabQueries.MotifDatasetORF"/>
        
        
        <!-- params.Expression -->
        <stringParam name="Expression"
            id="Expression"
            prompt="Pattern"
            help="Enter a Perl regular expression describing the desired motif.  Example: 'CC6+RK' searches for two consecutive cysteine residues followed by a stretch of hydrophobic amino acids followed by the aminoacids arginine and lysine."
            sample="(Example: CC6+RK)"
            default="CC6+RK"/>

        <!-- params.min_sequence_count -->
        <stringParam name="min_sequence_count"
                     prompt="Minimum Number of&lt;br&gt;Unique Peptide Sequences"
                     help="Use this parameter to set a minimum for the number of unique peptide sequences found that must match a gene in order for it to be returned by the query. Roughly speaking this parameter provides a measure of the abundance of the protein product in question, at least within a particular experiment."
                     substitute="yes"
                     default="1"/>

        <!-- params.min_spectrum_count -->
        <stringParam name="min_spectrum_count"
                     prompt="Minimum Number of Spectra"
                     help="Use this parameter to set a minimum for the number of mass spectra found that must match a gene in order for it to be returned by the query. Roughly speaking this parameter provides a measure of the abundance of the protein product in question, at least within a particular experiment."
                     substitute="yes"
                     default="1"/>

        <!-- params.wastling_ms_assay -->
        <flatVocabParam name="wastling_ms_assay" 
                     prompt="Assay Type"
                     help=''
                     multiPick="true"
                     visible="true"
                     queryRef="VocabQueries.WastlingMsAssay"/>

        <!-- params.wastlinglowery_ms_assay -->
        <flatVocabParam name="wastlinglowery_ms_assay" 
                     prompt="Assay Type"
                     help=''
                     multiPick="true"
                     visible="true"
                     queryRef="VocabQueries.WastlingLoweryMsAssay"/>

     </paramSet>


 <paramSet name="GeneBlastDbParams">
        
        <flatVocabParam name="BlastDatabaseType"
            id="BlastDatabaseType"
            prompt="BLAST target database type"
            help="Select the type of sequences to search against. The choices are Transcripts (nucleotide sequences), protein, and Transcripts translated in all six reading frames."
            multiPick="false"
            queryRef="VocabQueries.BlastDatabaseTypeGene"/>

 <flatVocabParam name="BlastDatabaseOrganism"
            id="BlastDatabaseOrganism"
            prompt="Target species"
            help="Select the species from which the sequences in the target database originated"
            multiPick="true"
            queryRef="VocabQueries.BlastDatabaseOrganismGene"/>



     </paramSet>


    <paramSet name="SequenceBlastDbParams">

 <flatVocabParam name="BlastDatabaseType"
            id="BlastDatabaseType"
            prompt="BLAST target database type"
            help="Select the type of database your want to search."
            multiPick="false"
            queryRef="VocabQueries.BlastDatabaseTypeGenome"/>

 <flatVocabParam name="BlastDatabaseOrganism"
            id="BlastDatabaseOrganismGenome"
            prompt="Target species"
            help="Select the species from which the sequences in the target database originated"
            multiPick="true"
            queryRef="VocabQueries.BlastDatabaseOrganismGenome"/>



     </paramSet>


    <paramSet name="OrfBlastDbParams">

  <flatVocabParam name="BlastDatabaseType"
            id="BlastDatabaseType"
            prompt="BLAST target database type"
            help="Select the type of database your want to search."
            multiPick="false"
            queryRef="VocabQueries.BlastDatabaseTypeORF"/>

<flatVocabParam name="BlastDatabaseOrganism"
            id="BlastDatabaseOrganism"
            prompt="BLAST target database species"
            help="Select the species from which the sequences in the target database originated"
            multiPick="true"
            queryRef="VocabQueries.BlastDatabaseOrganismORF"/>


     </paramSet>


    <paramSet name="EstBlastDbParams">

  <flatVocabParam name="BlastDatabaseType"
            id="BlastDatabaseType"
            prompt="BLAST target database type"
            help="Select the type of database your want to search."
            multiPick="false"
            queryRef="VocabQueries.BlastDatabaseTypeEST"/>

 <flatVocabParam name="BlastDatabaseOrganism"
            id="BlastDatabaseOrganism"
            prompt="BLAST target database species"
            help="Select the species from which the sequences in the target database originated."
            multiPick="true"
            queryRef="VocabQueries.BlastDatabaseOrganismEST"/>



     </paramSet>






<!-- Parameters for the SRT Page -->
<paramSet name="SrtParams">
<!-- SrtParams.genes_ids -->
        <stringParam name="genes_ids"
            id="genes_ids"
            prompt="Gene IDs"
            help="Gene IDs."
            default="cgd5_1020 Chro.60251"/>

<!-- SrtParams.contigs_ids -->
        <stringParam name="contigs_ids"
            id="contigs_ids"
            prompt="Contig IDs"
            help="Contig IDs."
            default="AAEL01000057"/>

<!-- SrtParams.orfs_ids -->
        <stringParam name="orfs_ids"
            id="orfs_ids"
            prompt="ORFs IDs"
            help="ORF IDs."
            default="AAEE01000001-3-285318-285470"/>

</paramSet>
<!-- End SRT Paramters -->

<paramSet name="epitopeParams">
    <!--  epitopeParams.confidence -->
    <flatVocabParam name="confidence"
                    prompt="Confidence"
                    help="Epitopes are mapped to genes in CryptoDB using high 
                    quality BLAST similarities (percent identity >= 97%) between 
                    the GenBank proteins listed on IEDB and the proteins found 
                    in CryptoDB, and exact string matching.  Confidence levels are assigned to each set of epitopes based on the quality of this mapping.  A high confidence is assigned to a set where all of the epitopes are found on a given BLAST hit.  A medium confidence is assigned to a set where either some, but not all, of the epitopes in a set are found on a given BLAST hit, or where all of the epitopes in a set are found in a given protein, but the protein was not identified as a match by BLAST.  A low confidence is assigned to sets where some, but not all, of the epitopes are found in a given protein, but the protein was not identified by BLAST.  Choose one or more assigned confidence levels to search for epitopes in."
                    multiPick="true"
                    queryRef="VocabQueries.Confidence"/>
</paramSet>



<!-- ////////// END  PARAMETERS //////////// -->

<!-- //////////   XMLQUESTIONS  //////////// -->
    <xmlQuestionSet name="XmlQuestions"
                 displayName="Data contents from XML data sources">

        <description>
          Data contents from XML sources
        </description>

        <xmlQuestion name="News"
                  displayName="CryptoDB News"
                  recordClassRef="XmlRecordClasses.NewsRecord"
                  xmlDataURL="cryptodbNews.xml">
            <description>
                Retrieve news from XML data source
            </description>
        </xmlQuestion>

        <xmlQuestion name="NewsRss"
                  displayName="CryptoDB News"
                  recordClassRef="XmlRecordClasses.NewsRecord"
                  xmlDataURL="cryptodbNews.xml">
            <description>
                News as RSS Feed
            </description>
        </xmlQuestion>

        <!-- XmlQuestions.DataSources -->
        <xmlQuestion name="DataSources"
                  displayName="Data Sources for CryptoDB"
                  recordClassRef="XmlRecordClasses.DataSourcesRecord"
                  xmlDataURL="cryptoResources-pubmed.xml"
                  xslURL="resources2records.xsl">
            <description>
                Data sources of CryptoDB.
            </description>
        </xmlQuestion>

        <xmlQuestion name="Tutorials"
                  displayName="Tutorials"
                  recordClassRef="XmlRecordClasses.TutorialsRecord"
                  xmlDataURL="tutorials.xml">
            <description>
                Tutorials.
            </description>
        </xmlQuestion>

    </xmlQuestionSet>


    <!-- xml record class set -->
    <xmlRecordClassSet name="XmlRecordClasses">
    
        <!-- XmlRecordClasses.DataSourcesRecord -->
        <xmlRecordClass name="DataSourcesRecord"
        	type="CryptoDB Data Source"
        	idPrefix="DS."
        	delimiter="@">
            <xmlAttribute name="resource"/>
            <xmlAttribute name="version"/>
            <xmlAttribute name="publicUrl"/>
            <xmlAttribute name="organisms"/>
            <xmlAttribute name="category"/>
            <xmlAttribute name="description"/>
            <xmlAttribute name="display"/>
            <xmlTable name="publications">
               <xmlAttribute name="pmid"/>
               <xmlAttribute name="pmauthors"/>
               <xmlAttribute name="pmtitle"/>
               <xmlAttribute name="pmdetails"/>
            </xmlTable>
         </xmlRecordClass>

        <!-- XmlRecordClasses.NewsRecord -->
        <xmlRecordClass
            name="NewsRecord"
            type="News"
            idPrefix="NEWS."
            delimiter="@">
            <xmlAttribute name="headline"/>
            <xmlAttribute name="date"/>
            <xmlAttribute name="item"/>
            <xmlAttribute name="tag"/>
         </xmlRecordClass>

        <xmlRecordClass
        	name="TutorialsRecord"
        	type="Tutorial"
        	idPrefix="Tut."
        	delimiter="@">
            <xmlAttribute name="title"/>
            <xmlAttribute name="description"/>
            <xmlAttribute name="projects"/>
            <xmlAttribute name="fileName"/>
            <xmlAttribute name="duration"/>
            <xmlAttribute name="size"/>
        </xmlRecordClass>

    </xmlRecordClassSet>

    <groupSet name="paramGroups">
        
        <group name="advancedParams" displayName="Advanced Parameters" displayType="ShowHide">
            <description>
                <![CDATA[
                ]]>
            </description>
        </group>
    </groupSet>

</wdkModel>


