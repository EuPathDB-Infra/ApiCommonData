<wdkModel>

  <!-- notes

     - should ms_assay param be a controlled vocab pulled from the database?

  -->

  <paramSet name="isolateParams" includeProjects="CryptoDB,PlasmoDB, ApiDB">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- ID -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
        <datasetParam name="isolate_id" prompt="Isolate ID" includeProjects="CryptoDB,PlasmoDB,ApiDB">
            <help>Input a comma delimited set of  Isolate IDs, or upload a file. Wildcards (*) are allowed.</help>
            <suggest includeProjects="CryptoDB"
                     sample="AF527841, DQ1145002, DQ115*"
                     default="AF527841"/>
            <suggest includeProjects="PlasmoDB"
                     sample="CP.458297,CP.45828*,BC.458088"
                     default="CP.458297"/>
           <suggest includeProjects="ApiDB" 
                     sample="AF527841, DQ1145002, DQ115*"
                     default="AF527841"/>
         </datasetParam>



        <stringParam name="gene_id" prompt="Gene Name">
            <help>Enter an Gene Name.  Wildcards (*) are allowed.</help>
            <suggest includeProjects="CryptoDB,PlasmoDB,ApiDB"
                     sample="cgd5_3160, cgd5_31*, *"
                     default="cgd5_3160"/>
        </stringParam>

        <stringParam name="author" prompt="Author/Submitter">
            <help>Enter an Author name.  Wildcards (*) are allowed.</help> 
            <suggest includeProjects="CryptoDB,PlasmoDB,ApiDB" sample="Xiao" default="Xiao"/> 
        </stringParam>

        <flatVocabParam name="isolate_organism" includeProjects="CryptoDB,PlasmoDB,ApiDB"
             queryRef="organismIQ.withIsolates"
            prompt="Organism"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="specific_host" includeProjects="CryptoDB,PlasmoDB,ApiDB,PlasmoDB"
             queryRef="hostVQ.withIsolates"
             default="Mammals - human"
             prompt="Host"
             multiPick="true"
             quote="false"
             displayType="treeBox">
             <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="isolation_source" includeProjects="CryptoDB,PlasmoDB,ApiDB"
             queryRef="isolationSourceVQ.withIsolates"
             prompt="Isolation Source"
             multiPick="true"
             quote="false">
             <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="product" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="productVQ.withIsolates"
            prompt="Product Name"
            multiPick="true"
            quote="false"
            displayType="treeBox">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="study" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="studyVQ.withIsolates"
            prompt="Study Name"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="CryptoDB,PlasmoDB,ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="country" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="countryVQ.withIsolates"
            prompt="Country Name"
            default="Unknown"
            multiPick="true"
            quote="false"
            displayType="treeBox">
            <useTermOnly value="true" includeProjects="ApiDB"/>
            <suggest selectMode="none" />
        </flatVocabParam>

        <flatVocabParam name="continent" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="continentVQ.withIsolates"
            prompt="Continent Name"
            default="--None--"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam> 

        <flatVocabParam name="strain" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="strainVQ.withIsolates"
            prompt="Species/Strain Name"
            multiPick="true"
            quote="false"
            displayType="treeBox">
                  <help>
                         Species Name (and strain if appropriate)
                        </help>
            <useTermOnly value="true" includeProjects="ApiDB"/>
            <suggest selectMode="none" />
       </flatVocabParam>

       <flatVocabParam name="type" includeProjects="PlasmoDB,ApiDB"
            queryRef="typeVQ.withIsolates"
            prompt="Isolate assay type"
            multiPick="true"
            quote="true"> 
        <help>
          Choose the isolate type you want to query
            </help>
        <useTermOnly value="true" includeProjects="ApiDB"/> 
        <suggest selectMode="all" />
       </flatVocabParam>

       <flatVocabParam name="snp_assay_type" includeProjects="PlasmoDB,ApiDB"
            queryRef="typeVQ.snps_only"
            prompt="Isolate assay type"
            multiPick="true"
            quote="true"> 
        <help>
          Choose the isolate type you want to query
            </help>
        <useTermOnly value="true" includeProjects="ApiDB"/> 
       </flatVocabParam>

       <flatVocabParam name="submitter" includeProjects="PlasmoDB,ApiDB"
            queryRef="submitterVQ.withIsolates"
            prompt="Submitter"
            multiPick="true"
            quote="false"> 
                        <help>
                          Search isolates by submitter name.
                        </help>
            <useTermOnly value="true" includeProjects="ApiDB"/> 
       </flatVocabParam>

       <enumParam name="text_fields"
                  prompt="Fields"
                  multiPick="true">
         <help>
             Choose which text fields to search.
         </help>
         <useTermOnly value="true" includeProjects="ApiDB"/>
         <enumList>
           <enumValue>
             <term>Organism</term>
             <internal>organism</internal>
           </enumValue>
           <enumValue>
             <term>Description</term>
             <internal>description</internal>
           </enumValue>
           <enumValue>
             <term>Product</term>
             <internal>product</internal>
           </enumValue>
           <enumValue>
             <term>Strain</term>
             <internal>strain</internal>
           </enumValue>
           <enumValue>
             <term>Host</term>
             <internal>host</internal>
           </enumValue>
           <enumValue>
             <term>Note</term>
             <internal>note</internal>
           </enumValue>
           <enumValue>
             <term>Isolation Source</term>
             <internal>isolation_source</internal>
           </enumValue>
           <enumValue>
             <term>Geographic Location</term>
             <internal>geographic_location</internal>
           </enumValue>
           <enumValue>
             <term>Reference</term>
             <internal>Reference</internal>
           </enumValue>
           <enumValue>
             <term>Gene overlap</term>
             <internal>GeneOverlap</internal>
           </enumValue>
         </enumList>
       </enumParam>

    </paramSet>

    <querySet name="organismIQ" queryType="vocab">
      <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT src.organism || '  - (' || count(src.organism) || ' isolates)' AS term,
             src.organism AS internal
      FROM   DoTS.IsolateSource src,
             DoTS.ExternalNASequence etn
      WHERE  src.na_sequence_id = etn.na_sequence_id
         AND src.organism is not null
      GROUP BY src.organism
      ORDER BY src.organism
     ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="hostVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
    <column name="internal"/>
    <column name="term"/>
    <column name="parentTerm"/>
    <sql>
    <![CDATA[
 select v.term, v.term as internal, v.parent as parentTerm
 from apidb.isolatevocabulary v, 
      (select distinct regexp_replace(specific_host, ':.*') term from apidb.isolateattributes) c
 where v.term = c.term
 and v.type = 'specific_host'
 union
 select 'Reptiles' as term, 'Reptiles' as internal, '' as parentterm from dual
 union
 select 'Mammals - non human' as term, 'Mammals - non human' as internal, '' as parentterm from dual
 union
 select 'Mammals - human' as term, 'Mammals - human' as internal, '' as parentterm from dual
 union
 select 'Amphibians' as term, 'Amphibians' as internal, '' as parentterm from dual
 union
 select 'Mollusks' as term, 'Mollusks' as internal, '' as parentterm from dual
 union
 select 'Birds' as term, 'Birds' as internal, '' as parentterm from dual
 union
 select 'marsupial' as term, 'marsupial' as internal, 'Mammals - non human' as parentterm from dual
 union
 select 'rodent' as term, 'rodent' as internal, 'Mammals - non human' as parentterm from dual
 union
 select 'Unknown' as term, 'Unknown' as internal, '' as parentterm from dual
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>

    </querySet>

  <querySet name="isolationSourceVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
    <column name="term"/>
    <column name="internal"/>
    <sql>
    <![CDATA[
select initcap(v.term) as term, v.term as internal
from apidb.isolatevocabulary v, 
     (select distinct regexp_replace(isolation_source, ':.*') term from apidb.isolateattributes) c
where v.term = c.term
and v.type = 'isolation_source'
order by term asc
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

    </querySet>

  <querySet name="productVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
    <column name="internal"/>
    <column name="term"/>
    <column name="parentTerm"/>
    <sql>
    <![CDATA[
select v.term, v.term as internal, v.parent as parentTerm
from apidb.isolatevocabulary v, 
     (select distinct regexp_replace(product, ':.*') term from apidb.isolateattributes) c
where v.term = c.term
and v.type = 'product'
union
select 'others' as term, 'others' as internal, '' as parentterm from dual
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>

     </querySet>

  <querySet name="studyVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
    <column name="internal"/>
    <column name="term"/>
    <sql>
    <![CDATA[
    SELECT distinct replace(ref.title, ',', ';') as term,
                    replace(ref.title, ',', ';') as internal
    FROM   SRES.Reference ref
    WHERE  ref.title IS NOT NULL
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="countryVQ" queryType="vocab">

    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>

      <sql>
      <![CDATA[
select v.term, v.term as internal, initcap(v.parent) as parentTerm
from apidb.isolatevocabulary v, 
     (select distinct regexp_replace(country, ':.*') term from apidb.isolateattributes) c
where v.term = c.term
and v.type = 'geographic_location'
union 
select distinct initcap(parent) as term, initcap(parent) as internal, '' as parentterm 
from apidb.isolatevocabulary where type = 'geographic_location' and parent is not null
union 
select 'Unknown' as term, 'Unknown' as internal, '' as parentterm from dual
      ]]>
      </sql>
    </sqlQuery>

 
    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="continentVQ" queryType="vocab">

     <sqlQuery name="withIsolates" includeProjects="CryptoDB, PlasmoDB">
        <column name="internal"/>
        <column name="term"/>
        <sql>
        <![CDATA[
        SELECT distinct initcap(src.continent) AS term,
               src.continent AS internal
        FROM   ApiDB.Continents src
        WHERE  src.continent is not null
        UNION
        SELECT '--None--' AS term,
               '0' AS internal
        FROM   dual
        ]]> 
     </sql> 
  </sqlQuery>

  <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB"> 
      <wsColumn name="internal" width="200" wsName="internal"/> 
      <wsColumn name="term" width="200" wsName="term"/> 
  </processQuery> 
  </querySet>


  <querySet name="typeVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT distinct src.data_type AS term,
             src.data_type AS internal
      FROM   ApiDB.IsolateAttributes src
      ORDER BY src.data_type
      ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

    <sqlQuery name="snps_only" includeProjects="CryptoDB,PlasmoDB,ApiDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT distinct src.data_type AS term,
             src.data_type AS internal
      FROM   ApiDB.IsolateAttributes src
             where src.data_type != 'PopSet'
      ORDER BY src.data_type
      ]]>
      </sql>
    </sqlQuery>

  </querySet>

  <querySet name="strainVQ" queryType="vocab">

    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>

<sql includeProjects="CryptoDB">
      <![CDATA[
select distinct i.organism as term, tn.name as internal, p.name as parentTerm 
from apidb.isolateattributes i, sres.taxonname tn, 
     sres.taxon t, sres.TaxonName p
where i.organism = tn.name
and tn.taxon_id = t.taxon_id
and tn.name_class = 'scientific name'
and t.parent_id = p.taxon_id
and p.name_class =  'scientific name'
--union
--select 'Cryptosporidium' as term, 'Cryptosporidium' as internal, '' as parentTerm from dual
union
select 'unclassified Cryptosporidium' as term, 'unclassified Cryptosporidium' as internal, 'Cryptosporidium' as parentTerm from dual
union
select 'environmental samples' as term, 'environmental samples' as internal, 'Cryptosporidium' as parentTerm from dual
     ]]>
      </sql>

      <sql  includeProjects="PlasmoDB">
      <![CDATA[
select distinct i.organism as term, tn.name as internal, p.name as parentTerm 
from apidb.isolateattributes i, sres.taxonname tn, 
     sres.taxon t, sres.TaxonName p
where i.organism = tn.name
and tn.taxon_id = t.taxon_id
and tn.name_class = 'scientific name'
and t.parent_id = p.taxon_id
and p.name_class =  'scientific name'
union
select 'unclassified Plasmodium' as term, 'Unknown' as internal, '' as parentTerm from dual
      ]]>
      </sql>

    </sqlQuery>
<!--
      <sql  includeProjects="PlasmoDB">
      <![CDATA[
    select 'P.f. ' || new as term, new as internal, '' as parentTerm
    from (
      SELECT lower(regexp_replace(src.strain, '[-_/]', '-')) as new
      FROM DoTS.IsolateSource src
      )
    group by new order by new
      ]]>
      </sql>
    </sqlQuery>
-->

 <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="submitterVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT distinct src.collected_by AS term,
             src.collected_by AS internal
      FROM   DoTS.IsolateSource src
            WHERE  src.collected_by is not null
      ORDER BY src.collected_by
      ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

</wdkModel>
