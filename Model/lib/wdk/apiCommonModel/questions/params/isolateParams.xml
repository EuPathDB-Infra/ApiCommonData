<wdkModel>

  <!-- notes

     - should ms_assay param be a controlled vocab pulled from the database?

  -->

  <paramSet name="isolateParams" includeProjects="CryptoDB,PlasmoDB, ApiDB">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- ID -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
        <datasetParam name="isolate_id" prompt="Isolate ID" includeProjects="CryptoDB,PlasmoDB,ApiDB">
            <help>Input a comma delimited set of  Isolate IDs, or upload a file. Wildcards (*) are allowed.</help>
            <suggest includeProjects="CryptoDB"
                     sample="AF527841, DQ1145002, DQ115*"
                     default="AF527841"/>
            <suggest includeProjects="PlasmoDB"
                     sample="CP.458297,CP.45828*,BC.458088"
                     default="CP.458297"/>
           <suggest includeProjects="ApiDB" 
                     sample="AF527841, DQ1145002, DQ115*"
                     default="AF527841"/>
         </datasetParam>
<!--
        <stringParam name="isolate_id" prompt="Isolate ID" includeProjects="ApiDB">
            <help>Enter an Isolate ID.  Wildcards (*) are allowed.</help>
            <suggest sample="AF527841, DQ1145002, DQ115*"
                     default="AF527841"/>
        </stringParam>
-->
        <stringParam name="gene_id" prompt="Gene Name">
            <help>Enter an Gene Name.  Wildcards (*) are allowed.</help>
            <suggest includeProjects="CryptoDB,ApiDB"
                     sample="cgd5_3160, cgd5_31*, *"
                     default="cgd5_3160"/>
        </stringParam>

        <stringParam name="author" prompt="Author">
            <help>Enter an Author name.  Wildcards (*) are allowed.</help> 
            <suggest includeProjects="CryptoDB,ApiDB" sample="Xiao*" default="Xiao*"/> 
        </stringParam>

        <flatVocabParam name="isolate_organism" includeProjects="CryptoDB,ApiDB"
             queryRef="organismIQ.withIsolates"
            prompt="Organism"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="specific_host" includeProjects="CryptoDB,ApiDB"
             queryRef="hostVQ.withIsolates"
             prompt="Host Name"
             multiPick="true"
             quote="false">
             <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="isolation_source" includeProjects="CryptoDB,ApiDB"
             queryRef="isolationSourceVQ.withIsolates"
             prompt="Isolation Source"
             multiPick="true"
             quote="false">
             <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="product" includeProjects="CryptoDB,ApiDB"
            queryRef="productVQ.withIsolates"
            prompt="Product Name"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="study" includeProjects="CryptoDB,ApiDB"
            queryRef="studyVQ.withIsolates"
            prompt="Study Name"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="CryptoDB,ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="country" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="countryVQ.withIsolates"
            prompt="Country Name"
            default="--None--"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam>

        <flatVocabParam name="continent" includeProjects="CryptoDB,PlasmoDB,ApiDB"
            queryRef="continentVQ.withIsolates"
            prompt="Continent Name"
            default="--None--"
            multiPick="true"
            quote="false">
            <useTermOnly value="true" includeProjects="ApiDB"/>
        </flatVocabParam> 

        <flatVocabParam name="strain" includeProjects="PlasmoDB,ApiDB"
            queryRef="strainVQ.withIsolates"
            prompt="Strain Name"
            multiPick="true"
            quote="false">
                  <help>
                          Strain name for isolate barcodes and 3k Chip data
                        </help>
            <useTermOnly value="true" includeProjects="ApiDB"/>
       </flatVocabParam>


     <enumParam name="type"
                 prompt="Isolate assay type"
                 multiPick="true"
                 quote="true">
        <help>
         There are two isolate types in PlasmoDB - Barcode and 3K Chip 
        </help>
        <enumList>
          <enumValue default="true">
            <term>3kChip</term>
            <internal>3kChip</internal>
          </enumValue>
          <enumValue default="true">
            <term>Barcode</term>
            <internal>Barcode</internal>
          </enumValue>
        </enumList>
      </enumParam>

<!--
       <flatVocabParam name="type" includeProjects="PlasmoDB,ApiDB"
            queryRef="typeVQ.withIsolates"
            prompt="Isolate assay type"
            multiPick="true"
            quote="true"> 
        <help>
         There are two isolate types in PlasmoDB - Barcode and 3K Chip 
            </help>
            <useTermOnly value="true" includeProjects="ApiDB"/> 
       </flatVocabParam>

-->
       <flatVocabParam name="submitter" includeProjects="PlasmoDB,ApiDB"
            queryRef="submitterVQ.withIsolates"
            prompt="Submitter"
            multiPick="true"
            quote="false"> 
                        <help>
                          Search isolates by submitter name.
                        </help>
            <useTermOnly value="true" includeProjects="ApiDB"/> 
       </flatVocabParam>

    </paramSet>

    <querySet name="organismIQ" queryType="vocab">
      <sqlQuery name="withIsolates" includeProjects="CryptoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT src.organism || '  - (' || count(src.organism) || ' isolates)' AS term,
             src.organism AS internal
      FROM   DoTS.IsolateSource src,
             DoTS.ExternalNASequence etn,
             SRes.ExternalDatabaseRelease edr,
             SRes.ExternalDatabase edb
      WHERE  edr.external_database_id = edb.external_database_id
         AND edr.external_database_release_id = etn.external_database_release_id
         AND edb.name = 'Isolates Data'
         AND edr.version = '2007-12-12'
         AND src.na_sequence_id = etn.na_sequence_id
         AND src.organism is not null
      GROUP BY src.organism
      ORDER BY src.organism
     ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="hostVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB">
    <column name="internal"/>
    <column name="term"/>
    <sql>
    <![CDATA[
    SELECT upper(substr(src.specific_host, 0, 1)) || substr(src.specific_host, 2) || ' - (' || count(src.specific_host) || ' isolates)' AS term,
           replace(src.specific_host, chr(39), ':') AS internal
    FROM   DoTS.IsolateSource src,
           DoTS.ExternalNASequence etn,
           SRes.ExternalDatabaseRelease edr,
           SRes.ExternalDatabase edb
    WHERE  src.specific_host is not null
       AND edr.external_database_id = edb.external_database_id
       AND edr.external_database_release_id = etn.external_database_release_id
       AND edb.name = 'Isolates Data'
       AND edr.version = '2007-12-12'
       AND src.na_sequence_id = etn.na_sequence_id
    GROUP BY src.specific_host
    ORDER BY upper(src.specific_host)
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>

    </querySet>

  <querySet name="isolationSourceVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB">
    <column name="internal"/>
    <column name="term"/>
    <sql>
    <![CDATA[
    SELECT term, internal FROM (
    SELECT upper(substr(src.isolation_source, 0, 1)) || substr(src.isolation_source, 2) || ' (' || count(src.isolation_source) || ' isolates)' AS term,
           src.isolation_source      AS internal
    FROM   ApiDB.IsolateAttributes src
    WHERE  src.isolation_source is not null
    GROUP BY src.isolation_source
    )
    ORDER BY term
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

    </querySet>

  <querySet name="productVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB">
    <column name="internal"/>
    <column name="term"/>
    <sql>
    <![CDATA[
          SELECT decode(gf.product, '18S small subunit ribosomal RNA | 5.8S ribosomal RNA | internal transcribed spac', '5.8S rRNA | ITS1 | 18S rRNA', gf.product) || ' (' || count(gf.product) || ' isolates)' as term,
                 gf.product as internal
          FROM  ApiDB.IsolateAttributes gf
          GROUP BY gf.product
          ORDER BY gf.product
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>

     </querySet>

  <querySet name="studyVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB">
    <column name="internal"/>
    <column name="term"/>
    <sql>
    <![CDATA[
    SELECT distinct term, internal from (
    SELECT replace(ref.title, ',', ';') as term,
           replace(ref.title, ',', ';') as internal
    FROM   SRES.Reference ref,
           SRes.ExternalDatabaseRelease edr,
           SRes.ExternalDatabase edb
    WHERE  ref.title IS NOT NULL
       AND edr.external_database_id = edb.external_database_id
       AND edb.name = 'Isolates Data'
       AND edr.version = '2007-12-12'
    )
    ORDER BY term
    ]]>
    </sql>
    </sqlQuery>

    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="countryVQ" queryType="vocab">

    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT replace(src.country, ',', ';') || ' - (' || count(src.country) || ' isolates)' AS term,
             replace(src.country, ',', ';') AS internal
      FROM   ApiDB.IsolateAttributes src
      WHERE  src.country is not null
      GROUP BY src.country
    UNION
      SELECT '--None--' AS term,
             '0' AS internal
      FROM   dual
      ]]>
      </sql>
    </sqlQuery>

 
    <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="continentVQ" queryType="vocab">

     <sqlQuery name="withIsolates" includeProjects="CryptoDB, PlasmoDB">
        <column name="internal"/>
        <column name="term"/>
        <sql>
        <![CDATA[
        SELECT distinct initcap(src.continent) AS term,
               src.continent AS internal
        FROM   ApiDB.Continents src
        WHERE  src.continent is not null
        UNION
        SELECT '--None--' AS term,
               '0' AS internal
        FROM   dual
        ]]> 
     </sql> 
  </sqlQuery>

  <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB"> 
      <wsColumn name="internal" width="200" wsName="internal"/> 
      <wsColumn name="term" width="200" wsName="term"/> 
  </processQuery> 
  </querySet>


  <querySet name="typeVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="CryptoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT distinct src.data_type AS term,
             src.data_type AS internal
      FROM   ApiDB.IsolateAttributes src
      ORDER BY src.data_type
      ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="strainVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
    select 'P.f. ' || new as term, new as internal
    from (
      SELECT lower(regexp_replace(src.strain, '[-_/]', '-')) as new
      FROM DoTS.IsolateSource src
      )
    group by new order by new
      ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

  <querySet name="submitterVQ" queryType="vocab">
    <sqlQuery name="withIsolates" includeProjects="PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
      <![CDATA[
      SELECT distinct src.collected_by AS term,
             src.collected_by AS internal
      FROM   DoTS.IsolateSource src
            WHERE  src.collected_by is not null
      ORDER BY src.collected_by
      ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withIsolates" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB">
      <wsColumn name="internal" width="200" wsName="internal"/>
      <wsColumn name="term" width="200" wsName="term"/>
    </processQuery>

  </querySet>

</wdkModel>
