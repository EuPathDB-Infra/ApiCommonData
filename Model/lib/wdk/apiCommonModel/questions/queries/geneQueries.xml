<wdkModel>

<querySet name="GeneId">

  <!-- notes: 
 
   * tmhmm ws needs to use new tm_max/min params 

   * retiring apidb.ToxodbGenes by joining to GeneAttributes from genefeature.source_id
     (which filters away gene predictions)

   * motif search new param names:
     - motif_organism
     - motif_expression

   * text search needs a clean up.  all four sites have differences.

   * assuming all sites have pathway info, which we should be getting from pathtools.

   * ortholog pattern query: lose api-specific "internal" params.  (why do we need these?)

   * does the GeneFeature table have an attribute we can use to mark annotated genes?  this
     will allow us to skip the join to GeneAttributes (so toxo can dodge gene predictions)

   * toxo has to use the GeneId table 

   * why does toxo have a different interpro query?
  -->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Locus Tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneByLocusTag" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids"/>
        <column name="source_id"/>
        <column name="project_id"/>
       <sql>
             <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GeneId gi, @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$
              AND gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER(ds.dataset_value),
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GeneByLocusTag" includeProjects="ApiDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids"/>
        <paramRef ref="sharedParams.signature"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Single locus tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneBySingleLocusTag" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.single_gene_id"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <sql excludeProjects="CryptoDB">
            <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GeneId gi
            WHERE gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER($$single_gene_id$$),
                                                       '*', '%'),
                                               '[[:space:]]', '')
            ]]>
        </sql>
        <sql includeProjects="CryptoDB">
            <![CDATA[
            SELECT g.source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature g,
                 dots.rnatype r,
                 dots.transcript t
            WHERE g.na_feature_id = r.parent_id (+)
            AND r.na_feature_id = t.parent_id (+)
            AND (
                LOWER(g.source_id) LIKE TRIM(LOWER(REPLACE($$single_gene_id$$, '*', '%')))
                OR LOWER(t.protein_id) LIKE TRIM(LOWER(REPLACE($$single_gene_id$$, '*', '%'))) ||'%'
            ) and g.source_id is not null
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GeneBySingleLocusTag" includeProjects="ApiDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.single_gene_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- EC number -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByEcNumber" includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB"
               isCacheable="true">
        <paramRef ref="geneParams.ec_number_pattern"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql >
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, apidb.GenomicSequence gs,
                 dots.Transcript t, dots.translatedAaFeature taf,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE gs.taxon_id in (select taxon_id from sres.taxon
                                      connect by parent_id = prior taxon_id
                                      start with taxon_id in ($$organism$$))
              AND gs.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asec.aa_sequence_id
              AND asec.enzyme_class_id = ec.enzyme_class_id
              AND ec.ec_number LIKE REPLACE(REPLACE($$ec_number_pattern$$,' ',''),
                                            '-', '%')
            ORDER BY gf.source_id
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByEcNumber" 
             isCacheable='true' includeProjects="ApiDB"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <paramRef ref="geneParams.ec_number_pattern"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Transmembrane domains -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTransmembraneDomains" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="predicted_helices" includeProjects="CryptoDB"/>
        <sql includeProjects="PlasmoDB,ToxoDB,TrichDB,GiardiaDB">
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.NaSequence ns, apidb.geneattributes ga,
                 (SELECT t.parent_id, COUNT(*) AS tm_count
                  FROM dots.Transcript t, dots.TranslatedAaFeature tlaf,
                       dots.TransmembraneAaFeature tmaf, dots.AaLocation al
                  WHERE t.na_feature_id = tlaf.na_feature_id
                    AND tlaf.aa_sequence_id = tmaf.aa_sequence_id
                    AND tmaf.aa_feature_id = al.aa_feature_id
                  GROUP BY t.parent_id, t.na_feature_id, tlaf.aa_feature_id
                  HAVING COUNT(*) >= $$min_tm$$ AND COUNT(*) <= $$max_tm$$) tms
            WHERE tms.parent_id = gf.na_feature_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id IN ($$organism$$)
              AND gf.source_id = ga.source_id
            ORDER BY ga.tm_count, gf.source_id
           ]]>
        </sql>
        <sql includeProjects="CryptoDB">
            <![CDATA[
            SELECT g.source_id, '@PROJECT_ID@' as project_id, tmf.predicted_helices
            FROM dots.genefeature g,
                 dots.transcript t,
                 dots.translatedaafeature taaf,
                 dots.TransmembraneAAFeature tmf,
                 dots.NAsequence enas,
                 core.algorithm alg
            WHERE g.na_feature_id = t.parent_id
              AND t.na_feature_id = taaf.na_feature_id
              AND taaf.aa_sequence_id = tmf.aa_sequence_id
              AND tmf.predicted_helices >= $$min_tm$$
              AND tmf.predicted_helices <= $$max_tm$$
              AND enas.taxon_id IN ($$organism$$)
              AND t.na_sequence_id = enas.na_sequence_id
              AND tmf.prediction_algorithm_id = alg.algorithm_id
              AND alg.name = 'TMHMM'
            ORDER BY tmf.predicted_helices 
            ]]>
          </sql>
    </sqlQuery>

    <wsQuery name="GenesByTransmembraneDomains" includeProjects="ApiDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Gene type -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGeneType" excludeProjects="ApiDB" 
              isCacheable="true">
        <paramRef ref="geneParams.geneType"/>
        <paramRef ref="geneParams.includePseudogenes"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="is_pseudo" />
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
              decode(gf.is_pseudo,0,'No',1,'Yes') as is_pseudo
            FROM dots.GeneFeature gf, dots.NaSequence ens, apidb.GeneAttributes ga
            WHERE gf.sequence_ontology_id IN ($$geneType$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              and gf.is_pseudo in ($$includePseudogenes$$)
              AND ens.taxon_id IN ($$organism$$)
              AND gf.source_id = ga.source_id
              AND ga.project_id = '@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByGeneType" includeProjects="ApiDB"
         isCacheable='true' processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="geneParams.includePseudogenes"/>
       <paramRef ref="geneParams.geneType"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="source_id" width="60" wsName="source_id"/>
       <wsColumn name="is_pseudo" width="32" wsName="is_pseudo"/>
    </wsQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BLAST -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesBySimilarity" excludeProjects="ApiDB,CryptoDB"
             processName="org.apidb.apicomplexa.wsfplugin.ncbiblast.NcbiBlastPlugin">
       <paramRef ref="sharedParams.BlastQueryType"/>
       <paramRef ref="geneParams.BlastDatabaseType"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastQuerySequence"/>
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="32" wsName="Identifier"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </wsQuery>

    <wsQuery name="GenesBySimilarity" includeProjects="CryptoDB" 
          processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="geneParams.BlastDatabaseType"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastQueryType"/>      
       <paramRef ref="sharedParams.BlastQuerySequence"/> 
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="32" wsName="Identifier"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </wsQuery>
                     
    <wsQuery name="GenesBySimilarity" includeProjects="ApiDB" 
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.BlastDatabaseType"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastQueryType"/>      
       <paramRef ref="sharedParams.BlastQuerySequence"/> 
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </wsQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Motif search -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesByMotifSearch" excludeProjects="ApiDB"  
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.MotifSearchPlugin">
       <paramRef ref="sharedParams.motif_expression"/>
       <paramRef ref="geneSimilarityParams.motif_organism"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="Locations" width="3999"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </wsQuery>

    <wsQuery name="GenesByMotifSearch" includeProjects="ApiDB"  
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneSimilarityParams.motif_organism"/>
       <paramRef ref="sharedParams.motif_expression"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="Locations" width="4000"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="4000"/>
    </wsQuery>
                                                    
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Text Search (needs to be better unified) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesByTextSearch" excludeProjects="ApiDB"
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.TextSearchPlugin">
       <paramRef ref="geneParams.text_expression"/>
       <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.text_fields"/>
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="text_fields" width="32" wsName="Datasets"/>
    </wsQuery>

    <wsQuery name="GenesByAnnotatedKeyword" includeProjects="ApiDB"
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
            <paramRef ref="geneParams.text_fields"/>
            <paramRef ref="geneParams.text_expression"/>
            <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
            <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
            <wsColumn name="project_id" width="32" wsName="project_id"/>
            <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Orthologs -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologs" includeProjects="ApiDB,CryptoDB,PlasmoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.historyId"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="source_id" />
        <column name="project_id" includeProjects="ApiDB"/>

        <sql includeProjects="CryptoDB,PlasmoDB">
            <![CDATA[
            SELECT DISTINCT gf2.source_id, '@PROJECT_ID@' as project_id
            FROM $$historyId$$ qr, dots.GeneFeature gf1,
                 dots.SequenceSequenceGroup ssg1, dots.SequenceSequenceGroup ssg2,
                 dots.GeneFeature gf2, dots.NaSequence ens,
                 core.TableInfo ti
            WHERE qr.source_id = gf1.source_id
              AND gf1.na_feature_id = ssg1.sequence_id
              AND ssg1.source_table_id = ti.table_id
              AND ssg1.sequence_group_id = ssg2.sequence_group_id
              AND ssg2.source_table_id = ti.table_id
              AND ssg2.sequence_id = gf2.na_feature_id
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id in ($$organism$$)
              AND ti.name = 'GeneFeature'
            GROUP BY gf2.source_id
            ORDER BY gf2.source_id
           ]]>
       </sql>

       <sql includeProjects="ApiDB">
            <![CDATA[

SELECT DISTINCT sns2.source_id, '@PROJECT_ID@' as project_id, ext.name as project_id 
FROM $$historyId$$ qr, dots.splicednasequence sns1, dots.sequencesequencegroup ssg1, dots.splicednasequence sns2, dots.sequencesequencegroup ssg2, core.tableinfo ti ,    sres.ExternalDatabaseRelease extr,  sres.ExternalDatabase ext 
WHERE qr.source_id = sns1.source_id 
AND sns1.na_sequence_id = ssg1.sequence_id 
AND ssg1.source_table_id = ti.table_id 
AND ssg1.sequence_group_id = ssg2.sequence_group_id 
AND ssg2.source_table_id = ti.table_id 
AND ssg2.sequence_id = sns2.na_sequence_id 
AND sns2.taxon_id IN
       (select taxon_id from sres.taxon
       connect by parent_id = prior taxon_id
       start with taxon_id in ($$organism$$)) 
AND ti.name = 'SplicedNASequence'  
AND sns2.external_database_release_id=extr.external_database_release_id 
AND extr.external_database_id=ext.external_database_id  
order by project_id,sns2.source_id


           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Go Term -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGoTerm" excludeProjects="ApiDB">
        <paramRef ref="geneParams.go_term"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.NaSequence ens, dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 dots.GoAssociation ga, sres.GoTerm gp,
                 sres.GoRelationship gr, core.TableInfo ti,
                 sres.GoRelationshipType grt
            WHERE ens.taxon_id IN ($$organism$$)
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = ti.table_id
              AND ti.name = 'TranslatedAASequence'
              AND ga.go_term_id = gr.child_term_id
              AND gr.parent_term_id = gp.go_term_id
              AND (gp.go_id = $$go_term$$
                   OR gp.name LIKE REPLACE($$go_term$$, '*', '%'))
              AND gr.go_relationship_type_id = grt.go_relationship_type_id
              AND grt.name = 'closure'
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>


	<wsQuery name="GenesByGoTerm" includeProjects="ApiDB" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.go_term"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Signal Peptide -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithSignalPeptide" excludeProjects="ApiDB">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sigp_sum_score"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id,
             (spf.maxy_conclusion + spf.maxc_conclusion + 
              spf.maxs_conclusion + spf.means_conclusion ) as sigp_sum_score
            FROM dots.NaSequence ens, dots.GeneFeature gf, 
                 dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.SignalPeptideFeature spf
            WHERE ens.taxon_id in ($$organism$$)
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = spf.aa_sequence_id
              AND (spf.maxy_conclusion +
                   spf.maxc_conclusion +
                   spf.maxs_conclusion +
                   spf.means_conclusion ) >= $$min_sigp_sum_score$$ 
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesWithSignalPeptide" includeProjects="ApiDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	    <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams" />
	    <wsColumn name="source_id" width="32" wsName="source_id"/>
	    <wsColumn name="project_id" width="32" wsName="project_id"/>
	    <wsColumn name="sigp_sum_score" width="32" wsName="sigp_sum_score"/>
	</wsQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- IsoElectric Point -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIsoelectricPoint" excludeProjects="ApiDB,CryptoDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_isoelectric_point"/>
        <paramRef ref="geneParams.max_isoelectric_point"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="isoelectric_point"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT asa.isoelectric_point, '@PROJECT_ID@' as project_id, gf.source_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.isoelectric_point BETWEEN $$min_isoelectric_point$$
                                            AND $$max_isoelectric_point$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesByIsoelectricPoint"
                   includeProjects="ApiDB"
                   isCacheable="true" 
                   processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
	        <paramRef ref="geneParams.min_isoelectric_point"/>
	        <paramRef ref="geneParams.max_isoelectric_point"/>
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
	 </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Molecular Weight -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMolecularWeight" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_molecular_weight"/>
        <paramRef ref="geneParams.max_molecular_weight"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns, apidb.GeneAttributes ga
            WHERE asa.min_molecular_weight <= $$max_molecular_weight$$
              AND asa.max_molecular_weight >= $$min_molecular_weight$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
              AND ga.source_id = gf.source_id
           ]]>
       </sql>
    </sqlQuery>


	<wsQuery name="GenesByMolecularWeight" includeProjects="ApiDB"
		isCacheable='true'
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.min_molecular_weight"/>
	              <paramRef ref="geneParams.max_molecular_weight"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	</wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ExonCount -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExonCount" excludeProjects="ApiDB">
        <paramRef ref="geneParams.num_exons_gte"/>
        <paramRef ref="geneParams.num_exons_lte"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
             SELECT ga.source_id, '@PROJECT_ID@' as project_id
             FROM apidb.geneattributes ga, dots.nasequence ns
             WHERE ns.taxon_id IN ($$organism$$)
             AND ga.sequence_id = ns.source_id
             AND exon_count  >= $$num_exons_gte$$ 
             And exon_count <= $$num_exons_lte$$
            ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByExonCount" 
	   includeProjects="ApiDB"
       isCacheable='true' 
       processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="geneParams.num_exons_gte"/>
       <paramRef ref="geneParams.num_exons_lte"/>

       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Ortholog pattern -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologPattern" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.profile_pattern"/>
        <paramRef ref="geneParams.included_species"/>
        <paramRef ref="geneParams.excluded_species"/>
        <paramRef ref="geneParams.phyletic_indent_map"/>
        <paramRef ref="geneParams.phyletic_term_map"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
            FROM apidb.PhylogeneticProfile pp, dots.GeneFeature gf, dots.NaSequence ns
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = gf.source_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
            ORDER BY ns.taxon_id, gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByOrthologPattern" includeProjects="ApiDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                    <paramRef ref="geneParams.profile_pattern"/>
                    <paramRef ref="geneParams.included_species"/>
                    <paramRef ref="geneParams.excluded_species"/>
                    <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
                    <paramRef ref="geneParams.phyletic_indent_map"/>
                    <paramRef ref="geneParams.phyletic_term_map"/>
                    <wsColumn name="source_id" width="32" wsName="source_id"/>
                    <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMetabolicPathway" includeProjects="ToxoDB,PlasmoDB">
        <paramRef ref="geneParams.metabolic_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="met_pathways"/>
        <sql>
            <![CDATA[
              SELECT gf.source_id, '@PROJECT_ID@' as project_id,
       apidb.tab_to_string(CAST(COLLECT(distinct decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier,
                           dr.lowercase_secondary_identifier)) AS apidb.varchartab), ', ') as met_pathways
            FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf, sres.DbRef dr,
              (SELECT idrnf.na_feature_id
               FROM dots.DbRefNaFeature idrnf, sres.DbRef idr
               WHERE idr.primary_identifier = $$metabolic_pathway$$
                 AND idrnf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.na_feature_id = drnf.na_feature_id
            AND gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            group by gf.source_id
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesByMetabolicPathway" includeProjects="ApiDB"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/>
	        <paramRef ref="geneParams.metabolic_pathway"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
	        <wsColumn name="met_pathways" width="1000" wsName="met_pathways"/>
	</wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Taxon (Species) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTaxon" excludeProjects="ApiDB">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
                FROM DoTS.GeneFeature gf, apidb.GeneAttributes ga
                WHERE gf.na_sequence_id IN
                      (SELECT ens.na_sequence_id
                       FROM dots.NaSequence ens
                       WHERE ens.taxon_id in ($$organism$$))
                  AND gf.source_id IS NOT NULL
                  AND ga.source_id = gf.source_id
                ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByTaxon" includeProjects="ApiDB"
           processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Epitopes -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithEpitopes" excludeProjects="ApiDB"
           isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.epitope_confidence"/>
        <column name="source_id" />
        <column name="project_id"/>
        <column name="confidence" />
        <column name="count" />
        <sql>
            <![CDATA[
        SELECT gf.source_id, '@PROJECT_ID@' as project_id, count(ef.source_id) AS count,
           DECODE(
             MAX(
               DECODE(ef.type, 'Not Full Set Not on Blast Hit', 1,
                      'Not Full Set On Blast Hit', 2,
                      'Full Set Not on Blast Hit', 2,
                      'Full Set On Blast Hit', 3,
                       4)),
               1, 'Low',
               2, 'Medium',
               3, 'High',
               4, 'unknown epitope type') AS confidence
        FROM dots.TranslatedAaSequence tas, dots.EpitopeFeature ef,
             dots.AaLocation al, sres.ExternalDatabaseRelease edr,
             sres.ExternalDatabase ed, dots.GeneFeature gf,
             dots.TranslatedAaFeature taf, dots.Transcript t,
             dots.MotifAaSequence mas, dots.NaSequence ens
        WHERE tas.aa_sequence_id = ef.aa_sequence_id
          AND ef.aa_feature_id = al.aa_feature_id
          AND ef.motif_aa_sequence_id = mas.aa_sequence_id
          AND tas.aa_sequence_id = taf.aa_sequence_id
          AND taf.na_feature_id = t.na_feature_id
          AND t.parent_id = gf.na_feature_id
          AND gf.na_sequence_id = ens.na_sequence_id
          AND ens.taxon_id in ($$organism$$)
          AND ef.external_database_release_id
              = edr.external_database_release_id
          AND edr.external_database_id = ed.external_database_id
          AND ed.name = 'Links to IEDB epitopes'
          AND ef.type IN ($$epitope_confidence$$)
        GROUP BY gf.source_id
        ORDER BY gf.source_id
           ]]>
        </sql>
    </sqlQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMassSpec" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.mass_spec_stage"/>
        <paramRef ref="sharedParams.min_seq_coverage"/>
        <paramRef ref="sharedParams.min_span_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
                FROM apidb.MassSpecSummary mss, dots.transcript t,
                     dots.genefeature gf, dots.translatedAAFeature taf
                WHERE (mss.developmental_stage = $$mass_spec_stage$$
                          OR $$mass_spec_stage$$ = 'any')
                  AND mss.aa_seq_percent_covered >= $$min_seq_coverage$$
                  AND mss.number_of_spans >= $$min_span_count$$
                  AND mss.spectrum_count >= $$min_spectrum_count$$
                  AND taf.aa_sequence_id = mss.aa_sequence_id
                  AND t.na_feature_id = taf.na_feature_id
                  AND gf.na_feature_id = t.parent_id
                  ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <sqlQuery name="GenesByMassSpec" includeProjects="CryptoDB"
            isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.cp-tg"/>
        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />
        <sql>
            <![CDATA[
            select distinct gf.source_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and nas.taxon_id in 
            (select taxon_id from sres.taxon
             connect by parent_id = prior taxon_id
             start with taxon_id in ($$organism$$))
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
    </sqlQuery>
    
    <sqlQuery name="GenesByMassSpec" includeProjects="ToxoDB"
        isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.cp-tg"/>
        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />
        <sql>
            <![CDATA[
            select distinct gf.source_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
	    and gf.external_database_release_id = edr.external_database_release_id
	    and edr.external_database_id = ed.external_database_id
	    and ed.name = 'Chromosome Map - David Sbiley'
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
    </sqlQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesOrthologousToAGivenGene" includeProjects="CryptoDB,PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.single_gene_id"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT gf2.source_id, '@PROJECT_ID@' as project_id
                FROM dots.GeneFeature gf1, dots.SequenceSequenceGroup ssg1,
                     dots.SequenceSequenceGroup ssg2, dots.GeneFeature gf2,
                     core.TableInfo ti,apidb.GeneId gi
                WHERE gi.id = lower($$single_gene_id$$)
                  AND gf1.source_id = gi.gene 
                  AND gf1.na_feature_id = ssg1.sequence_id
                  AND ssg1.source_table_id = ti.table_id
                  AND ssg1.sequence_group_id = ssg2.sequence_group_id
                  AND ssg2.source_table_id = ti.table_id
                  AND ssg2.sequence_id = gf2.na_feature_id
                  AND ti.name = 'GeneFeature'
                  AND gf2.source_id != gf1.source_id
                ORDER BY gf2.source_id
           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Location -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByLocation" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="sharedParams.chromosomeOptional" includeProjects="PlasmoDB,ToxoDB,CryptoDB"/>
        <paramRef ref="sharedParams.sequenceId"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql includeProjects="PlasmoDB,ToxoDB,CryptoDB">
            <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.naLocation nl, dots.NaSequence ens
            WHERE nl.na_feature_id = gf.na_feature_id
              AND (ens.source_id = $$chromosomeOptional$$
                   OR lower(ens.source_id) = lower($$sequenceId$$))
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= $$start_point$$ 
              AND (start_min <= $$end_point$$ OR $$end_point$$ = 0)
           ]]>
       </sql>
        <sql includeProjects="GiardiaDB,TrichDB">
            <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.naLocation nl, dots.NaSequence ens
            WHERE nl.na_feature_id = gf.na_feature_id
              AND lower(ens.source_id) = lower($$sequenceId$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= $$start_point$$ 
              AND (start_min <= $$end_point$$ OR $$end_point$$ = 0)
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesByLocation" includeProjects="ApiDB" 
                    isCacheable='true'
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                       <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes"/>
	               <paramRef ref="sharedParams.chromosomeOptional"/>
	               <paramRef ref="sharedParams.sequenceId"/>
                       <paramRef ref="sharedParams.start_point"/>
                       <paramRef ref="sharedParams.end_point"/>
	               <wsColumn name="source_id" width="32" wsName="source_id" />
	               <wsColumn name="project_id" width="32" wsName="project_id"/>
	</wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySnps" includeProjects="PlasmoDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.snp_strain_a"/>
        <paramRef ref="sharedParams.snp_strain_b"/>
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="cds_snp_density"/>
        <column name="dn_ds_ratio"/>
        <column name="num_synonymous"/>
        <column name="num_non_synonymous"/>
        <column name="num_noncoding"/>
        <column name="num_nonsense"/>
        <column name="total_snps"/>
        <sql>
            <![CDATA[
              SELECT source_id, '@PROJECT_ID@' as project_id,
	           round(non_synonymous / CASE synonymous
	                      WHEN 0 THEN 1
				  ELSE synonymous end, 2) as dn_ds_ratio,
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,
              non_coding as num_noncoding, stop as num_nonsense,
              cds_length,round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density,
              total as total_snps
	      FROM apidb.snpsummary
	      WHERE ((strain_a = $$snp_strain_a$$ and strain_b = $$snp_strain_b$$ )
                    or  (strain_a = $$snp_strain_b$$ and strain_b = $$snp_strain_a$$))
	      AND non_synonymous / CASE synonymous
	                          WHEN 0 THEN 1
				  ELSE synonymous end >= $$dn_ds_ratio_lower$$
	      AND non_synonymous / CASE synonymous
	                          WHEN 0 THEN 1
				  ELSE synonymous end <= $$dn_ds_ratio_upper$$
              AND $$snp_stat$$ >= $$occurrences_lower$$
	      AND $$snp_stat$$ <= $$occurrences_upper$$
              AND (non_synonymous + synonymous) / cds_length * 1000 >= $$snp_density$$
           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SecondaryStructure -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySecondaryStructure" includeProjects="PlasmoDB,GiardiaDB,TrichDB"
            isCacheable="true">
        <paramRef ref="geneParams.min_coil"/>
        <paramRef ref="geneParams.max_coil"/>
        <paramRef ref="geneParams.min_strand"/>
        <paramRef ref="geneParams.max_strand"/>
        <paramRef ref="geneParams.min_helix"/>
        <paramRef ref="geneParams.max_helix"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="percent_coil"/>
        <column name="percent_strand"/>
        <column name="percent_helix"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, c.percentage as percent_coil,
                e.percentage as percent_strand, h.percentage as percent_helix
            FROM dots.SecondaryStructure ss, dots.SecondaryStructureCall c, dots.SecondaryStructureCall e,
                 dots.SecondaryStructureCall h,dots.genefeature gf,dots.transcript t, 
                 dots.translatedaafeature tf,dots.nasequence s
            WHERE s.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = tf.na_feature_id
              AND tf.aa_sequence_id = ss.aa_sequence_id
              AND ss.secondary_structure_id = c.secondary_structure_id
              AND ss.secondary_structure_id = e.secondary_structure_id
              AND ss.secondary_structure_id = h.secondary_structure_id
              AND c.structure_type = 'C'
              AND e.structure_type = 'E'
              AND h.structure_type = 'H'
              AND c.percentage between $$min_coil$$ and $$max_coil$$
              AND e.percentage between $$min_strand$$ and $$max_strand$$
              AND h.percentage between $$min_helix$$ and $$max_helix$$
              AND s.taxon_id IN ($$organism$$)
            ]]>
       </sql>
    </sqlQuery>


	<wsQuery name="GenesBySecondaryStructure"
	    includeProjects="ApiDB"        
		isCacheable="true" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
	        <paramRef ref="geneParams.min_coil"/>
	        <paramRef ref="geneParams.max_coil"/>
	        <paramRef ref="geneParams.min_strand"/>
	        <paramRef ref="geneParams.max_strand"/>
	        <paramRef ref="geneParams.min_helix"/>
	        <paramRef ref="geneParams.max_helix"/>
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
			<wsColumn name="percent_coil" width="32" wsName="percent_coil"/>
			<wsColumn name="percent_strand" width="32" wsName="percent_strand"/>
			<wsColumn name="percent_helix" width="32" wsName="percent_helix"/>
	</wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Interpro -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByInterproDomain" excludeProjects="ApiDB"  
			isCacheable="true">
        <paramRef ref="geneParams.domain_database"/>
        <paramRef ref="geneParams.domain_accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="e_value" excludeProjects="ToxoDB"/>
        <sql excludeProjects="ToxoDB">
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, avg(df.e_value) as e_value
            FROM dots.DomainFeature df,dots.translatedaasequence tas,
                 dots.genefeature gf, dots.transcript t, dots.TranslatedAAFeature taf,
                 dots.DbRefAaFeature draf, sres.DbRef dr
            WHERE tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND dr.primary_identifier
                  = substr($$domain_accession$$, 1, instr($$domain_accession$$||':', ':')-1)
              AND tas.taxon_id IN ($$organism$$)
              AND tas.aa_sequence_id = taf.aa_sequence_id
              AND taf.na_feature_id = t.na_feature_id
              AND gf.na_feature_id = t.parent_id
              GROUP BY gf.source_id
            ]]>
       </sql>
        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas,
                 dots.DomainFeature df, dots.DbRefAaFeature draf,
                 sres.DbRef dr
            WHERE t.parent_id = gf.na_feature_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = tas.aa_sequence_id
              AND tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND dr.primary_identifier
                  = substr($$domain_accession$$, 1, instr($$domain_accession$$||':', ':')-1)
            ORDER BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>

	 <wsQuery name="GenesByInterproDomain" includeProjects="ApiDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.domain_database"/>
	              <paramRef ref="geneParams.domain_accession"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
	 </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ESTOverlap -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByESTOverlap" excludeProjects="ApiDB">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="sharedParams.libraryId"/>
       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="number_of_ests" />
       <sql excludeProjects="CryptoDB">
            <![CDATA[
            SELECT gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM apidb.EstAlignmentGeneSummary
            WHERE est_gene_overlap_length >= $$bp_overlap_gte$$
            AND is_consistent in ($$high_confidence_only$$)
            AND is_best_alignment in ($$best_alignment_only$$)
            AND percent_identity >= $$min_percent_identity$$
            AND percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND library_id in ($$libraryId$$)
            AND target_taxon_id in ($$organism$$)
            GROUP by gene
            ]]>
          </sql>
       <sql includeProjects="CryptoDB">
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM dots.genefeature gf, 
                 dots.nalocation nal, 
                 dots.blatalignment blat, 
                 dots.est query,
                 dots.library lib,
                 dots.assemblysequence asbl,
                 dots.nasequence target 
            WHERE gf.na_feature_id = nal.na_feature_id 
              AND gf.na_sequence_id = target.na_sequence_id 
              AND target.na_sequence_id = blat.target_na_sequence_id 
              AND query.na_sequence_id = blat.query_na_sequence_id 
              AND (blat.target_end - nal.start_max) >= $$bp_overlap_gte$$ 
              AND (nal.end_min - blat.target_start) >= $$bp_overlap_gte$$ 
              AND (query_end - query_start) >= $$bp_overlap_gte$$ 
              AND blat.max_target_gap < 10000 
              AND query.library_id = lib.library_id
              AND lib.library_id in ($$libraryId$$)
              AND blat.is_best_alignment in ($$best_alignment_only$$)
              AND blat.is_consistent in ($$high_confidence_only$$)
              AND blat.query_na_sequence_id = asbl.na_sequence_id
              AND blat.percent_identity >= $$min_percent_identity$$
              AND ((blat.query_bases_aligned / (asbl.sequence_end - asbl.sequence_start + 1)) * 100) >= $$min_percent_est_aligned$$
           GROUP BY gf.source_id
           ORDER BY gf.source_id
            ]]>
          </sql>
    </sqlQuery>


    <wsQuery name="GenesByESTOverlap" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
               <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	       <paramRef ref="sharedParams.libraryId"/>
	       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
	       <wsColumn name="source_id" width="32" wsName="source_id"/>
	     <wsColumn name="project_id" width="32" wsName="project_id"/>
	<wsColumn name="number_of_ests" width="32" wsName="number_of_ests"/>

    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Dont Care - fake query for internal use -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="DontCare" isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            select source_id, project_id
            from apidb.geneattributes
            where source_id = 'life_is_sweet' 
        </sql>
    </sqlQuery>
  </querySet>
</wdkModel>
