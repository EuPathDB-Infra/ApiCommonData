<wdkModel>

<querySet name="GeneId">

  <!-- notes: 
 
   * tmhmm ws needs to use new tm_max/min params 

   * retiring apidb.ToxodbGenes by joining to GeneAttributes from genefeature.source_id
     (which filters away gene predictions)

   * motif search new param names:
     - motif_organism
     - motif_expression

   * text search needs a clean up.  all four sites have differences.

   * assuming all sites have pathway info, which we should be getting from pathtools.

   * ortholog pattern query: lose api-specific "internal" params.  (why do we need these?)

   * does the GeneFeature table have an attribute we can use to mark annotated genes?  this
     will allow us to skip the join to GeneAttributes (so toxo can dodge gene predictions)

   * toxo has to use the GeneId table 

   * why does toxo have a different interpro query?
  -->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- temporary question for modified annotation -->  
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithModifiedAnnotation" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.plasmo_annot_status"/>
        <paramRef ref="geneParams.plasmo_new_product"/>
        <paramRef ref="geneParams.plasmo_new_model"/>
        <paramRef ref="geneParams.plasmo_new_go"/>
        <paramRef ref="geneParams.plasmo_new_ec"/>
        <paramRef ref="geneParams.plasmo_snapshot_changed"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="annot_status"/>
        <column name="new_product_desc"/>
       <sql>
             <![CDATA[
            SELECT DISTINCT na.source_id, '@PROJECT_ID@' as project_id, 
              na.status as annot_status, na.product as new_product_desc
            FROM apidb.trackNewAnnotation na
            where na.new_product in ($$plasmo_new_product$$)
            and na.new_go in ($$plasmo_new_go$$)
            and na.new_ec in ($$plasmo_new_ec$$)
            and na.new_protein in ($$plasmo_new_model$$)
            and na.status in ($$plasmo_annot_status$$)
            and na.snapshot_changed in ($$plasmo_snapshot_changed$$)
           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Locus Tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneByLocusTag" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids"/>
        <column name="source_id"/>
        <column name="project_id"/>
       <sql excludeProjects="TrichDB">
             <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GeneId gi, @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$
              AND gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER(ds.dataset_value),
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>

 <sql includeProjects="TrichDB">
             <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext,
                 @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$ 
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'T. vaginalis scaffolds' 
              AND gf.source_id LIKE REGEXP_REPLACE(REPLACE(ds.dataset_value,
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>

<!--
 <sql includeProjects="GiardiaDB">
             <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext,
                 @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$ 
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'G. lamblia contigs' 
              AND gf.source_id LIKE REGEXP_REPLACE(REPLACE(ds.dataset_value,
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>
-->

    </sqlQuery>

    <wsQuery name="GeneByLocusTag" includeProjects="ApiDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids"/>
        <paramRef ref="sharedParams.signature"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Single locus tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneBySingleLocusTag" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.single_gene_id"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <sql excludeProjects="TrichDB">
            <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GeneId gi
            WHERE gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER($$single_gene_id$$),
                                                       '*', '%'),
                                               '[[:space:]]', '')
            ]]>
        </sql>
 
<sql includeProjects="TrichDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext
            WHERE gf.source_id LIKE REGEXP_REPLACE(REPLACE($$single_gene_id$$,
                                                       '*', '%'),
                                               '[[:space:]]', '')
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'T. vaginalis scaffolds'
            ]]>
        </sql>


<!--
<sql includeProjects="GiardiaDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext
            WHERE gf.source_id LIKE REGEXP_REPLACE(REPLACE($$single_gene_id$$,
                                                       '*', '%'),
                                               '[[:space:]]', '')
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'G. lamblia contigs'
            ]]>
        </sql>
-->


    </sqlQuery>

    <wsQuery name="GeneBySingleLocusTag" includeProjects="ApiDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.single_gene_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- EC number -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByEcNumber" excludeProjects="ApiDB"
               isCacheable="true">
        <paramRef ref="geneParams.ec_number_pattern"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql >
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, apidb.GenomicSequence gs,
                 dots.Transcript t, dots.translatedAaFeature taf,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE gs.taxon_id in (select taxon_id from sres.taxon
                                      connect by parent_id = prior taxon_id
                                      start with taxon_id in ($$organism$$))
              AND gs.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asec.aa_sequence_id
              AND asec.enzyme_class_id = ec.enzyme_class_id
              AND ec.ec_number LIKE REPLACE(REPLACE($$ec_number_pattern$$,' ',''),
                                            '-', '%')
            ORDER BY gf.source_id
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByEcNumber" 
             isCacheable='true' includeProjects="ApiDB"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <paramRef ref="geneParams.ec_number_pattern"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Transmembrane domains -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTransmembraneDomains" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="predicted_helices" includeProjects="CryptoDB"/>
        <sql includeProjects="PlasmoDB,ToxoDB,TrichDB,GiardiaDB">
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id
            from dots.genefeature gf, dots.nasequence nas, apidb.geneattributes ga
            where ga.tm_count >= $$min_tm$$ 
            AND ga.tm_count <= $$max_tm$$
            AND ga.na_feature_id  = gf.na_feature_id
            AND nas.na_sequence_id = gf.na_sequence_id
            AND nas.taxon_id IN ($$organism$$)
           ]]>
        </sql>
        <sql includeProjects="CryptoDB">
            <![CDATA[
            SELECT g.source_id, '@PROJECT_ID@' as project_id, tmf.predicted_helices
            FROM dots.genefeature g,
                 dots.transcript t,
                 dots.translatedaafeature taaf,
                 dots.TransmembraneAAFeature tmf,
                 dots.NAsequence enas,
                 core.algorithm alg
            WHERE g.na_feature_id = t.parent_id
              AND t.na_feature_id = taaf.na_feature_id
              AND taaf.aa_sequence_id = tmf.aa_sequence_id
              AND tmf.predicted_helices >= $$min_tm$$
              AND tmf.predicted_helices <= $$max_tm$$
              AND enas.taxon_id IN ($$organism$$)
              AND t.na_sequence_id = enas.na_sequence_id
              AND tmf.prediction_algorithm_id = alg.algorithm_id
              AND alg.name = 'TMHMM'
            ORDER BY tmf.predicted_helices 
            ]]>
          </sql>
    </sqlQuery>

    <wsQuery name="GenesByTransmembraneDomains" includeProjects="ApiDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Has Phylogenetic Tree -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhylogeneticTree" includeProjects="GiardiaDB" 
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
              select distinct tree.source_id, '@PROJECT_ID@' as project_id 
              from apidb.phylogenetictree tree
           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Gene type -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGeneType" excludeProjects="ApiDB" 
              isCacheable="true">
        <paramRef ref="geneParams.geneType"/>
        <paramRef ref="geneParams.includePseudogenes" excludeProjects="TrichDB"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="is_pseudo" />
        <sql  excludeProjects="TrichDB">
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
              decode(gf.is_pseudo,0,'No',1,'Yes') as is_pseudo
            FROM dots.GeneFeature gf, dots.NaSequence ens, apidb.GeneAttributes ga
            WHERE gf.sequence_ontology_id IN ($$geneType$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              and gf.is_pseudo in ($$includePseudogenes$$)
              AND ens.taxon_id IN ($$organism$$)
              AND gf.source_id = ga.source_id
              AND ga.project_id = '@PROJECT_ID@'
           ]]>
       </sql>
<sql  includeProjects="TrichDB">
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
              decode(gf.is_pseudo,0,'No',1,'Yes') as is_pseudo
            FROM dots.GeneFeature gf, dots.NaSequence ens, apidb.GeneAttributes ga
            WHERE gf.sequence_ontology_id IN ($$geneType$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id IN ($$organism$$)
              AND gf.source_id = ga.source_id
              AND ga.project_id = '@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByGeneType" includeProjects="ApiDB"
         isCacheable='true' processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="geneParams.includePseudogenes"/>
       <paramRef ref="geneParams.geneType"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="source_id" width="60" wsName="source_id"/>
       <wsColumn name="is_pseudo" width="32" wsName="is_pseudo"/>
    </wsQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BLAST   when apidb using apifed (instead of wublast), remember to set useTermOnly in the organism param, in similarityParams.xml   -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesBySimilarity" 
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">
       <paramRef ref="sharedParams.BlastDatabaseType"/>
       <paramRef ref="sharedParams.BlastAlgorithm"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastQuerySequence"/>
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="32" wsName="Identifier"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </wsQuery>

<!--
                     
    <wsQuery name="GenesBySimilarity" includeProjects="ApiDB" 
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.BlastDatabaseType"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastAlgorithm"/>      
       <paramRef ref="sharedParams.BlastQuerySequence"/> 
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </wsQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Motif search -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesByMotifSearch" excludeProjects="ApiDB"  
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.MotifSearchPlugin">
       <paramRef ref="sharedParams.motif_expression"/>
       <paramRef ref="geneSimilarityParams.motif_organism"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="Locations" width="3999"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </wsQuery>

    <wsQuery name="GenesByMotifSearch" includeProjects="ApiDB"  
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneSimilarityParams.motif_organism"/>
       <paramRef ref="sharedParams.motif_expression"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="Locations" width="4000"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="4000"/>
    </wsQuery>
                                                    
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Text Search (needs to be better unified) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesByTextSearch" excludeProjects="ApiDB"
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.TextSearchPlugin">
       <paramRef ref="geneParams.text_expression"/>
       <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.text_fields"/>
       <paramRef ref="organismParams.text_search_organism"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="text_fields" width="64" wsName="Datasets"/>
    </wsQuery>

    <wsQuery name="GenesByTextSearch" includeProjects="ApiDB"
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.text_search_organism"/>
            <paramRef ref="geneParams.text_fields"/>
            <paramRef ref="geneParams.text_expression"/>
            <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
            <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
            <wsColumn name="project_id" width="32" wsName="project_id"/>
            <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="text_fields" width="64"/>
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Orthologs -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologs" includeProjects="ApiDB,CryptoDB,PlasmoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.geneHistoryId"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" includeProjects="CryptoDB,PlasmoDB"/>
        <paramRef ref="organismParams.localorganism" includeProjects="ApiDB"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="orthologs"/>

        <sql includeProjects="CryptoDB,PlasmoDB">
            <![CDATA[
            SELECT DISTINCT gf2.source_id, '@PROJECT_ID@' as project_id,
                   apidb.tab_to_string(CAST(COLLECT(distinct(gf1.source_id)) AS apidb.varchartab),', ') as orthologs 
            FROM $$geneHistoryId$$ qr, dots.GeneFeature gf1,
                 dots.SequenceSequenceGroup ssg1, dots.SequenceSequenceGroup ssg2,
                 dots.GeneFeature gf2, dots.NaSequence ens,
                 core.TableInfo ti
            WHERE qr.source_id = gf1.source_id
              AND gf1.na_feature_id = ssg1.sequence_id
              AND ssg1.source_table_id = ti.table_id
              AND ssg1.sequence_group_id = ssg2.sequence_group_id
              AND ssg2.source_table_id = ti.table_id
              AND ssg2.sequence_id = gf2.na_feature_id
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id in ($$organism$$)
              AND ti.name = 'GeneFeature'
            GROUP BY gf2.source_id
            ORDER BY gf2.source_id
           ]]>
       </sql>

       <sql includeProjects="ApiDB">
            <![CDATA[


SELECT DISTINCT subq.source_id, subq.project_id,
       apidb.tab_to_string(CAST(COLLECT(subq.ortholog_id) AS
apidb.varchartab),',') as orthologs
FROM (SELECT distinct sns2.source_id, ext.name as project_id,
            qr.source_id AS ortholog_id
     FROM $$geneHistoryId$$ qr,
           dots.splicednasequence sns1,
           dots.sequencesequencegroup ssg1,
           dots.splicednasequence sns2,
           dots.sequencesequencegroup ssg2,
           core.tableinfo ti ,   
           sres.ExternalDatabaseRelease extr,
           sres.ExternalDatabase ext
     WHERE qr.source_id = sns1.source_id
     AND sns1.na_sequence_id = ssg1.sequence_id
     AND ssg1.source_table_id = ti.table_id
     AND ssg1.sequence_group_id = ssg2.sequence_group_id
     AND ssg2.source_table_id = ti.table_id
     AND ssg2.sequence_id = sns2.na_sequence_id
     AND sns2.taxon_id IN
            (select taxon_id from sres.taxon
            connect by parent_id = prior taxon_id
            start with taxon_id in ($$localorganism$$))
     AND ti.name = 'SplicedNASequence'
     AND
sns2.external_database_release_id=extr.external_database_release_id
     AND extr.external_database_id=ext.external_database_id) subq
     group by subq.source_id, subq.project_id
     order by project_id, subq.source_id 



           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Go Term -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGoTerm" excludeProjects="ApiDB">
        <paramRef ref="geneParams.go_term"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.NaSequence ens, dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 dots.GoAssociation ga, sres.GoTerm gp,
                 sres.GoRelationship gr, core.TableInfo ti,
                 sres.GoRelationshipType grt
            WHERE ens.taxon_id IN ($$organism$$)
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = ti.table_id
              AND ti.name = 'TranslatedAASequence'
              AND ga.go_term_id = gr.child_term_id
              AND gr.parent_term_id = gp.go_term_id
              AND (gp.go_id = $$go_term$$
                   OR gp.name LIKE REPLACE($$go_term$$, '*', '%'))
              AND gr.go_relationship_type_id = grt.go_relationship_type_id
              AND grt.name = 'closure'
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>


	<wsQuery name="GenesByGoTerm" includeProjects="ApiDB" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.go_term"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Signal Peptide -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithSignalPeptide" excludeProjects="ApiDB">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_d_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_signal_probability" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.any_or_all_sigp" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sigp_sum_score"/>
        <column name="nn_d_score"/>
        <column name="hmm_signal_probability"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id,
             (spf.maxy_conclusion + spf.maxc_conclusion + 
              spf.maxs_conclusion + spf.means_conclusion ) as sigp_sum_score,
              to_char((spf.means_score + maxy_score) / 2 , '0.99') as nn_d_score,
              to_char(spf.signal_probability, '0.99') as hmm_signal_probability
            FROM dots.NaSequence ens, dots.GeneFeature gf, 
                 dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.SignalPeptideFeature spf
            WHERE ens.taxon_id in ($$organism$$) 
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = spf.aa_sequence_id
              AND ((spf.maxy_conclusion +
                   spf.maxc_conclusion +
                   spf.maxs_conclusion +
                   spf.means_conclusion ) >= $$min_sigp_sum_score$$ 
              $$any_or_all_sigp$$ ((spf.means_score + spf.maxy_score) / 2) >= $$min_sigp_d_score$$
              $$any_or_all_sigp$$ spf.signal_probability >= $$min_sigp_signal_probability$$)
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesWithSignalPeptide" includeProjects="ApiDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	    <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams" />
	    <wsColumn name="source_id" width="32" wsName="source_id"/>
	    <wsColumn name="project_id" width="32" wsName="project_id"/>
	    <wsColumn name="sigp_sum_score" width="32" wsName="sigp_sum_score"/>
            <wsColumn name="nn_d_score" width="32" wsName="nn_d_score"/>
            <wsColumn name="hmm_signal_probability" width="32" wsName="hmm_signal_probability"/>
	</wsQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- IsoElectric Point -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIsoelectricPoint" excludeProjects="ApiDB,CryptoDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_isoelectric_point"/>
        <paramRef ref="geneParams.max_isoelectric_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="isoelectric_point"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT asa.isoelectric_point, '@PROJECT_ID@' as project_id, gf.source_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.isoelectric_point BETWEEN $$min_isoelectric_point$$
                                            AND $$max_isoelectric_point$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesByIsoelectricPoint"
                   includeProjects="ApiDB"
                   isCacheable="true" 
                   processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes-tg"/>	  
                <paramRef ref="geneParams.min_isoelectric_point"/>
	        <paramRef ref="geneParams.max_isoelectric_point"/>
                <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
	 </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Molecular Weight -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMolecularWeight" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_molecular_weight"/>
        <paramRef ref="geneParams.max_molecular_weight"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns, apidb.GeneAttributes ga
            WHERE asa.min_molecular_weight <= $$max_molecular_weight$$
              AND asa.max_molecular_weight >= $$min_molecular_weight$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
              AND ga.source_id = gf.source_id
           ]]>
       </sql>
    </sqlQuery>


	<wsQuery name="GenesByMolecularWeight" includeProjects="ApiDB"
		isCacheable='true'
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.min_molecular_weight"/>
	              <paramRef ref="geneParams.max_molecular_weight"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	</wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ExonCount -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExonCount" excludeProjects="ApiDB">
        <paramRef ref="geneParams.num_exons_gte"/>
        <paramRef ref="geneParams.num_exons_lte"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
             SELECT distinct ga.source_id, '@PROJECT_ID@' as project_id
             FROM apidb.geneattributes ga, dots.nasequence ns
             WHERE ns.taxon_id IN ($$organism$$)
             AND ga.sequence_id = ns.source_id
             AND exon_count  >= $$num_exons_gte$$ 
             And exon_count <= $$num_exons_lte$$
            ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByExonCount" 
	   includeProjects="ApiDB"
       isCacheable='true' 
       processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="geneParams.num_exons_gte"/>
       <paramRef ref="geneParams.num_exons_lte"/>

       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Ortholog pattern -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologPattern" includeProjects="PlasmoDB,ToxoDB,CryptoDB,GiardiaDB"
              isCacheable="true">
        <paramRef ref="geneParams.profile_pattern"/>
        <paramRef ref="geneParams.included_species"/>
        <paramRef ref="geneParams.excluded_species"/>
        <paramRef ref="geneParams.phyletic_indent_map"/>
        <paramRef ref="geneParams.phyletic_term_map"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
            FROM apidb.PhylogeneticProfile pp, dots.GeneFeature gf, dots.NaSequence ns
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = gf.source_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
            ORDER BY ns.taxon_id, gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByOrthologPattern" includeProjects="ApiDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                    <paramRef ref="geneParams.profile_pattern"/>
                    <paramRef ref="geneParams.included_species"/>
                    <paramRef ref="geneParams.excluded_species"/>
                    <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
                    <paramRef ref="geneParams.phyletic_indent_map"/>
                    <paramRef ref="geneParams.phyletic_term_map"/>
                    <wsColumn name="source_id" width="32" wsName="source_id"/>
                    <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Metabolic Pathway -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMetabolicPathway" includeProjects="ToxoDB,PlasmoDB">
        <paramRef ref="geneParams.metabolic_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="met_pathways"/>
        <sql includeProjects="PlasmoDB">
            <![CDATA[
              select * from (
              SELECT gf.source_id, '@PROJECT_ID@' as project_id,
apidb.tab_to_string(CAST(COLLECT(distinct decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier,
                           dr.lowercase_secondary_identifier)) AS apidb.varchartab), ', ') as met_pathways
            FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf, sres.DbRef dr,
              (SELECT idrnf.na_feature_id
               FROM dots.DbRefNaFeature idrnf, sres.DbRef idr
               WHERE idr.primary_identifier = $$metabolic_pathway$$
                 AND idrnf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.na_feature_id = drnf.na_feature_id
            AND gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            group by gf.source_id
            )
           ]]>
        </sql>

        <sql includeProjects="ToxoDB">
            <![CDATA[
              select * from (
              SELECT gf.source_id, '@PROJECT_ID@' as project_id,
              apidb.tab_to_string(CAST(COLLECT(distinct decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier,
                           dr.lowercase_secondary_identifier)) AS apidb.varchartab), ', ') as met_pathways
              FROM dots.GeneFeature gf, dots.Transcript t,
                   dots.DbRefaaFeature draf, sres.DbRef dr,
                   dots.TranslatedAaFeature taf,
               (SELECT idraf.aa_feature_id
                FROM dots.DbRefaaFeature idraf, sres.DbRef idr
                WHERE 
                idr.primary_identifier = $$metabolic_pathway$$
                AND  idraf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.aa_feature_id = draf.aa_feature_id
            AND gf.na_feature_id = t.parent_id
            AND t.na_feature_id = taf.na_feature_id
            AND taf.aa_feature_id = draf.aa_feature_id
            AND draf.db_ref_id = dr.db_ref_id
            GROUP BY gf.source_id
            )
           ]]>
        </sql>
    </sqlQuery>

	<wsQuery name="GenesByMetabolicPathway" includeProjects="ApiDB"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/>
	        <paramRef ref="geneParams.metabolic_pathway"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
	        <wsColumn name="met_pathways" width="1000" wsName="met_pathways"/>
	</wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Taxon (Species) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTaxon" excludeProjects="ApiDB">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
                FROM DoTS.GeneFeature gf, apidb.GeneAttributes ga
                WHERE gf.na_sequence_id IN
                      (SELECT ens.na_sequence_id
                       FROM dots.NaSequence ens
                       WHERE ens.taxon_id in ($$organism$$))
                  AND gf.source_id IS NOT NULL
                  AND ga.source_id = gf.source_id
                ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByTaxon" includeProjects="ApiDB"
           processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Epitopes -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithEpitopes" excludeProjects="ApiDB"
           isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.epitope_confidence"/>
        <column name="source_id" />
        <column name="project_id"/>
        <column name="confidence" />
        <column name="count" />
        <sql>
            <![CDATA[
        SELECT gf.source_id, '@PROJECT_ID@' as project_id, count(ef.source_id) AS count,
           DECODE(
             MAX(
               DECODE(ef.type, 'Not Full Set Not on Blast Hit', 1,
                      'Not Full Set On Blast Hit', 2,
                      'Full Set Not on Blast Hit', 2,
                      'Full Set On Blast Hit', 3,
                       4)),
               1, 'Low',
               2, 'Medium',
               3, 'High',
               4, 'unknown epitope type') AS confidence
        FROM dots.TranslatedAaSequence tas, dots.EpitopeFeature ef,
             dots.AaLocation al, sres.ExternalDatabaseRelease edr,
             sres.ExternalDatabase ed, dots.GeneFeature gf,
             dots.TranslatedAaFeature taf, dots.Transcript t,
             dots.MotifAaSequence mas, dots.NaSequence ens
        WHERE tas.aa_sequence_id = ef.aa_sequence_id
          AND ef.aa_feature_id = al.aa_feature_id
          AND ef.motif_aa_sequence_id = mas.aa_sequence_id
          AND tas.aa_sequence_id = taf.aa_sequence_id
          AND taf.na_feature_id = t.na_feature_id
          AND t.parent_id = gf.na_feature_id
          AND gf.na_sequence_id = ens.na_sequence_id
          AND ens.taxon_id in ($$organism$$)
          AND ef.external_database_release_id
              = edr.external_database_release_id
          AND edr.external_database_id = ed.external_database_id
          AND ed.name = 'Links to IEDB epitopes'
          AND ef.type IN ($$epitope_confidence$$)
        GROUP BY gf.source_id
        ORDER BY gf.source_id
           ]]>
        </sql>
    </sqlQuery>   

    <wsQuery name="GenesWithEpitopes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB"
           isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.epitope_confidence"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id"/>
        <wsColumn name="confidence" />
        <wsColumn name="count" />
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Mass Spec -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMassSpec" excludeProjects="ApiDB,TrichDB" 
            isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.cp-tg-pb"/>
        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />
        <sqlParamValue name="externalDatabase" includeProjects="GiardiaDB">G. lamblia contigs from Genbank</sqlParamValue>
        <sqlParamValue name="externalDatabase" includeProjects="ToxoDB">Chromosome Map - David Sibley</sqlParamValue>
        <sql includeProjects="CryptoDB,PlasmoDB">
            <![CDATA[
            select distinct gf.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and nas.taxon_id in ($$organism$$)
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    
        <sql includeProjects="ToxoDB,GiardiaDB">
            <![CDATA[
            select distinct gf.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
	    and gf.external_database_release_id = edr.external_database_release_id
	    and edr.external_database_id = ed.external_database_id
	    and ed.name = '&&externalDatabase&&'
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
       


    </sqlQuery>   

    <wsQuery name="GenesByMassSpec" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB"
            isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.cp-tg-pb"/>
        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" />
        <wsColumn name="sum_sequence_count" />
        <wsColumn name="sum_spectrum_count" />
    </wsQuery>

    <sqlQuery name="GenesByMassSpec2" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.mass_spec_stage"/>
        <paramRef ref="sharedParams.min_seq_coverage"/>
        <paramRef ref="sharedParams.min_span_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
                FROM apidb.MassSpecSummary mss, dots.transcript t,
                     dots.genefeature gf, dots.translatedAAFeature taf
                WHERE (mss.developmental_stage = $$mass_spec_stage$$
                          OR $$mass_spec_stage$$ = 'any')
                  AND mss.aa_seq_percent_covered >= $$min_seq_coverage$$
                  AND mss.number_of_spans >= $$min_span_count$$
                  AND mss.spectrum_count >= $$min_spectrum_count$$
                  AND taf.aa_sequence_id = mss.aa_sequence_id
                  AND t.na_feature_id = taf.na_feature_id
                  AND gf.na_feature_id = t.parent_id
                  ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery> 

    <wsQuery name="GenesByMassSpec2" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB"
            isCacheable='true'>
        <paramRef ref="geneParams.mass_spec_stage"/>
        <paramRef ref="sharedParams.min_seq_coverage"/>
        <paramRef ref="sharedParams.min_span_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" />
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesOrthologousToAGivenGene   COULD HAVE SQL ERRORS FOR APIDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesOrthologousToAGivenGene" includeProjects="CryptoDB,PlasmoDB,ToxoDB,ApiDB"
              isCacheable="true">
        <paramRef ref="geneParams.single_gene_id" excludeProjects="ToxoDB"/>
        <paramRef ref="geneParams.single_gene_id" includeProjects="ToxoDB" default="49.m03105" />
        <column name="project_id"/>
        <column name="source_id"/>
        <sql excludeProjects="ApiDB">
            <![CDATA[
                SELECT DISTINCT gf2.source_id, '@PROJECT_ID@' as project_id
                FROM dots.GeneFeature gf1, dots.SequenceSequenceGroup ssg1,
                     dots.SequenceSequenceGroup ssg2, dots.GeneFeature gf2,
                     core.TableInfo ti,apidb.GeneId gi
                WHERE gi.id = lower($$single_gene_id$$)
                  AND gf1.source_id = gi.gene 
                  AND gf1.na_feature_id = ssg1.sequence_id
                  AND ssg1.source_table_id = ti.table_id
                  AND ssg1.sequence_group_id = ssg2.sequence_group_id
                  AND ssg2.source_table_id = ti.table_id
                  AND ssg2.sequence_id = gf2.na_feature_id
                  AND ti.name = 'GeneFeature'
                  AND gf2.source_id != gf1.source_id
                ORDER BY gf2.source_id
           ]]>
       </sql>
<sql includeProjects="ApiDB">
            <![CDATA[
                SELECT DISTINCT snas2.source_id, ext.name as project_id 
                FROM dots.splicednasequence snas1, dots.SequenceSequenceGroup ssg1,
                     dots.SequenceSequenceGroup ssg2, dots.splicednasequence snas2,
                     core.TableInfo ti,
                       sres.ExternalDatabaseRelease extr, 
                       sres.ExternalDatabase ext
                WHERE snas1.source_id = $$single_gene_id$$ 
                  AND snas1.na_sequence_id = ssg1.sequence_id
                  AND ssg1.source_table_id = ti.table_id
                  AND ssg1.sequence_group_id = ssg2.sequence_group_id
                  AND ssg2.source_table_id = ti.table_id
                  AND ssg2.sequence_id = snas2.na_sequence_id
                  AND ti.name = 'SplicedNASequence'
                  AND snas2.source_id != snas1.source_id
                    AND snas2.external_database_release_id=extr.external_database_release_id
                    AND extr.external_database_id=ext.external_database_id
                 order by project_id,snas2.source_id

           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Location -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByLocation" excludeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="sharedParams.chromosomeOptional" includeProjects="PlasmoDB,ToxoDB,CryptoDB"/>
        <paramRef ref="sharedParams.sequenceId"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dynamic_location"/>
        <sql includeProjects="PlasmoDB,CryptoDB,ToxoDB">
            <![CDATA[
            SELECT distinct fl.feature_source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM apidb.featurelocation fl
            WHERE (fl.sequence_source_id = $$chromosomeOptional$$
                   OR lower(fl.sequence_source_id) = lower($$sequenceId$$))
              AND fl.feature_type = 'GeneFeature'
              AND fl.end_max >= $$start_point$$ 
              AND (fl.start_min <= $$end_point$$ OR $$end_point$$ = 0)
           ]]>
       </sql>

<!-- NOTE, don't think we need the toxo specific one but redo if getting wrong things ...
        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id,'dynamic location' as dynamic_location
            FROM dots.GeneFeature gf, dots.naLocation nl, dots.NaSequence ens,
                 sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr
            WHERE nl.na_feature_id = gf.na_feature_id
              AND (ens.source_id = $$chromosomeOptional$$
                   OR lower(ens.source_id) = lower($$sequenceId$$))
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= $$start_point$$ 
              AND (start_min <= $$end_point$$ OR $$end_point$$ = 0)
              AND gf.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id 
              AND ed.name in ('Chromosome Map - David Sibley','Roos Lab T. gondii apicoplast') 
           ]]>
       </sql>
-->

        <sql includeProjects="TrichDB,GiardiaDB">
            <![CDATA[
            SELECT distinct fl.feature_source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM apidb.featurelocation fl
            WHERE lower(fl.sequence_source_id) = lower($$sequenceId$$)
              AND fl.feature_type = 'GeneFeature'
              AND fl.end_max >= $$start_point$$ 
              AND (fl.start_min <= $$end_point$$ OR $$end_point$$ = 0)
           ]]>
       </sql>
    </sqlQuery>

	<wsQuery name="GenesByLocation" includeProjects="ApiDB" 
                    isCacheable='true'
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                       <!--<paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes"/>-->
                       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	               <paramRef ref="sharedParams.chromosomeOptional"/>
	               <paramRef ref="sharedParams.sequenceId"/>
                       <paramRef ref="sharedParams.start_point"/>
                       <paramRef ref="sharedParams.end_point"/>
	               <wsColumn name="source_id" width="32" wsName="source_id"/>
	               <wsColumn name="project_id" width="32" wsName="project_id"/>
                
	</wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Genes By Snps -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySnps" includeProjects="PlasmoDB,ToxoDB,CryptoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.snp_strain_a"/>
        <paramRef ref="sharedParams.snp_strain_m" multiPick="false"/>
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="cds_snp_density"/>
        <column name="dn_ds_ratio"/>
        <column name="num_synonymous"/>
        <column name="num_non_synonymous"/>
        <column name="num_noncoding"/>
        <column name="num_nonsense"/>
        <column name="total_snps"/>
        <sql>
            <![CDATA[
              SELECT source_id, '@PROJECT_ID@' as project_id,
	           round(non_synonymous / CASE synonymous
	                      WHEN 0 THEN 1
				  ELSE synonymous end, 2) as dn_ds_ratio,
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,
              non_coding as num_noncoding, stop as num_nonsense,
              cds_length,round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density,
              total as total_snps
	      FROM apidb.snpsummary
	      WHERE ((strain_a = $$snp_strain_a$$ and strain_b = $$snp_strain_m$$ )
                    or  (strain_a = $$snp_strain_m$$ and strain_b = $$snp_strain_a$$))
	      AND non_synonymous / CASE synonymous
	                          WHEN 0 THEN 1
				  ELSE synonymous end >= $$dn_ds_ratio_lower$$
	      AND non_synonymous / CASE synonymous
	                          WHEN 0 THEN 1
				  ELSE synonymous end <= $$dn_ds_ratio_upper$$
              AND $$snp_stat$$ >= $$occurrences_lower$$
	      AND $$snp_stat$$ <= $$occurrences_upper$$
              AND (non_synonymous + synonymous) / cds_length * 1000 >= $$snp_density$$
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesBySnps" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="ApiDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="sharedParams.snp_strain_a"/>
        <paramRef ref="sharedParams.snp_strain_m" multiPick="false"/>
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density" groupRef="paramGroups.advancedParams"/>
        <wsColumn name="project_id"/>
        <wsColumn name="source_id"/>
        <wsColumn name="cds_snp_density"/>
        <wsColumn name="dn_ds_ratio"/>
        <wsColumn name="num_synonymous"/>
        <wsColumn name="num_non_synonymous"/>
        <wsColumn name="num_noncoding"/>
        <wsColumn name="num_nonsense"/>
        <wsColumn name="total_snps"/>
   </wsQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SecondaryStructure -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySecondaryStructure" includeProjects="PlasmoDB,GiardiaDB,TrichDB"
            isCacheable="true">
        <paramRef ref="geneParams.min_coil"/>
        <paramRef ref="geneParams.max_coil"/>
        <paramRef ref="geneParams.min_strand"/>
        <paramRef ref="geneParams.max_strand"/>
        <paramRef ref="geneParams.min_helix"/>
        <paramRef ref="geneParams.max_helix"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="percent_coil"/>
        <column name="percent_strand"/>
        <column name="percent_helix"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, c.percentage as percent_coil,
                e.percentage as percent_strand, h.percentage as percent_helix
            FROM dots.SecondaryStructure ss, dots.SecondaryStructureCall c, dots.SecondaryStructureCall e,
                 dots.SecondaryStructureCall h,dots.genefeature gf,dots.transcript t, 
                 dots.translatedaafeature tf,dots.nasequence s
            WHERE s.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = tf.na_feature_id
              AND tf.aa_sequence_id = ss.aa_sequence_id
              AND ss.secondary_structure_id = c.secondary_structure_id
              AND ss.secondary_structure_id = e.secondary_structure_id
              AND ss.secondary_structure_id = h.secondary_structure_id
              AND c.structure_type = 'C'
              AND e.structure_type = 'E'
              AND h.structure_type = 'H'
              AND c.percentage between $$min_coil$$ and $$max_coil$$
              AND e.percentage between $$min_strand$$ and $$max_strand$$
              AND h.percentage between $$min_helix$$ and $$max_helix$$
              AND s.taxon_id IN ($$organism$$)
            ]]>
       </sql>
    </sqlQuery>


	<wsQuery name="GenesBySecondaryStructure"
	    includeProjects="ApiDB"        
		isCacheable="true" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoTrichGiardiaGenes"/>
	        <paramRef ref="geneParams.min_coil"/>
	        <paramRef ref="geneParams.max_coil"/>
	        <paramRef ref="geneParams.min_strand"/>
	        <paramRef ref="geneParams.max_strand"/>
	        <paramRef ref="geneParams.min_helix"/>
	        <paramRef ref="geneParams.max_helix"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
			<wsColumn name="percent_coil" width="32" wsName="percent_coil"/>
			<wsColumn name="percent_strand" width="32" wsName="percent_strand"/>
			<wsColumn name="percent_helix" width="32" wsName="percent_helix"/>
	</wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Interpro -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByInterproDomain" excludeProjects="ApiDB"  
			isCacheable="true">
        <paramRef ref="geneParams.domain_database"/>
        <paramRef ref="geneParams.domain_accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="e_value" excludeProjects="ToxoDB"/>
        <sql excludeProjects="ToxoDB">
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, avg(df.e_value) as e_value
            FROM dots.DomainFeature df,dots.translatedaasequence tas,
                 dots.genefeature gf, dots.transcript t, dots.TranslatedAAFeature taf,
                 dots.DbRefAaFeature draf, sres.DbRef dr
            WHERE tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND dr.primary_identifier
                  = substr($$domain_accession$$, 1, instr($$domain_accession$$||':', ':')-1)
              AND tas.taxon_id IN ($$organism$$)
              AND tas.aa_sequence_id = taf.aa_sequence_id
              AND taf.na_feature_id = t.na_feature_id
              AND gf.na_feature_id = t.parent_id
              GROUP BY gf.source_id
            ]]>
       </sql>
        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas,
                 dots.DomainFeature df, dots.DbRefAaFeature draf,
                 sres.DbRef dr
            WHERE t.parent_id = gf.na_feature_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = tas.aa_sequence_id
              AND tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND dr.primary_identifier
                  = substr($$domain_accession$$, 1, instr($$domain_accession$$||':', ':')-1)
            ORDER BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>

	 <wsQuery name="GenesByInterproDomain" includeProjects="ApiDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.domain_database"/>
	              <paramRef ref="geneParams.domain_accession"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
	 </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SageTags -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySageTag" includeProjects="PlasmoDB,ToxoDB,GiardiaDB">
       <paramRef ref="geneParams.sage_tag_library"/>
       <paramRef ref="geneParams.st_max_five_prime_distance"/>
       <paramRef ref="geneParams.st_max_three_prime_distance"/>
       <paramRef ref="geneParams.st_min_tag_count"/>
       <paramRef ref="geneParams.st_max_occurrences"/>
       <paramRef ref="geneParams.sense_antisense"/>
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"
                 includeProjects="GiardiaDB,ToxoDB"/> 
       <paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/> 
       <column name="project_id"/> 
       <column name="source_id" />
       <column name="sense_count" />
       <column name="antisense_count" />
       <sql>
            <![CDATA[
               select gene_source_id as source_id, 
                      '@PROJECT_ID@' as project_id,
                      round(sum(sense_count),1) as sense_count,
                      round(sum(antisense_count),1) as antisense_count
               from 
                 (select stg.gene_source_id, stg.tag_source_id,
                         stg.sense_count, stg.antisense_count
                  from apidb.SageTagGene stg
                  where stg.analysis_id in ($$sage_tag_library$$)
                  and stg.occurrence <= $$st_max_occurrences$$
                  and ((stg.direction = '5' and stg.distance <= $$st_max_five_prime_distance$$)
                     OR (stg.direction = '3' and stg.distance <= $$st_max_three_prime_distance$$))
                  group by stg.gene_source_id, stg.tag_source_id, stg.sense_count, stg.antisense_count
               ) 
               group by gene_source_id having sum($$sense_antisense$$_count) >= $$st_min_tag_count$$ 
            ]]>
          </sql>
    </sqlQuery>

	 <wsQuery name="GenesBySageTag" includeProjects="ApiDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf-gl" includeProjects="ApiDB"/> 
                <paramRef ref="geneParams.sage_tag_library"/>
                <paramRef ref="geneParams.st_max_five_prime_distance"/>
                <paramRef ref="geneParams.st_max_three_prime_distance"/>
                <paramRef ref="geneParams.st_min_tag_count"/>
                <paramRef ref="geneParams.st_max_occurrences"/>
                <paramRef ref="geneParams.sense_antisense"/>
                <wsColumn name="project_id" width="32" wsName="project_id"/> 
                <wsColumn name="source_id"  width="32" wsName="source_id"/>
                <wsColumn name="sense_count" />
                <wsColumn name="antisense_count" />
<!--
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" includeProjects="GiardiaDB,ToxoDB"/> 
                <paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/>
-->
	 </wsQuery>

    <sqlQuery name="GenesBySageTagRStat" includeProjects="PlasmoDB,ToxoDB,GiardiaDB">
      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"
                 includeProjects="GiardiaDB,ToxoDB"/> 
       <paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/> 
       <paramRef ref="geneParams.sage_tag_library_name"/>
       <paramRef ref="geneParams.sage_tag_min_r"/>
       <paramRef ref="geneParams.st_max_five_prime_distance"/>
       <paramRef ref="geneParams.st_max_three_prime_distance"/>
       <column name="project_id"/> 
       <column name="source_id" />
       <column name="R" />
       <sql>
            <![CDATA[
       select gene_source_id as source_id, 
              '@PROJECT_ID@' as project_id,
              to_char(sum(xij * log(10, (xij/(Ni * fj)))), '99999D0') as R
       from (
         select g.gene_source_id, aa.library_name, library_count.n as ni, f.frequency as fj, sum(aa.raw_count) as xij
         from apidb.SAGETAGANALYSISATTRIBUTES aa, 
              apidb.SAGETAGATTRIBUTES a,
              (select distinct gene_source_id, tag_feature_id, antisense 
               from apidb.SAGETAGGENE 
               where ((direction = '5' and distance <= $$st_max_five_prime_distance$$) OR (direction = '3' and distance <= $$st_max_three_prime_distance$$))
               ) g,
              (select g.gene_source_id, sum(aa.raw_count) / max(n.n) as frequency
               from apidb.SAGETAGANALYSISATTRIBUTES aa, 
               apidb.SAGETAGATTRIBUTES a,
               (select distinct gene_source_id, tag_feature_id, antisense 
                from apidb.SAGETAGGENE
                where ((direction = '5' and distance <= $$st_max_five_prime_distance$$) OR (direction = '3' and distance <= $$st_max_three_prime_distance$$))
                ) g,
               (select sum(max(total_raw_count)) as n
                from apidb.SAGETAGANALYSISATTRIBUTES
                where library_name in ($$sage_tag_library_name$$)
                group by library_name) n
               where g.tag_feature_id = a.na_feature_id
                and g.antisense = 0
                and aa.library_name in ($$sage_tag_library_name$$)
                and aa.composite_element_id = a.composite_element_id
               group by g.gene_source_id) f,
              (select library_name, max(total_raw_count) as n
               from apidb.SAGETAGANALYSISATTRIBUTES
               where library_name in ($$sage_tag_library_name$$)
               group by library_name) library_count
         where g.tag_feature_id = a.na_feature_id
          and g.antisense = 0
          and aa.composite_element_id = a.composite_element_id
          and g.gene_source_id = f.gene_source_id
          and aa.library_name = library_count.library_name
         group by g.gene_source_id, aa.library_name, library_count.n, f.frequency
         )
       group by gene_source_id
       having sum(xij * log(10, (xij/(Ni * fj)))) >  $$sage_tag_min_r$$
            ]]>
          </sql>
    </sqlQuery>



    <wsQuery name="GenesBySageTagRStat" includeProjects="ApiDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf-gl"/> 
        <paramRef ref="geneParams.sage_tag_library_name"/>
        <paramRef ref="geneParams.sage_tag_min_r"/>
        <paramRef ref="geneParams.st_max_five_prime_distance"/>
        <paramRef ref="geneParams.st_max_three_prime_distance"/>
   
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="R" />

    </wsQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ESTOverlap -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByESTOverlap" excludeProjects="ApiDB">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withESTsAndGenes"/>
       <paramRef ref="sharedParams.libraryIdGenes"/>
       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.max_number_best_alignments" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.min_number_est_aligned" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="number_of_ests" />
       <sql excludeProjects="CryptoDB">
            <![CDATA[
            SELECT s.gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM apidb.EstAlignmentGeneSummary s, apidb.estattributes e
            WHERE s.est_gene_overlap_length >= $$bp_overlap_gte$$
            AND s.is_consistent in ($$high_confidence_only$$)
            AND s.is_best_alignment in ($$best_alignment_only$$)
            AND s.percent_identity >= $$min_percent_identity$$
            AND s.percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND s.library_id in ($$libraryIdGenes$$)
            AND s.target_taxon_id in ($$organism$$)
            AND e.source_id = s.accession
            AND e.best_alignment_count <= $$max_number_best_alignments$$
            GROUP by s.gene
            HAVING count(*) >= $$min_number_est_aligned$$
            ]]>
          </sql>
       <sql includeProjects="CryptoDB">
           <!-- 
             AA555437 has a gap that spans a huge portion of AAEE01000003,
             causing several genes to be erroneously returned as having overlap
           -->
            <![CDATA[
            SELECT s.gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM apidb.EstAlignmentGeneSummary s, apidb.estattributes e
            WHERE s.est_gene_overlap_length >= $$bp_overlap_gte$$
            AND s.is_consistent in ($$high_confidence_only$$)
            AND s.is_best_alignment in ($$best_alignment_only$$)
            AND s.percent_identity >= $$min_percent_identity$$
            AND s.percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND s.library_id in ($$libraryIdGenes$$)
            AND s.target_taxon_id in ($$organism$$)
            AND e.source_id = s.accession
            AND e.best_alignment_count <= $$max_number_best_alignments$$
            AND s.accession != 'AA555437'
            GROUP by s.gene
           HAVING count(*) >= $$min_number_est_aligned$$
            ]]>
          </sql>
    </sqlQuery>


    <wsQuery name="GenesByESTOverlap" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
           <paramRef ref="organismParams.organism" queryRef="organismVQ.withESTsAndGenes"/>
	       <paramRef ref="sharedParams.libraryIdGenes"/>
	       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
	       <wsColumn name="source_id" width="32" wsName="source_id"/>
	     <wsColumn name="project_id" width="32" wsName="project_id"/>
	<wsColumn name="number_of_ests" width="32" wsName="number_of_ests"/>

    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Dont Care - fake query for internal use -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="DontCare" isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            select source_id, project_id
            from apidb.geneattributes
            where source_id = 'life_is_sweet' 
        </sql>
    </sqlQuery>
    

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Query that retrieves all genes by organism -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneDumpQuery" isCacheable="true" excludeProjects="ApiDB">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
                SELECT gf.source_id AS source_id,
                       '@PROJECT_ID@' as project_id
                FROM DoTS.GeneFeature gf, 
                     dots.NaSequence ns, 
                     apidb.GeneAttributes ga
                WHERE gf.na_sequence_id = ns.na_sequence_id
                  AND ns.taxon_id IN ($$organism$$)
                  AND gf.source_id IS NOT NULL
                  AND gf.source_id = ga.source_id
                  AND ga.project_id = '@PROJECT_ID@'
            ]]>
        </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  plasmoDB 4.4 dataset-->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPlasmoDbDataset" includeProjects="PlasmoDB"
                 isCacheable="true">
        <paramRef ref="geneParams.plasmodb_4-4_dataset"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql>
            <!-- keep order or genes but remove duplicates -->
            <![CDATA[
                SELECT imported.source_id, '@PROJECT_ID@' as project_id FROM (
                    SELECT ga.gene AS source_id, min(c.i) AS i
                    FROM cache$$plasmodb_4-4_dataset$$@apidb.cbilprod c,
                         apidb.plasmodb_genes@apidb.cbilprod pg,
                         apidb.GeneAlias ga
                    WHERE c.na_feature_id = pg.na_feature_id
                      AND lower(pg.source_id) = ga.alias
                    GROUP BY ga.gene) imported
                ORDER BY i
           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Y2H Protein protein interaction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteinProteinInteraction" includeProjects="PlasmoDB"
         isCacheable="true">
        <paramRef ref="geneParams.single_gene_id" default="PFL0275w"/>
        <paramRef ref="geneParams.min_searches"/>
        <paramRef ref="geneParams.min_observed"/>
        <paramRef ref="geneParams.bait_or_prey"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="gene_source_id" />
        <column name="bait_start" />
        <column name="bait_end" />
        <column name="prey_start" />
        <column name="prey_end" />
        <column name="times_observed" />
        <column name="number_of_searches" />
        <column name="prey_number_of_baits" />
        <column name="bait_number_of_preys" />
        <column name="bait_or_prey" />
        <sql>
            <![CDATA[
            SELECT * FROM
               (SELECT pf.source_id, '@PROJECT_ID@' as project_id, pf.source_id as gene_source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches,
                       (select distinct prey_number_of_baits
                         from apidb.geneinteraction igi
                         where igi.bait_gene_feature_id = pf.na_feature_id) AS prey_number_of_baits,
                       bait_number_of_preys, 'bait' as bait_or_prey
                FROM apidb.GeneId ga, dots.GeneFeature bf, dots.GeneFeature pf,
                     dots.ExternalNaSequence ens, apidb.GeneInteraction gi
                WHERE lower($$single_gene_id$$) = ga.id
                  AND ga.gene = bf.source_id
                  AND gi.number_of_searches >= $$min_searches$$
                  AND gi.times_observed >= $$min_observed$$
                  AND bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND pf.na_sequence_id = ens.na_sequence_id
                UNION
                SELECT bf.source_id, '@PROJECT_ID@' as project_id, bf.source_id as gene_source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches, prey_number_of_baits,
                       (select distinct bait_number_of_preys
                         from apidb.geneinteraction igi
                         where igi.prey_gene_feature_id = bf.na_feature_id) AS bait_number_of_preys, 'prey' as bait_or_prey
                FROM apidb.GeneId ga, dots.GeneFeature bf, dots.GeneFeature pf,
                     dots.ExternalNaSequence ens,  apidb.GeneInteraction gi
                WHERE lower($$single_gene_id$$) = ga.id
                  AND ga.gene = pf.source_id
                  AND gi.number_of_searches >= $$min_searches$$
                  AND gi.times_observed >= $$min_observed$$
                  AND bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND bf.na_sequence_id = ens.na_sequence_id)
            WHERE ($$bait_or_prey$$ = bait_or_prey
                   OR $$bait_or_prey$$ = 'either')
           ]]>
       </sql>
    </sqlQuery>

   <wsQuery name="GenesByProteinProteinInteraction" includeProjects="ApiDB"
                        isCacheable="true" 
                        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.single_gene_id" default="PFL0275w"/>
        <paramRef ref="geneParams.min_searches"/>
        <paramRef ref="geneParams.min_observed"/>
        <paramRef ref="geneParams.bait_or_prey"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="gene_source_id" width="32" wsName="gene_source_id"/>
        <wsColumn name="bait_start" width="32"/>
        <wsColumn name="bait_end" width="32"/>
        <wsColumn name="prey_start" width="32"/>
        <wsColumn name="prey_end" width="32"/>
        <wsColumn name="times_observed" width="32"/>
        <wsColumn name="number_of_searches" width="32"/>
        <wsColumn name="prey_number_of_baits" width="32"/>
        <wsColumn name="bait_number_of_preys" width="32"/>
        <wsColumn name="bait_or_prey" width="32"/>
     </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression Timing -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="geneParams.profileSet"/>
        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.maxExprHour"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
        <paramRef ref="geneParams.minExprHour"/>
        <paramRef ref="geneParams.minPlusMinusHours"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <sql>
          <![CDATA[
          SELECT gf.source_id, to_char(max(pr.ind_ratio), '999.99') as max_fc,'@PROJECT_ID@' as project_id
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR abs($$maxExprHour$$ - pr.equiv_max) <= $$maxPlusMinusHours$$)
          AND ($$minOrMax$$ = 'max'
                 OR abs($$minExprHour$$ - pr.equiv_min) <= $$minPlusMinusHours$$)
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$ / 100
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name like ($$profileSet$$)
          group BY gf.source_id
          ]]>
      </sql>
    </sqlQuery>

    <wsQuery name="GenesByExpressionTiming" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.profileSet"/>
        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.maxExprHour"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
        <paramRef ref="geneParams.minExprHour"/>
        <paramRef ref="geneParams.minPlusMinusHours"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

             
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression profile similarity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <wsQuery name="GenesByProfileSimilarity" includeProjects="PlasmoDB"  
             processName="org.apidb.apicomplexa.wsfplugin.profile.ProfileSimilarityPlugin">
       <paramRef ref="geneParams.ProfileGeneId"/>
       <paramRef ref="geneParams.ProfileDistanceMethod"/>
       <paramRef ref="geneParams.ProfileNumToReturn"/>
       <paramRef ref="geneParams.ProfileProfileSet"/>
       <paramRef ref="geneParams.ProfileSearchGoal"/>
       <paramRef ref="geneParams.ProfileTimeShift"/>
       <paramRef ref="geneParams.ProfileScaleData"/>
       <paramRef ref="geneParams.ProfileMinShift"/>
       <paramRef ref="geneParams.ProfileMaxShift"/>
       <wsColumn name="source_id" width="50" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="distance" wsName="Distance" width="50"/>
       <wsColumn name="time_shift" wsName="Shift" width="50"/>
       <wsColumn name="query_source_id" wsName="QueryGeneId" width="50"/>
    </wsQuery>

    <wsQuery name="GenesByProfileSimilarity" includeProjects="ApiDB"  
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
       <paramRef ref="geneParams.ProfileGeneId"/>
       <paramRef ref="geneParams.ProfileDistanceMethod"/>
       <paramRef ref="geneParams.ProfileNumToReturn"/>
       <paramRef ref="geneParams.ProfileProfileSet"/>
       <paramRef ref="geneParams.ProfileSearchGoal"/>
       <paramRef ref="geneParams.ProfileTimeShift"/>
       <paramRef ref="geneParams.ProfileScaleData"/>
       <paramRef ref="geneParams.ProfileMinShift"/>
       <paramRef ref="geneParams.ProfileMaxShift"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="distance" wsName="distance" width="50"/>
       <wsColumn name="time_shift" wsName="time_shift" width="50"/>
       <wsColumn name="query_source_id" wsName="query_source_id" width="50"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByPhyleticProfile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhyleticProfile" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="PY03942"/>
        <paramRef ref="geneParams.min_mutual_information_score"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="query_ids" />
        <column name="mutual_information_scores" />
        <column name="num_queries" />
        <sql>
            <![CDATA[
                select * from (
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, count(*) as num_queries,
                    apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids,
                    apidb.tab_to_string(CAST(COLLECT(to_char(mis.mutual_information_score/10000)) AS apidb.varchartab), ', ') AS mutual_information_scores
                FROM dots.GeneFeature gf1, dots.PhylogeneticProfile pp1,
                     dots.MutualInformationScore mis, dots.PhylogeneticProfile pp2,
                     dots.GeneFeature gf2,@LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'no'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = pp1.na_feature_id
                  AND ((pp1.phylogenetic_profile_id = mis.primary_profile_id
                  AND mis.secondary_profile_id = pp2.phylogenetic_profile_id)
                    OR (pp1.phylogenetic_profile_id = mis.secondary_profile_id
                  AND mis.primary_profile_id = pp2.phylogenetic_profile_id))
                  and mis.mutual_information_score/1000 >= $$min_mutual_information_score$$
                  AND pp2.na_feature_id = gf2.na_feature_id
                  AND gf2.source_id != gf1.source_id
                  group  by gf2.source_id
                  having count(*) >= $$min_num_query_matches$$
             UNION
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, count(*) as num_queries,
                    apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                    apidb.tab_to_string(CAST(COLLECT(to_char(mis.mutual_information_score/10000)) AS apidb.varchartab), ', ') AS mutual_information_scores
                FROM dots.GeneFeature gf1, dots.PhylogeneticProfile pp1,
                     dots.MutualInformationScore mis, dots.PhylogeneticProfile pp2,
                     dots.GeneFeature gf2,@LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'yes'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = pp1.na_feature_id
                  AND ((pp1.phylogenetic_profile_id = mis.primary_profile_id
                  AND mis.secondary_profile_id = pp2.phylogenetic_profile_id)
                    OR (pp1.phylogenetic_profile_id = mis.secondary_profile_id
                  AND mis.primary_profile_id = pp2.phylogenetic_profile_id))
                  and mis.mutual_information_score/1000 >= $$min_mutual_information_score$$
                  AND pp2.na_feature_id = gf2.na_feature_id
                  AND gf2.source_id in (select intds.dataset_value as gene_id 
                      from @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ intds
                      where intds.dataset_id = $$ds_gene_ids$$) 
                  AND gf2.source_id != gf1.source_id
                  group  by gf2.source_id
                  having count(*) >= $$min_num_query_matches$$
                )
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByPhyleticProfile" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" default="PY03942"/>
 <paramRef ref="sharedParams.signature"/>
        <paramRef ref="geneParams.min_mutual_information_score"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="query_ids" />
        <wsColumn name="mutual_information_scores" />
        <wsColumn name="num_queries" />
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByFunctionalInteraction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByFunctionalInteraction" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="PF11_0344"/>
        <paramRef ref="geneParams.min_interaction"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="likelihood_scores"/>
        <column name="query_ids" />
        <column name="queries_matched"/>
        <sql>
            <![CDATA[
                select * from (
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, 
                  apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                  apidb.tab_to_string(CAST(COLLECT(to_char(rnf.value)) AS apidb.varchartab), ', ') AS likelihood_scores,
                  count(*) as queries_matched
                FROM dots.GeneFeature gf1, apidb.RelatedNaFeature rnf,
                     dots.GeneFeature gf2,@LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'no'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = rnf.na_feature_id
                  AND rnf.associated_na_feature_id = gf2.na_feature_id
                  AND rnf.value >= $$min_interaction$$
                GROUP BY gf2.source_id
                HAVING count(*) >= $$min_num_query_matches$$
              UNION
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, 
                  apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                  apidb.tab_to_string(CAST(COLLECT(to_char(rnf.value)) AS apidb.varchartab), ', ') AS likelihood_scores,
                  count(*) as queries_matched
                FROM dots.GeneFeature gf1, apidb.RelatedNaFeature rnf,
                     dots.GeneFeature gf2,@LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'yes'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = rnf.na_feature_id
                  AND rnf.associated_na_feature_id = gf2.na_feature_id
                  AND rnf.value >= $$min_interaction$$
                  AND gf2.source_id in (select intds.dataset_value as gene_id 
                      from @LOGIN_SCHEMA@dataset_values@LOGIN_DBLINK@ intds
                      where intds.dataset_id = $$ds_gene_ids$$)
                GROUP BY gf2.source_id
                HAVING count(*) >= $$min_num_query_matches$$
              )
           ]]>
       </sql>
    </sqlQuery>

    <wsQuery name="GenesByFunctionalInteraction" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" default="PF11_0344"/>
<paramRef ref="sharedParams.signature"/>
        <paramRef ref="geneParams.min_interaction"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="likelihood_scores"/>
        <wsColumn name="query_ids" />
        <wsColumn name="queries_matched"/>
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByDifferentialExpression" includeProjects="ToxoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
	    SELECT sof.source_id, '@PROJECT_ID@' as project_id,
	      max(round(de.fold_change, 2)) as fold_change,
              max(round(de.confidence, 2)) as confidence
            FROM RAD.DifferentialExpression de, Rad.ShortOligoFamily sof,
                 Rad.Analysis a, Rad.AnalysisInput aia, Rad.AnalysisInput aib,
		 Rad.LogicalGroup lga, Rad.LogicalGroup lgb,
                 Rad.Protocol p, Rad.ProtocolParam pp, Rad.AnalysisParam ap
            WHERE sof.composite_element_id = de.row_id
             AND a.analysis_id = de.analysis_id
             AND a.analysis_id = aia.analysis_id
             AND a.analysis_id = aib.analysis_id
             AND aia.logical_group_id = lga.logical_group_id 
             AND aib.logical_group_id = lgb.logical_group_id
             AND a.protocol_id = p.protocol_id
             AND pp.protocol_id = p.protocol_id
             AND ap.protocol_param_id = pp.protocol_param_id
             AND ap.analysis_id = a.analysis_id
             AND pp.name = 'reference_condition'
             AND p.name = 'PaGE'
	     AND lga.name = regexp_replace($$exprnsample$$, ' vs.*','')             
	     AND lgb.name = regexp_replace($$exprnsample$$, '.*vs. ','')     
             AND de.confidence >= $$confidence$$
             AND ($$regulated_dir$$ (de.fold_change) >= $$fold_change$$)
             GROUP BY sof.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <wsQuery name="GenesByDifferentialExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </wsQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GiardiaGenesByDifferentialExpression" includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.gl_exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
            select g.source_id,  '@PROJECT_ID@' as project_id, 
                   max(round(de.fold_change, 2)) as fold_change,
                   max(round(de.confidence, 2)) as confidence
            from rad.DIFFERENTIALEXPRESSION de, Core.TABLEINFO ti, 
                 rad.COMPOSITEELEMENTNASEQUENCE cs, dots.TRANSCRIPT t, dots.GENEFEATURE g
            where ti.name = 'ShortOligoFamily'
              and de.table_id = ti.table_id
              and de.row_id = cs.composite_element_id
              and cs.na_sequence_id = t.na_sequence_id
              and t.parent_id = g.na_feature_id
              and de.analysis_id = $$gl_exprnsample$$
              AND de.confidence >= $$confidence$$
              AND ($$regulated_dir$$ (de.fold_change) >= $$fold_change$$)
             group by g.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <wsQuery name="GiardiaGenesByDifferentialExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.gl_exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </wsQuery> 


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ToxoGenesByExpressionPercentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ToxoGenesByExpressionPercentile"  includeProjects="ToxoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.sample"/>
       <paramRef ref="geneParams.percentile"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
	    SELECT 
                 sof.source_id, '@PROJECT_ID@' as project_id, 
                 max(to_char(de.percentile,'99.99')) as percentile
            FROM RAD.ExpressionProfile de, Rad.ShortOligoFamily sof,
                 Rad.Analysis a, Rad.AnalysisInput aia, 
		 Rad.LogicalGroup lga,
                 Rad.Protocol p, Rad.ProtocolParam pp, Rad.AnalysisParam ap
            WHERE sof.composite_element_id = de.row_id
             AND a.analysis_id = de.analysis_id
             AND a.analysis_id = aia.analysis_id
             AND aia.logical_group_id = lga.logical_group_id 
             AND a.protocol_id = p.protocol_id
             AND pp.protocol_id = p.protocol_id
             AND ap.protocol_param_id = pp.protocol_param_id
             AND ap.analysis_id = a.analysis_id
             AND p.name = 'R Expression Statistics'
             AND lga.name = $$sample$$
             AND de.percentile >= $$percentile$$
             GROUP BY sof.source_id
             ORDER BY sof.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <wsQuery name="ToxoGenesByExpressionPercentile" includeProjects="ApiDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
 <!--      <paramRef ref="params.tgorganism"/>  -->
       <paramRef ref="geneParams.sample"/>
       <paramRef ref="geneParams.percentile"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="percentile" width="32" />
    </wsQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByIntraerythrocyticExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIntraerythrocyticExpression" includeProjects="PlasmoDB" 
           isCacheable="true">
        <paramRef ref="geneParams.synchronization"/>
        <paramRef ref="geneParams.intraerythrocytic_stages"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[
            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM apidb.Expression e
            WHERE (e.element_order = $$intraerythrocytic_stages$$
                   OR $$intraerythrocytic_stages$$ = 0)
              AND e.profile_set_name in ($$synchronization$$)
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByIntraerythrocyticExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.synchronization"/>
        <paramRef ref="geneParams.intraerythrocytic_stages"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExtraerythrocyticExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExtraerythrocyticExpression"  includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.extraerythrocytic_stages"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[
            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM apidb.Expression e
            WHERE e.profile_set_name in ('winzeler_cc_sorbPct', 'winzeler_cc_sporPct')
              AND (e.element_order = $$extraerythrocytic_stages$$
                   OR $$extraerythrocytic_stages$$ = 0)
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByExtraerythrocyticExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.extraerythrocytic_stages"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpression" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[

            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM apidb.Expression e
            WHERE e.profile_set_name
                  in ('winzeler_cc_sorbPct', 'winzeler_cc_tempPct',
                      'winzeler_cc_sporPct')
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialMeanExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByDifferentialMeanExpression" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.diffMeanExpr_reference"/>
       <paramRef ref="geneParams.diffMeanExpr_comparitor"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
        <![CDATA[
           SELECT ga.gene as source_id, '@PROJECT_ID@' as project_id, 
                   to_char((CASE WHEN avg(ep1.mean)/avg(ep2.mean) >= 1
                   THEN avg(ep1.mean)/avg(ep2.mean)
                   ELSE -1/(avg(ep1.mean)/avg(ep2.mean))
                   END),999.9) as fold_change
            FROM Rad.AnalysisInput ai1, Rad.Analysis a1, 
                 Rad.ExpressionProfile ep1,  
                 Rad.AnalysisInput ai2, Rad.Analysis a2,
                 Rad.ExpressionProfile ep2, 
                 Rad.Protocol p, Rad.ShortOligoFamily sof,
                 ApiDB.GeneAlias ga
            WHERE p.name = 'R Expression Statistics'
             AND ai1.logical_group_id = $$diffMeanExpr_reference$$
             AND a1.analysis_id = ai1.analysis_id
             AND a1.protocol_id = p.protocol_id
             AND ep1.analysis_id = a1.analysis_id
             AND sof.composite_element_id = ep1.row_id
             AND ai2.logical_group_id = $$diffMeanExpr_comparitor$$
             AND a2.analysis_id = ai2.analysis_id
             AND a2.protocol_id = p.protocol_id
             AND ep2.analysis_id = a2.analysis_id
             AND sof.composite_element_id = ep2.row_id
             AND sof.source_id is not null
             AND ga.alias = sof.source_id
             having  case when $$regulated_dir$$ = '-' 
                    then avg(ep2.mean)/avg(ep1.mean)
                     else avg(ep1.mean)/avg(ep2.mean)
                     end > $$fold_change$$
             GROUP BY ga.gene
             ORDER BY ga.gene
            ]]>
          </sql>
    </sqlQuery>    

    <wsQuery name="GenesByDifferentialMeanExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.diffMeanExpr_reference"/>
       <paramRef ref="geneParams.diffMeanExpr_comparitor"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="fold_change" />
    </wsQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExpressionPercentileA -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpressionPercentileA" includeProjects="PlasmoDB"> 
       <paramRef ref="geneParams.cowmanSample"/>
       <paramRef ref="geneParams.percentile"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
            <![CDATA[
	    SELECT 
                 ga.gene as source_id, '@PROJECT_ID@' as project_id, 
                 max(to_char(de.percentile,'99.99')) as percentile
            FROM RAD.ExpressionProfile de, Rad.ShortOligoFamily sof,
                 Rad.Analysis a, Rad.AnalysisInput aia, 
		 Rad.LogicalGroup lga,
                 Rad.Protocol p, Rad.ProtocolParam pp, Rad.AnalysisParam ap,
                 ApiDB.GeneAlias ga
            WHERE sof.source_id is not null
             AND ga.alias = sof.source_id
             AND sof.composite_element_id = de.row_id
             AND a.analysis_id = de.analysis_id
             AND a.analysis_id = aia.analysis_id
             AND aia.logical_group_id = lga.logical_group_id 
             AND a.protocol_id = p.protocol_id
             AND pp.protocol_id = p.protocol_id
             AND ap.protocol_param_id = pp.protocol_param_id
             AND ap.analysis_id = a.analysis_id
             AND p.name = 'R Expression Statistics'
             AND lga.logical_group_id = $$cowmanSample$$
             AND de.percentile >= $$percentile$$
             GROUP BY ga.gene
             ORDER BY ga.gene
            ]]>
          </sql>
    </sqlQuery>    

    <wsQuery name="GenesByExpressionPercentileA" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.cowmanSample"/>
       <paramRef ref="geneParams.percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="percentile" />
    </wsQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByWatersDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByWatersDifferentialExpression" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
          SELECT ga.gene as source_id, '@PROJECT_ID@' as project_id,
	      max(to_char(de.fold_change, '999.99')) as fold_change,
              max(to_char(de.confidence,'99.99')) as confidence
            FROM Rad.LogicalGroup lg,
                 Rad.AnalysisInput ai,
                 Rad.Analysis a, 
                 RAD.DifferentialExpression de, 
                 Rad.ShortOligoFamily sof,
                 Rad.Protocol p, 
                 Rad.ProtocolParam pp, 
                 Rad.AnalysisParam ap,
                 ApiDB.GeneAlias ga
            WHERE lg.name = 'DOZI mutant vs. Wild Type - Loess Normalized Analyses'
             AND ai.logical_group_id = lg.logical_group_id 
             AND a.analysis_id = ai.analysis_id
             AND de.analysis_id = a.analysis_id
             AND sof.composite_element_id = de.row_id
             AND sof.source_id is not null
             AND ga.alias = sof.source_id
             AND p.name = 'PaGE'
             AND a.protocol_id = p.protocol_id
             AND pp.protocol_id = p.protocol_id
             AND pp.name = 'reference_condition'
             AND ap.protocol_param_id = pp.protocol_param_id
             AND a.analysis_id = ap.analysis_id
             AND de.confidence >= $$confidence$$
             AND ( $$regulated_dir$$ de.fold_change) >= $$fold_change$$
             GROUP BY ga.gene
             ORDER BY ga.gene
        ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByWatersDifferentialExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BergheiGenesByExpressionPercentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="BergheiGenesByExpressionPercentile" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.waters_profilesets"/>
        <paramRef ref="geneParams.r_min_expression_percentile"/>
        <paramRef ref="geneParams.r_max_expression_percentile"/>
        <paramRef ref="geneParams.yt_min_expression_percentile"/>
        <paramRef ref="geneParams.yt_max_expression_percentile"/>
        <paramRef ref="geneParams.ys_min_expression_percentile"/>
        <paramRef ref="geneParams.ys_max_expression_percentile"/>
        <paramRef ref="geneParams.ms_min_expression_percentile"/>
        <paramRef ref="geneParams.ms_max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
        SELECT DISTINCT fred.source_id, '@PROJECT_ID@' as project_id from(
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'R'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$r_min_expression_percentile$$ / 100
              AND pe.value <= $$r_max_expression_percentile$$ / 100
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'YT'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$yt_min_expression_percentile$$ / 100
              AND pe.value <= $$yt_max_expression_percentile$$ / 100
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'YS'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$ys_min_expression_percentile$$ / 100
              AND pe.value <= $$ys_max_expression_percentile$$ / 100
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'MS'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$ms_min_expression_percentile$$ / 100
              AND pe.value <= $$ms_max_expression_percentile$$ / 100
          ) fred
          ORDER BY fred.source_id
        ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="BergheiGenesByExpressionPercentile" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.waters_profilesets"/>
        <paramRef ref="geneParams.r_min_expression_percentile"/>
        <paramRef ref="geneParams.r_max_expression_percentile"/>
        <paramRef ref="geneParams.yt_min_expression_percentile"/>
        <paramRef ref="geneParams.yt_max_expression_percentile"/>
        <paramRef ref="geneParams.ys_min_expression_percentile"/>
        <paramRef ref="geneParams.ys_max_expression_percentile"/>
        <paramRef ref="geneParams.ms_min_expression_percentile"/>
        <paramRef ref="geneParams.ms_max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesBySubcellularLocalization -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySubcellularLocalization" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.localization"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
              SELECT DISTINCT s.source_id, '@PROJECT_ID@' as project_id
              FROM apidb.Subcellular s
              WHERE targetting_domain = $$localization$$
              ORDER BY s.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesBySubcellularLocalization" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
 <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.localization"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByProteomicsProfile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteomicsProfile" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.asexual_blood_stages_value"/>
        <paramRef ref="geneParams.gametocytes_value"/>
        <paramRef ref="geneParams.ookinetes_value"/>
        <paramRef ref="geneParams.oocysts_value"/>
        <paramRef ref="geneParams.sporozoites_value"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT pb.source_id, '@PROJECT_ID@' as project_id FROM
            (SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 1 AND ('any' = $$asexual_blood_stages_value$$ OR
                                           pe.value = $$asexual_blood_stages_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 2 AND ('any' = $$gametocytes_value$$ OR
                                           pe.value = $$gametocytes_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 3 AND ('any' = $$ookinetes_value$$ OR
                                           pe.value = $$ookinetes_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 4 AND ('any' = $$oocysts_value$$ OR
                                           pe.value = $$oocysts_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 5 AND ('any' = $$sporozoites_value$$ OR
                                           pe.value = $$sporozoites_value$$))) pb
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByProteomicsProfile" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.asexual_blood_stages_value"/>
        <paramRef ref="geneParams.gametocytes_value"/>
        <paramRef ref="geneParams.ookinetes_value"/>
        <paramRef ref="geneParams.oocysts_value"/>
        <paramRef ref="geneParams.sporozoites_value"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByMr4Reagents -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMr4Reagents" includeProjects="PlasmoDB"
              isCacheable="true">

        <paramRef ref="geneParams.mr4_reagent_type"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
               SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
               FROM dots.GeneFeature gf,
                dots.DbRefAaFeature df,
                sres.DbRef dbr, sres.ExternalDatabaseRelease edr,
                sres.ExternalDatabase ed, dots.TranslatedAAFeature taf,
                dots.Transcript t
               WHERE ed.name = 'MR4DBxRefs'
                 AND edr.external_database_id = ed.external_database_id
                 AND dbr.external_database_release_id = edr.external_database_release_id
                 AND (LOWER(dbr.secondary_identifier) = $$mr4_reagent_type$$
                      OR $$mr4_reagent_type$$ = 'any')
                 AND df.db_ref_id = dbr.db_ref_id
                 AND taf.aa_feature_id = df.aa_feature_id
                 AND t.na_feature_id = taf.na_feature_id
                 AND gf.na_feature_id = t.parent_id

           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByMr4Reagents" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
<paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.mr4_reagent_type"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExportPrediction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExportPrediction" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_exportpred_score"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="exportpred_score"/>
        <sql>
            <![CDATA[
                SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
                  max(df.score) as exportpred_score
                FROM dots.aasequence aa,dots.DomainFeature df, dots.translatedaafeature tf,
                     dots.transcript t,dots.genefeature gf
                WHERE  aa.taxon_id in ($$organism$$)
                   AND aa.aa_sequence_id = df.aa_sequence_id
                   AND df.algorithm_name = 'exportpred'
                   AND df.score >= $$min_exportpred_score$$
                   AND tf.aa_sequence_id = aa.aa_sequence_id
                   AND t.na_feature_id = tf.na_feature_id
                   AND gf.na_feature_id = t.parent_id
                   GROUP BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByExportPrediction" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes"/>
        <paramRef ref="geneParams.min_exportpred_score"/>	
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="exportpred_score"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByCentromereProximity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByCentromereProximity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.max_centromere_distance"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dist_centromere"/>
        <sql>
            <![CDATA[
                SELECT gcd.gene AS source_id, '@PROJECT_ID@' as project_id,
                TRIM(TO_CHAR(gcd.centromere_distance,'9,999,999')) as dist_centromere
                FROM apidb.GeneCentromereDistance gcd, apidb.GeneAttributes ga
                WHERE gcd.gene = ga.source_id
                  AND gcd.centromere_distance <= $$max_centromere_distance$$
                  AND gcd.genomic_sequence in ($$chromosome$$)
                ORDER BY gcd.genomic_sequence, ga.start_min
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByCentromereProximity" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.max_centromere_distance"/>
        <paramRef ref="sharedParams.chromosome"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="dist_centromere"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByTelomereProximity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTelomereProximity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.distanceFromTelomere"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dist_telomere"/>
        <sql>
            <![CDATA[
	    SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
            trim(to_char(LEAST(s.length - l.end_max,l.start_min),'999,999')) as dist_telomere
	    FROM Dots.GENEFEATURE gf, dots.NALOCATION l, dots.EXTERNALNASEQUENCE s
	    WHERE gf.na_sequence_id = s.na_sequence_id
	     AND l.na_feature_id = gf.na_feature_id
	     AND s.source_id  in ($$chromosome$$)
	     AND (l.end_max >= s.length - $$distanceFromTelomere$$
                                      OR l.start_min <= 1 + $$distanceFromTelomere$$)
	     ORDER BY s.source_id,l.end_max
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByTelomereProximity" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.distanceFromTelomere"/>
        <paramRef ref="sharedParams.chromosome"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="dist_telomere"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByNonnuclearGenomicRegion -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByNonnuclearGenomicRegion" includeProjects="PlasmoDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.nonnuclearSequence"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, dots.naLocation nl, dots.NaSequence ens
            WHERE nl.na_feature_id = gf.na_feature_id
              AND ens.source_id IN ($$nonnuclearSequence$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= $$start_point$$ 
              AND (start_min <= $$end_point$$ OR $$end_point$$ = 0)
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByNonnuclearGenomicRegion" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/>
        <paramRef ref="geneParams.nonnuclearSequence"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithStructurePrediction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithStructurePrediction" includeProjects="PlasmoDB"
              isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.aafeature aaf, dots.GeneFeature gf, dots.transcript t,
                 dots.DbRefaaFeature drnf,  sres.DbRef dr,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
            WHERE gf.na_feature_id = t.parent_id
              AND t.na_feature_id = aaf.na_feature_id
              AND aaf.aa_feature_id = drnf.aa_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'Predicted protein structures'
            ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesWithStructurePrediction" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
<paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByPdbSimilarity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPdbSimilarity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.clades"/>
        <paramRef ref="geneParams.pvalue_cutoff"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id,
                 MAX(ens.taxon_id) AS gene_taxon_id
            FROM dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas,
                 /*  join to TranslatedAaSequence seems unneccessary */
                 core.TableInfo tas_ti, dots.Similarity s,
                 core.TableInfo eas_ti, dots.ExternalAaSequence eas,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed,
                 dots.GeneFeature gf, dots.ExternalNaSequence ens,
                 dots.Transcript t
            WHERE taf.aa_sequence_id = tas.aa_sequence_id
              AND tas_ti.name = 'TranslatedAASequence'
              AND tas_ti.table_id = s.query_table_id
              AND s.query_id = tas.aa_sequence_id
              AND s.pvalue_exp < $$pvalue_cutoff$$
              AND eas_ti.name = 'ExternalAASequence'
              AND eas_ti.table_id = s.subject_table_id
              AND s.subject_id = eas.aa_sequence_id
              AND eas.external_database_release_id
                  = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'PDB protein sequences'
              AND t.na_feature_id = taf.na_feature_id
              AND gf.na_feature_id = t.parent_id
              AND gf.na_sequence_id = ens.na_sequence_id
              AND eas.taxon_id IN
                  (SELECT taxon_id from sres.taxon
                   CONNECT BY parent_id = PRIOR taxon_id
                   START WITH taxon_id IN ($$clades$$))
              AND ens.taxon_id IN ($$organism$$)
            GROUP BY gf.source_id
            ORDER BY MAX(ens.taxon_id), gf.source_id
            ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByPdbSimilarity" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes"/>
        <paramRef ref="geneParams.clades"/>
        <paramRef ref="geneParams.pvalue_cutoff"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByProteinDbAccession -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteinDbAccession" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
             FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf,
                  sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                  sres.ExternalDatabase ed, dots.ExternalNaSequence ens
             WHERE (dr.primary_identifier = $$accession$$
                    OR dr.secondary_identifier = $$accession$$)
               AND gf.na_feature_id = drnf.na_feature_id
               AND drnf.db_ref_id = dr.db_ref_id
               AND dr.external_database_release_id
                     = edr.external_database_release_id
               AND edr.external_database_id = ed.external_database_id
               AND ed.name IN ('NRDB_gb_dbXRefBySeqIdentity',
                           /*  'NRDB_pdb_dbXRefBySeqIdentity', */
                               'NRDB_ref_dbXRefBySeqIdentity',
                               'NRDB_sp_dbXRefBySeqIdentity',
                               'GenBank')
              AND gf.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id IN ($$organism$$)
            ORDER BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByProteinDbAccession" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithProteinLowComplexity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithProteinLowComplexity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.percentLowComplexity"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
	    select gf.source_id, '@PROJECT_ID@' as project_id
	    from Dots.LowComplexityAAFeature lc, Dots.GeneFeature gf,
	         Dots.ExternalNASequence ens, Dots.AALocation al, 
                 Dots.AASequence s, Dots.Transcript t, Dots.TranslatedAAFeature taf
            where ens.source_id in ($$chromosome$$)
            and gf.na_sequence_id = ens.na_sequence_id
            and t.parent_id = gf.na_feature_id
            and taf.na_feature_id = t.na_feature_id
            and s.aa_sequence_id = taf.aa_sequence_id
            and lc.aa_sequence_id = s.aa_sequence_id
            and al.aa_feature_id = lc.aa_feature_id
	    group by gf.source_id
	    having sum(100 *(al.end_max - al.start_min)/s.length ) > $$percentLowComplexity$$
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesWithProteinLowComplexity" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.percentLowComplexity"/>
        <paramRef ref="sharedParams.chromosome"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByGametocyteExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

   <!-- got rid of the unused pr_organism parameter -->

    <sqlQuery name="GenesByGametocyteExpression" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.day_and_strain"/>
        <paramRef ref="geneParams.min_expression_percentile" default="80"/>
        <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT p.source_id, '@PROJECT_ID@' as project_id
            FROM apidb.profile p, apidb.profileElementName pen,
                 apidb.profileElement pe
            WHERE pe.value BETWEEN $$min_expression_percentile$$ / 100
                               AND $$max_expression_percentile$$ / 100
              AND pen.profile_element_name_id IN ($$day_and_strain$$)
              AND pen.profile_set_id = p.profile_set_id
              AND p.profile_id = pe.profile_id
              AND pe.element_order = pen.element_order
            ORDER by p.source_id
            ]]>
       </sql>
    </sqlQuery>  

    <wsQuery name="GenesByGametocyteExpression" includeProjects="ApiDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.day_and_strain"/>
        <paramRef ref="geneParams.min_expression_percentile" default="80"/>
        <paramRef ref="geneParams.max_expression_percentile" default="100"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </wsQuery>

  </querySet>
  
  <querySet name="GeneSubTypes">
  
    <sqlQuery name="GenesByFilters" includeProjects="GiardiaDB,ToxoDB"
              isCacheable="false">
        <paramRef ref="geneParams.geneResult"/>
        <paramRef ref="geneParams.subType"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql includeProjects="GiardiaDB">
            <![CDATA[
            SELECT c.*
            FROM ($$geneResult$$) c,
                 apidb.GeneAttributes ga
            WHERE c.source_id = ga.source_id
              AND c.project_id = ga.project_id
              AND ga.is_deprecated = $$subType$$
            ]]>
        </sql>
        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT c.*
            FROM ($$geneResult$$) c,
                 (SELECT MAX(c.source_id) KEEP (DENSE_RANK FIRST ORDER BY 
                            DECODE(ga.organism, 'Toxoplasma gondii ME49', 1, 
                                                'Toxoplasma gondii GT1', 2,
                                                'Toxoplasma gondii VEG', 3)) AS source_id
                  FROM ($$geneResult$$) c, apidb.GeneAttributes ga
                  WHERE c.source_id = ga.source_id
                  AND ncbi_tax_id in ($$subType$$)
                  GROUP BY ga.gene_id) f
            WHERE c.source_id = f.source_id
            ]]>
        </sql>
    </sqlQuery>  
  
    <sqlQuery name="GenesByTransformers" includeProjects="ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.geneResult"/>
        <paramRef ref="organismParams.organism" 
                  queryRef="organismVQ.withStrains"
                  default="Toxoplasma gondii ME49,Toxoplasma gondii GT1,Toxoplasma gondii VEG"
                  allowEmpty="true"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT ga.source_id, '@PROJECT_ID@' AS project_id
            FROM apidb.GeneAttributes ga
            WHERE ga.gene_id IN
                    (SELECT ga.gene_id
                     FROM apidb.GeneAttributes ga, $$geneResult$$ c
                     WHERE ga.source_id = c.source_id)
              AND ga.ncbi_tax_id IN ($$organism$$)
            ]]>
       </sql>
    </sqlQuery>  
    
  </querySet>

</wdkModel>
