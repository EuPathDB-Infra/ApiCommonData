<wdkModel>
    <querySet name="IsolateAttributes" queryType="attribute" includeProjects="CryptoDB,PlasmoDB, ApiDB">
    
      <defaultTestParamValues includeProjects="PlasmoDB">
         <paramValue name="source_id">BC.458098</paramValue>
         <paramValue name="project_id">PlasmoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="CryptoDB">
         <paramValue name="source_id">AY168847</paramValue>
         <paramValue name="project_id">CryptoDB</paramValue>
      </defaultTestParamValues>

      <testRowCountSql>
           select count(*) from dots.isolatesource
      </testRowCountSql>

       <sqlQuery name="Sequence">
            <column name="project_id"/>
            <column name="source_id"/> 
            <column name="organism" /> 
            <column name="strain" /> 
            <column name="specific_host" /> 
            <column name="description"/> 
            <column name="isolation_source" /> 
            <column name="pcr_primers"/> 
            <column name="country"/> 
            <column name="query_name"/> 
            <column name="target_name"/> 
            <column name="data_type"/> 
            <column name="min_subject_start"/> 
            <column name="max_subject_end"/> 
            <column name="length"/> 
            <column name="note"/> 
            <column name="sequence"/> 
            <column name="product"/> 
            <column name="collected_by"/> 
            <column name="is_reference"/> 
            <column name="map" /> 
            <sql>
               SELECT iso.source_id, 
                      iso.organism,
                      iso.strain,
                      iso.specific_host,
                      iso.isolation_source,
                      iso.description,
                      iso.pcr_primers,
                      iso.country,
                      iso.query_name, 
                      iso.target_name, 
                      iso.min_subject_start,
                      iso.max_subject_end,
                      iso.note,
                      iso.collected_by,
                      iso.product,
                      decode(iso.is_reference, 0, 'No', 1, 'Yes', 'No') is_reference,
                      iso.map, 
                      iso.data_type,
                      length(iso.sequence) length,
                      iso.sequence,
                      '@PROJECT_ID@' as project_id
                FROM   ApiDB.IsolateAttributes iso
           </sql>
      </sqlQuery>

      <sqlQuery name="ProteinSequence" includeProjects="CryptoDB,ApiDB">
            <column name="project_id"/>
            <column name="source_id"/> 
            <column name="gene_description"/>
            <column name="protein_sequence"/>
            <sql>
            select ia.source_id, p.gene_description,
                   p.protein_sequence, '@PROJECT_ID@' as project_id
            from  (SELECT etn.source_id, 
                      tas.description as gene_description,
                      tas.sequence as protein_sequence
               FROM   DoTS.TranslatedAAFeature taf,
                      DoTS.TranslatedAASequence tas,
                      DoTS.Transcript trp, 
                      DoTS.IsolateFeature gf,
                      DoTS.ExternalNASequence etn,
                      SRes.ExternalDatabaseRelease edr,
                      SRes.ExternalDatabase edb
               WHERE  edr.external_database_id = edb.external_database_id
                  AND edr.external_database_release_id = etn.external_database_release_id
                  AND edb.name = 'Isolates Data'
                  AND trp.na_feature_id = taf.na_feature_id
                  AND tas.aa_sequence_id = taf.aa_sequence_id
                  AND trp.parent_id = gf.na_feature_id
                  AND etn.na_sequence_id = gf.na_sequence_id
                  ) p, apidb.isolateattributes ia
            where ia.source_id = p.source_id (+)
           </sql>
      </sqlQuery>

      <sqlQuery name="Reference" includeProjects="CryptoDB,ApiDB">
            <column name="project_id"/>
            <column name="source_id"/> 
            <column name="title"/>
            <column name="author"/>
            <column name="year"/>
            <column name="journal_or_book_name"/>
            <column name="journal_vol"/>
            <column name="journal_page"/>
            <sql>
            select ia.source_id, '@PROJECT_ID@' as project_id,
                   r.title, r.author, r.year, r.journal_or_book_name, 
                   r.journal_vol, r.journal_page
            from ( SELECT rownum as row_number, 
                      etn.source_id, 
                      ref.title,
                      ref.author,
                      ref.year,
                      ref.journal_or_book_name,
                      ref.journal_vol,
                      ref.journal_page
               FROM   DoTS.NASequence etn,
                      DoTS.NASequenceRef nasr,
                      SRES.Reference ref,
                      SRes.ExternalDatabaseRelease edr,
                      SRes.ExternalDatabase edb
               WHERE  edr.external_database_id = edb.external_database_id
                  AND edr.external_database_release_id = etn.external_database_release_id
                  AND edb.name = 'Isolates Data'
                  AND edr.version = '2007-12-12'
                  AND nasr.reference_id = ref.reference_id
                  AND etn.na_sequence_id = nasr.na_sequence_id
                  and rownum = 1
               ORDER BY ref.reference_id asc
               ) r, apidb.isolateattributes ia
            where ia.source_id = r.source_id (+)
           </sql>
      </sqlQuery>

      <sqlQuery name="GeneOverlap" includeProjects="CryptoDB,ApiDB">
            <column name="project_id"/>
            <column name="source_id"/> 
            <column name="gene"/>
            <column name="gene_product"/>
            <sql>
            <![CDATA[
            select ia.source_id, '@PROJECT_ID@' as project_id,
                   gene.gene_product, gene.gene
             from (select ia.source_id, 
                          ga.product as gene_product, ga.source_id as gene
                   from apidb.geneattributes ga, apidb.isolateattributes ia
                   where ia.target_name = ga.sequence_id
                   and ga.start_min <= ia.max_subject_end
                   and ga.end_max >= ia.min_subject_start
                  ) gene, apidb.isolateattributes ia
             where ia.source_id = gene.source_id (+)
            ]]>
           </sql>
      </sqlQuery>

    </querySet>
</wdkModel>
