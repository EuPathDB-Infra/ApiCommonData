<wdkModel>
    <querySet name="SnpTables" queryType="table" includeProjects="ToxoDB,PlasmoDB,CryptoDB">


      <defaultTestParamValues includeProjects="PlasmoDB">
         <paramValue name="source_id"></paramValue>
         <paramValue name="project_id">PlasmoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="ToxoDB">
         <paramValue name="source_id">SNP_VI_485196</paramValue>
         <paramValue name="project_id">ToxoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="CryptoDB">
         <paramValue name="source_id"></paramValue>
         <paramValue name="project_id">CryptoDB</paramValue>
      </defaultTestParamValues>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Strains -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Strains" includeProjects="ToxoDB,PlasmoDB,CryptoDB" 
              isCacheable="false">
            <paramRef ref="recordParams.source_id"/>
            <paramRef ref="recordParams.project_id"/>
            <column name="source_id" />
            <column name="project_id" />
            <column name="strain"/>
            <column name="allele"/>
            <column name="allele_gene_strand"/>
            <column name="phenotype"/>
            <column name="product"/>
            <sql>
            <![CDATA[
       SELECT snp.source_id, '@project_id@' AS project_id,
              CASE
                  WHEN var.strain = 'iowa_II' THEN 'IOWA II'
                  WHEN var.strain = 'md' THEN 'MD'
                  WHEN var.strain = 'tu114' THEN 'TU114'
                  ELSE var.strain
                 END as strain,
                 var.allele,
                 CASE WHEN gene_info.is_reversed = 1 THEN apidb.reverse_complement(var.allele) 
                      WHEN gene_info.source_id is null THEN ''
                      ELSE var.allele END as allele_gene_strand,
                 var.phenotype,
                 var.product
       FROM  dots.SnpFeature snp,
             dots.SeqVariation var,
             (select gene.source_id, gene_loc.is_reversed, gene.na_feature_id
               FROM dots.GeneFeature gene, dots.NaLocation gene_loc
               WHERE gene.na_feature_id = gene_loc.na_feature_id) gene_info
       WHERE snp.source_id = $$source_id$$
        AND  var.parent_id = snp.na_feature_id
        AND gene_info.na_feature_id(+) = snp.parent_id
        ORDER BY var.strain
             ]]>
           </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Providers -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Providers" includeProjects="ToxoDB,PlasmoDB,CryptoDB" 
               isCacheable="false">
            <paramRef ref="recordParams.source_id"/>
            <paramRef ref="recordParams.project_id"/>
            <column name="source_id" />
            <column name="project_id" />
            <column name="source_id_link"/>
            <column name="name"/>
            <sqlParamValue name="name" includeProjects="PlasmoDB">
                DECODE(ed.name,'Broad SNPs','Broad','Sanger falciparum SNPs','WTSI','Su SNPs','NIH', 'PlasmoDB combined SNPs', 'PlasmoDB','Sanger reichenowi SNPs','WTSI')
            </sqlParamValue>
            <sqlParamValue name="name" includeProjects="ToxoDB,CryptoDB">
                      ed.name
            </sqlParamValue>
            <sqlParamValue name="filter" includeProjects="PlasmoDB">
                and sb.source_id != $$source_id$$
            </sqlParamValue>
            <sqlParamValue name="filter" includeProjects="ToxoDB,CryptoDB">
            </sqlParamValue>

            <sql>
            <![CDATA[
               SELECT sa.source_id, '@project_id@' AS project_id,
               sb.source_id as source_id_link,
               &&name&& as name
               FROM  dots.SnpFeature sa, dots.snpfeature sb, dots.nalocation la, dots.nalocation lb,
                     sres.externaldatabase ed, sres.externaldatabaserelease edr
               WHERE sa.source_id = $$source_id$$
                AND sa.na_feature_id = la.na_feature_id
                and sb.na_feature_id = lb.na_feature_id
                and sa.na_sequence_id = sb.na_sequence_id
                and la.start_min = lb.start_min
                &&filter&&
                and sb.external_database_release_id = edr.external_database_release_id
                and edr.external_database_id = ed.external_database_id
             ]]>
           </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Isolates -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="isolates" includeProjects="PlasmoDB" 
              isCacheable="false">
            <paramRef ref="recordParams.source_id"/>
            <paramRef ref="recordParams.project_id"/>
            <column name="source_id" />
            <column name="project_id" />
            <column name="isolate_id"/>
            <column name="assay_type"/>
            <column name="strain"/>
            <column name="country"/>
            <column name="allele"/>
            <sql>
            <![CDATA[
              select isnp.snp_source_id, AS source_id, '@project_id@' AS project_id,
              atr.SOURCE_ID as isolate_id, atr.strain as strain, atr.country, 
              isnp.allele, atr.DATA_TYPE as assay_type
              from apidb.isolateattributes atr, apidb.isolatesnps isnp
              where isnp.snp_source_id = $$source_id$$
              and isnp.is_source_id = atr.SOURCE_ID
              order by atr.country,atr.strain
            ]]>
           </sql>
        </sqlQuery>


    </querySet>
</wdkModel>
