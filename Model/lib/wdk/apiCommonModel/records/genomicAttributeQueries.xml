<wdkModel>

  <!-- notes

   - attribute queries on the component sites will now need projectId param so the sql can be
     shared with the portal

   - crypto and api have to adjust to a new set name (old is 'ContigAttributes')

  -->

    <querySet name="SequenceAttributes">

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- BFMV -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <sqlQuery name="Bfmv" isCacheable="false">
            <paramRef ref="recordParams.primaryKey"/>
            <paramRef ref="recordParams.projectId"/>

            <column name="sequence"
                    sortingTable="apidb.SequenceAttributes" lowerCase="true"
                    includeProjects="CryptoDB"/>

            <column name="chromosome" includeProjects="PlasmoDB"
                    sortingTable="apidb.SequenceAttributes" lowerCase="true"/>

            <column name="source_id" 
                    sortingTable="apidb.SequenceAttributes" lowerCase="true"/>

            <column name="a_count" 
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="c_count" 
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="g_count" 
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="t_count" 
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="other_count"
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="length" 
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="secondary_identifier" includeProjects="CryptoDB" />

            <column name="chromosomemappingtext" includeProjects="CryptoDB" />

            <column name="at_percent" excludeProjects="CryptoDB"
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="organism" 
                    sortingTable="apidb.SequenceAttributes" lowerCase="true"/>

            <column name="formatted_organism" includeProjects="ApiDB,PlasmoDB"
                    sortingTable="apidb.SequenceAttributes"
                    sortingColumn="organism" lowerCase="true"/>

            <column name="sequence_description" includeProjects="ApiDB,PlasmoDB"
                    sortingTable="apidb.SequenceAttributes"
                    lowerCase="true"/>

            <column name="genbank_accession" includeProjects="ApiDB,PlasmoDB"
                    sortingTable="apidb.SequenceAttributes"
                    lowerCase="true"/>

            <column name="externalDbName" includeProjects="CryptoDB,ToxoDB,GiardiaDB"
                    sortingColumn="database_name"
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="externalDbVersion" includeProjects="CryptoDB,ToxoDB,GiardiaDB"
                     sortingColumn="database_version"
                    sortingTable="apidb.SequenceAttributes"/>

            <column name="cyc_db" includeProjects="CryptoDB" />

            <sql includeProjects="ApiDB">
              <![CDATA[
                SELECT bfmv.source_id, bfmv.project_id,bfmv.a_count, bfmv.c_count, 
                    bfmv.g_count, bfmv.t_count, bfmv.other_count,
                    bfmv.length, bfmv.at_percent, bfmv.organism,
                    '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.' ||
                    REGEXP_REPLACE(SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ')), '[[:space:]]+',
                                   chr(38) || 'nbsp;') || '</i>'
                      AS formatted_organism,
                    bfmv.ncbi_tax_id, bfmv.sequence_description,
                    bfmv.genbank_accession, bfmv.database_name,
                    bfmv.database_version
              FROM apidb.SequenceAttributes bfmv
              WHERE bfmv.source_id = $$primaryKey$$
                AND UPPER(bfmv.project_id) = UPPER($$projectId$$)
             ]]>
           </sql>

           <sql includeProjects="CryptoDB"> 
            <![CDATA[           
            SELECT enas.sequence, 
            enas.source_id, $$projectId$$ as project_id, 
            enas.source_id as secondary_identifier, 
            DECODE(src.chromosome, NULL, 'This contig has not been mapped to a chromosome.', 
            'This contig has been mapped to chromosome ' || src.chromosome || '.') as chromosomemappingtext, 
            enas.a_count, 
            enas.c_count, 
            enas.g_count, 
            enas.t_count, 
            (length - (a_count + c_count + g_count + t_count)) as other_count, 
            enas.length, 
            '<i>' || SUBSTR(tn.name, 1, 1) || '.&nbsp;' || 
                 SUBSTR(tn.name, INSTR(tn.name, ' ', 1, 1) +1) || '</i>' as organism,
            DECODE(
              substr(
                tn.name, 
                instr(ltrim(tn.name), ' ', 1, 1)+1, 
                instr(ltrim(tn.name)||' ', ' ', 1, 2) - instr(tn.name, ' ', 1, 1) -1
              ),
              'parvum', 'cparvum', 'hominis') as cyc_db,
            ed.name as externalDbname,
            edr.version AS externalDbVersion
            FROM dots.nasequence enas, 
            dots.source src, 
            sres.taxonname tn,
            sres.externaldatabaserelease edr,
            sres.externaldatabase ed
            WHERE enas.na_sequence_id = src.na_sequence_id (+)
            AND enas.taxon_id = tn.taxon_id
            AND tn.name_class = 'scientific name'
            AND enas.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND enas.source_id = $$primaryKey$$
             ]]>
           </sql>

            <sql includeProjects="TrichDB">
            <![CDATA[
                SELECT bfmv.source_id, bfmv.project_id, bfmv.a_count, bfmv.c_count,
                    bfmv.g_count, bfmv.t_count, bfmv.other_count,
                    bfmv.length, bfmv.at_percent, bfmv.organism,
                    '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.' ||
                    REGEXP_REPLACE(SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ')), '[[:space:]]+',
                                   chr(38) || 'nbsp;') || '</i>'
                      AS formatted_organism,
                    bfmv.ncbi_tax_id, bfmv.sequence_description,
                    bfmv.genbank_accession, bfmv.database_name,
                    bfmv.database_version
              FROM apidb.SequenceAttributes bfmv
              WHERE bfmv.source_id = $$primaryKey$$
                AND UPPER(bfmv.project_id) = UPPER($$projectId$$)
             ]]>
           </sql>

            <sql includeProjects="PlasmoDB">
            <![CDATA[
                SELECT bfmv.source_id, bfmv.project_id, bfmv.a_count, bfmv.c_count,
                    bfmv.g_count, bfmv.t_count, bfmv.other_count,
                    bfmv.length, bfmv.at_percent, bfmv.organism,
                    '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.' ||
                    REGEXP_REPLACE(SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ')), '[[:space:]]+',
                                   chr(38) || 'nbsp;') || '</i>'
                      AS formatted_organism,
                    bfmv.ncbi_tax_id, bfmv.sequence_description,
                    bfmv.genbank_accession, bfmv.database_name,
                    bfmv.database_version, bfmv.chromosome
              FROM apidb.SequenceAttributes bfmv
              WHERE bfmv.source_id = $$primaryKey$$
                AND UPPER(bfmv.project_id) = UPPER($$projectId$$)
             ]]>
           </sql>

           <sql includeProjects="ToxoDB,GiardiaDB">
            <![CDATA[
                SELECT bfmv.source_id, bfmv.project_id, bfmv.a_count,
                       bfmv.c_count, bfmv.g_count, bfmv.t_count,
                       bfmv.other_count, bfmv.length, bfmv.at_percent,
                       bfmv.organism, bfmv.database_name AS externalDbName,
                       bfmv.database_version AS externalDbVersion
                FROM apidb.SequenceAttributes bfmv
                WHERE bfmv.source_id = $$primaryKey$$
                AND UPPER(bfmv.project_id) = UPPER($$projectId$$)
             ]]>
           </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Attribution -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Attribution" isCacheable="false" includeProjects="PlasmoDB">
            <paramRef ref="recordParams.primaryKey"/>
            <paramRef ref="recordParams.projectId"/>
            <column name="short_name"/>
            <sql>
            <![CDATA[
                SELECT ens.source_id, $$projectId$$ as project_id,
                       decode(ed.name,
                              'Jane Carlton P. vivax chromosomes', 'TIGR',
                              'Sanger P. reichenowi contigs', 'Sanger',
                              'Jane Carlton P. yoelii chromosomes', 'TIGR',
                              'P. berghei genome', 'Sanger',
                              'Sanger P. gallinaceum contigs', 'Sanger',
                              'Sanger P. falciparum chromosomes', 'Sanger',
                              'Sanger P. knowlesi contigs', 'Sanger',
                              'P. chabaudi genome', 'Sanger',
                              'P. falciparum mitochondrial genome', 'LSHTM',
                              'P. falciparum plastid-like DNA', 'NIMR',
                              ed.name) AS short_name
                FROM dots.NaSequence ens,
                     sres.ExternalDatabaseRelease edr,
                     sres.ExternalDatabase ed
                WHERE ens.source_id = $$primaryKey$$
                  AND ens.external_database_release_id
                      = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
             ]]>
           </sql>

        </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF sequence-->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SequenceGffSequence" isCacheable="false" excludeProjects="ApiDB">
        <paramRef ref="recordParams.primaryKey"/>
        <paramRef ref="recordParams.projectId"/>
        <column name="gff_sequence"/>
        <sql>
            select ns.source_id, $$projectId$$ AS project_id,
                   ns.sequence as gff_sequence
            from apidb.GenomicSequence gs,
                 dots.NaSequence ns
            where gs.source_id = $$primaryKey$$
              and ns.na_sequence_id = gs.na_sequence_id
        </sql>
    </sqlQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF attributes (other than sequence) -->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SequenceGffAttrs" isCacheable="false" excludeProjects="ApiDB">
        <paramRef ref="recordParams.primaryKey"/>
        <paramRef ref="recordParams.projectId"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_web_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_molecule_type"/>
        <column name="gff_attr_organism_name"/>
        <column name="gff_attr_translation_table"/>
        <column name="gff_attr_topology"/>
        <column name="gff_attr_localization"/>
        <sql>
            select ns.source_id, $$projectId$$ AS project_id,
                   'apidb|' || ns.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'supercontig' as gff_type,
                   1 as gff_fstart,
                   ns.length as gff_fend,
                   '.' as gff_score,
                   '+' as gff_strand,
                   '.' as gff_phase,
                  'apidb|' || ns.source_id as gff_attr_id,
                   ns.source_id as gff_attr_web_id,
                   ns.source_id as gff_attr_name,
                   ns.description as gff_attr_description,
                   ns.length as gff_attr_size,
                   'dsDNA' as gff_attr_molecule_type,
                   SUBSTR(tn.name, 1, INSTR(tn.name || '  ', ' ', 1, 2) - 1) as gff_attr_organism_name,
                   11 as gff_attr_translation_table,
                   'linear' as gff_attr_topology,
                   'nuclear' as gff_attr_localization
            from apidb.GenomicSequence gs,
                 dots.NaSequence ns,
                 sres.externaldatabase ed,
                 sres.externaldatabaserelease edr,
                 sres.TaxonName tn
            where gs.source_id = $$primaryKey$$
              and ns.na_sequence_id = gs.na_sequence_id
              and ns.external_database_release_id = edr.external_database_release_id
              and edr.external_database_id = ed.external_database_id
              and ns.taxon_id = tn.taxon_id
              and tn.name_class = 'scientific name'
        </sql>
    </sqlQuery>


  </querySet>

</wdkModel>
