<wdkModel>
    <querySet name="GeneAttributes">

     <!-- notes

       - all projects need a gene alias query (or, we have to break that out of the 
         <recordClass> element

     -->

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene alias -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="GeneAlias" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="new_source_id"/>
            <column name="new_project_id"/>
            <sql includeProjects="PlasmoDB">
                SELECT gene as new_source_id, '@project_id@' AS new_project_id,
                       alias as source_id, '@project_id@' AS project_id
                FROM apidb.GeneAlias
            </sql>
            <sql excludeProjects="PlasmoDB">
                SELECT source_id as new_source_id, '@project_id@' AS new_project_id,
                       source_id as source_id, '@project_id@' AS project_id
                FROM apidb.GeneAttributes
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- TrackNewAnnotation -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


        <sqlQuery name="TrackNewAnnotation" isCacheable="false">
            <column name="project_id"/>
            <column name="source_id" sortingTable="apidb.trackNewAnnotation"/>
            <column name="annotation_status" sortingTable="apidb.trackNewAnnotation"/>
            <column name="new_product" sortingTable="apidb.trackNewAnnotation"/>
            <column name="new_go" sortingTable="apidb.trackNewAnnotation"/>
            <column name="new_ec" sortingTable="apidb.trackNewAnnotation"/>
            <column name="new_protein" sortingTable="apidb.trackNewAnnotation"/>
            <column name="new_product_string" sortingTable="apidb.trackNewAnnotation" sortingColumn="product"/>
            <sql>
               select '@project_id@' as project_id, tna.source_id, tna.status as annotation_status, tna.new_product, tna.new_go, tna.new_ec, tna.new_protein, tna.product as new_product_string
               from Apidb.TRACKNEWANNOTATION tna
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!--  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Bfmv" isCacheable="false">
            <column name="project_id"/>
            <column name="source_id" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="gene_type" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="product" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="start_min" sortingTable="apidb.geneattributes"/>
            <column name="end_max" sortingTable="apidb.geneattributes"/>
            <column name="start_min_text" sortingTable="apidb.geneattributes" sortingColumn="start_min"/>
            <column name="end_max_text" sortingTable="apidb.geneattributes" sortingColumn="end_max"/>
            <column name="transcript_length" sortingTable="apidb.geneattributes"/>
            <column name="cds_length" sortingTable="apidb.geneattributes"/>
            <column name="protein_length" sortingTable="apidb.geneattributes"/>
            <column name="context_start" sortingTable="apidb.geneattributes"/>
            <column name="context_end" sortingTable="apidb.geneattributes"/>
            <column name="strand_plus_minus" sortingTable="apidb.geneattributes" sortingColumn="strand"/>
            <column name="sequence_id" sortingTable="apidb.geneattributes" lowerCase="true"/>
            <column name="cyc_db" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="cyc_gene_id" sortingTable="apidb.geneattributes" sortingColumn="source_id"/>
            <column name="tm_count" sortingTable="apidb.geneattributes"/>
            <column name="so_id" sortingTable="apidb.geneattributes"/>
            <column name="so_term_name" sortingTable="apidb.geneattributes"/>
            <column name="so_term_definition" sortingTable="apidb.geneattributes"/>
            <column name="ontology_name" sortingTable="apidb.geneattributes"/>
            <column name="so_version" sortingTable="apidb.geneattributes"/>
            <column name="anticodon" sortingTable="apidb.geneattributes"/>
            <column name="molecular_weight" sortingTable="apidb.geneattributes"/>
            <column name="isoelectric_point" sortingTable="apidb.geneattributes"/>
            <column name="min_molecular_weight" sortingTable="apidb.geneattributes"/>
            <column name="max_molecular_weight" sortingTable="apidb.geneattributes"/>
            <column name="hydropathicity_gravy_score" sortingTable="apidb.geneattributes"/>
            <column name="aromaticity_score" sortingTable="apidb.geneattributes"/>
            <column name="external_db_name" sortingTable="apidb.geneattributes"/>
            <column name="external_db_version" sortingTable="apidb.geneattributes"/>
            <column name="ncbi_tax_id" sortingTable="apidb.geneattributes"/>
            <column name="species" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="genus_species" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="organism_full" sortingTable="apidb.geneattributes" sortingColumn="organism" excludeProjects="CryptoDB"/>
            <column name="organism" sortingTable="apidb.geneattributes" sortingColumn="organism"/>
            <column name="exon_count" sortingTable="apidb.geneattributes"/>
            <column name="strand" sortingTable="apidb.geneattributes"/>
            <column name="ec_numbers_string" sortingTable="apidb.geneattributes" sortingColumn="ec_numbers"/>
            <column name="total_snps_all_strains" sortingTable="apidb.geneattributes" sortingColumn="total_snps"/>
            <column name="nonsynonymous_snps_all_strains" sortingTable="apidb.geneattributes" sortingColumn="nonsynonymous_snps"/>
            <column name="synonymous_snps_all_strains" sortingTable="apidb.geneattributes" sortingColumn="synonymous_snps"/>
            <column name="nonsyn_syn_ratio_all_strains" sortingTable="apidb.geneattributes" sortingColumn="nonsyn_syn_ratio"/>
            <column name="signalp_scores" sortingTable="apidb.geneattributes"/>
            <column name="signalp_peptide" sortingTable="apidb.geneattributes"/>
            <column name="ann_go_component" sortingTable="apidb.geneattributes" sortingColumn="annotated_go_component" excludeProjects="GiardiaDB"/>
            <column name="ann_go_process" sortingTable="apidb.geneattributes" sortingColumn="annotated_go_process" excludeProjects="GiardiaDB"/>
            <column name="ann_go_function" sortingTable="apidb.geneattributes" sortingColumn="annotated_go_function" excludeProjects="GiardiaDB"/>
            <column name="pred_go_component" sortingTable="apidb.geneattributes" sortingColumn="predicted_go_component"/>
            <column name="pred_go_process" sortingTable="apidb.geneattributes" sortingColumn="predicted_go_process"/>
            <column name="pred_go_function" sortingTable="apidb.geneattributes" sortingColumn="predicted_go_function"/>
            <column name="genedb_organism" sortingTable="apidb.geneattributes" includeProjects="PlasmoDB"/>
            <column name="der_min_level" sortingTable="apidb.geneattributes" sortingColumn="derisi_min_level" includeProjects="PlasmoDB"/>
            <column name="der_max_level" sortingTable="apidb.geneattributes" sortingColumn="derisi_max_level" includeProjects="PlasmoDB"/>
            <column name="der_min_timing" sortingTable="apidb.geneattributes" sortingColumn="derisi_min_timing" includeProjects="PlasmoDB"/>
            <column name="der_max_timing" sortingTable="apidb.geneattributes" sortingColumn="derisi_max_timing" includeProjects="PlasmoDB"/>
            <column name="der_max_pct" sortingTable="apidb.geneattributes" sortingColumn="derisi_max_pct" includeProjects="PlasmoDB"/>
            <column name="der_max_fold_induction" sortingTable="apidb.geneattributes" sortingColumn="derisi_max_fold_induction" includeProjects="PlasmoDB"/>
            <column name="winz_min_level" sortingTable="apidb.geneattributes" sortingColumn="winzeler_min_level" includeProjects="PlasmoDB"/>
            <column name="winz_max_level" sortingTable="apidb.geneattributes" sortingColumn="winzeler_max_level" includeProjects="PlasmoDB"/>
            <column name="winz_min_timing" sortingTable="apidb.geneattributes" sortingColumn="winzeler_min_timing" includeProjects="PlasmoDB"/>
            <column name="winz_max_timing" sortingTable="apidb.geneattributes" sortingColumn="winzeler_max_timing" includeProjects="PlasmoDB"/>
            <column name="winz_max_pct" sortingTable="apidb.geneattributes" sortingColumn="winzeler_max_pct" includeProjects="PlasmoDB"/>

            <column name="pru" sortingTable="apidb.GeneAttributes" includeProjects="ToxoDB"/>
            <column name="veg" sortingTable="apidb.GeneAttributes" includeProjects="ToxoDB"/>
            <column name="rh"  sortingTable="apidb.GeneAttributes" includeProjects="ToxoDB"/>
            <column name="rh_no_glucose" sortingTable="apidb.GeneAttributes" includeProjects="ToxoDB"/>
            <column name="rh_high_glucose" sortingTable="apidb.GeneAttributes" includeProjects="ToxoDB"/>
            <column name="gene_id" sortingTable="apidb.GeneAttributes" includeProjects="ToxoDB"/>

            <column name="is_deprecated" sortingTable="apidb.GeneAttributes" includeProjects="GiardiaDB"/>

             <sqlParamValue name="toxo_expression" includeProjects="ToxoDB">
                <![CDATA[
                   bfmv.pru, bfmv.veg, bfmv.rh, bfmv.rh_no_glucose,
                   bfmv.rh_high_glucose, bfmv.gene_id,
                ]]>
            </sqlParamValue>
            <sqlParamValue name="toxo_expression" excludeProjects="ToxoDB">
                <![CDATA[
                ]]>
            </sqlParamValue>

            <sqlParamValue name="is_deprecated" includeProjects="GiardiaDB">
                <![CDATA[
                DECODE(bfmv.is_deprecated, 0, 'No', 1, 'Yes') AS is_deprecated,
                ]]>
            </sqlParamValue>
            <sqlParamValue name="is_deprecated" excludeProjects="GiardiaDB">
                <![CDATA[
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="PlasmoDB,ApiDB">
                <![CDATA[
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="ToxoDB">
                <![CDATA[
                   'TOXO'
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="CryptoDB,GiardiaDB,TrichDB">
                <![CDATA[
                   DECODE(
                   substr(
                     bfmv.organism, 
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                ]]>
            </sqlParamValue>
            <sqlParamValue name="genedb_organism" includeProjects="PlasmoDB">
                <![CDATA[
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'malaria',
                          'Plasmodium berghei strain ANKA', 'pberghei',
                          'Plasmodium chabaudi chabaudi', 'pchabaudi',
                          'Plasmodium knowlesi strain H', 'pknowlesi',
                          null) as genedb_organism,
                ]]>
            </sqlParamValue>
            <sqlParamValue name="genedb_organism" excludeProjects="PlasmoDB">
                <![CDATA[
                ]]>
            </sqlParamValue>

            <sql>
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product, bfmv.project_id,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, 
                   bfmv.sequence_id, bfmv.organism as organism_full, bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version,
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1, INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1) AS genus_species,
                   '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                      SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) || '</i>' as organism,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - INSTR(bfmv.organism, ' ') - 1) AS species,
                   &&cyc_db&& AS cyc_db,
                   &&genedb_organism&&
                   &&toxo_expression&&
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.strand,bfmv.ec_numbers as ec_numbers_string,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   &&is_deprecated&& 
                   bfmv.predicted_go_process as pred_go_process,
                   bfmv.derisi_max_level as der_max_level,
                   bfmv.derisi_min_level as der_min_level,
                   bfmv.derisi_min_timing as der_min_timing,
                   bfmv.derisi_max_timing as der_max_timing,
                   to_char(bfmv.derisi_max_fold_induction, '999.99') as der_max_fold_induction,
                   TO_CHAR(bfmv.derisi_max_pct * 100, '99.9') as der_max_pct,
                   bfmv.winzeler_max_level as winz_max_level,
                   bfmv.winzeler_min_level as winz_min_level,
                   bfmv.winzeler_min_timing as winz_min_timing,
                   bfmv.winzeler_max_timing as winz_max_timing,
                   TO_CHAR(bfmv.winzeler_max_pct * 100, '99.9') as winz_max_pct,
                   bfmv.total_snps as total_snps_all_strains,
                   bfmv.nonsynonymous_snps as nonsynonymous_snps_all_strains,
                   bfmv.nonsyn_syn_ratio as nonsyn_syn_ratio_all_strains,
                   bfmv.synonymous_snps as synonymous_snps_all_strains,
                   bfmv.signalp_scores,bfmv.signalp_peptide
            FROM apidb.GeneAttributes bfmv
            ]]>
            </sql>

<!-- note that moved following up into sqlParamValues .. delete when all works

            <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product,bfmv.project_id,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, 
                   bfmv.sequence_id, bfmv.organism as organism_full, bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version,
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1)
                     AS genus_species,
                   REPLACE(bfmv.organism,'Toxoplasma','T.') as organism,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2)
                          - INSTR(bfmv.organism, ' ') - 1) AS species,
                   'TOXO' AS cyc_db,
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.strand,bfmv.ec_numbers as ec_numbers_string,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   bfmv.predicted_go_process as pred_go_process,
                   bfmv.pru, bfmv.veg, bfmv.rh, bfmv.rh_no_glucose,
                   bfmv.rh_high_glucose, bfmv.gene_id
            FROM apidb.GeneAttributes bfmv
               WHERE bfmv.source_id=$$primaryKey$$
                 AND bfmv.project_id=$$projectId$$
            ]]>
            </sql>
            <sql includeProjects="CryptoDB,GiardiaDB,TrichDB">
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product,bfmv.project_id,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, bfmv.strand,
                   bfmv.sequence_id,
                   '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                       SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) || '</i>' as organism,
                   bfmv.organism  as organism_full, 
                   bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version, 
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1, INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1) AS genus_species,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - INSTR(bfmv.organism, ' ') - 1) AS species,
                   DECODE(
                   substr(
                     bfmv.organism, 
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                   AS cyc_db,
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.ec_numbers as ec_numbers_string,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   &&is_deprecated&&
                   bfmv.predicted_go_process as pred_go_process
            FROM apidb.GeneAttributes bfmv
            WHERE bfmv.source_id=$$primaryKey$$
                 AND LOWER(bfmv.project_id)=LOWER($$projectId$$)
            ]]>
            </sql>
            <sql includeProjects="ApiDB">
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product, bfmv.project_id,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, 
                   bfmv.sequence_id, 
                   bfmv.organism  as organism_full, 
                   bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version,
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1, INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1) AS genus_species,
                   '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                       SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) || '</i>' as organism,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - INSTR(bfmv.organism, ' ') - 1) AS species,
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                   AS cyc_db,
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.strand,bfmv.ec_numbers as ec_numbers_string,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   bfmv.predicted_go_process as pred_go_process,
                   bfmv.derisi_max_level as der_max_level,
                   bfmv.derisi_min_level as der_min_level,
                   bfmv.derisi_min_timing as der_min_timing,
                   bfmv.derisi_max_timing as der_max_timing,
                   bfmv.derisi_max_pct as der_max_pct,
                   bfmv.winzeler_max_level as winz_max_level,
                   bfmv.winzeler_min_level as winz_min_level,
                   bfmv.winzeler_min_timing as winz_min_timing,
                   bfmv.winzeler_max_timing as winz_max_timing,
                   bfmv.winzeler_max_pct as winz_max_pct
            FROM apidb.GeneAttributes bfmv
               WHERE bfmv.source_id=$$primaryKey$$
                 AND LOWER(bfmv.project_id)=LOWER($$projectId$$)
            ]]>
            </sql>
-->

        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- protein sequence  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Chromosome" displayName="Chromosome" isCacheable="false" includeProjects="CryptoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="chromosome"/>
            <sql>
            <![CDATA[SELECT g.source_id,
                            src.chromosome as chromosome,
                            '@project_id@' as project_id
                     FROM dots.genefeature g,
                          dots.externalnasequence enas,
                          dots.source src
                     WHERE g.na_sequence_id= enas.na_sequence_id
                     AND  enas.na_sequence_id = src.na_sequence_id
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- protein sequence  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="NewAnnotationProteinSequence" displayName="New Annotation Protein Sequence" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="workshop_protein_sequence"/>
            <sql>
            <![CDATA[
            SELECT gf.source_id,
                   tas.sequence AS workshop_protein_sequence,'@project_id@' as project_id
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas,
                 apidb.TRACKNEWANNOTATION tna
            WHERE tna.new_source_id = gf.source_id
              AND t.parent_id = gf.na_feature_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = tas.aa_sequence_id
            ]]>
            </sql>
        </sqlQuery>




        <sqlQuery name="ProteinSequence" displayName="Protein Sequence" isCacheable="false" excludeProjects="ApiDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_sequence"/>
            <sql>
            <![CDATA[
            SELECT gf.source_id, '@project_id@' as project_id,
                   tas.sequence AS protein_sequence
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas
            WHERE t.parent_id = gf.na_feature_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = tas.aa_sequence_id
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="ProteinSequence" displayName="Protein Sequence" isCacheable="false" includeProjects="ApiDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_sequence"/>
            <sql>
            <![CDATA[
                  SELECT g.source_id, '@project_id@' as project_id, g.sequence as protein_sequence 
                  FROM dots.TranslatedAASequence g, 
                       sres.SequenceOntology s, 
                       sres.ExternalDatabaseRelease extr, 
                       sres.ExternalDatabase ext
                  WHERE g.sequence_ontology_id = s.sequence_ontology_id
                    AND g.external_database_release_id=extr.external_database_release_id
                    AND s.term_name = 'protein'
                    AND extr.external_database_id=ext.external_database_id
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- phylogenetic trees -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <sqlQuery name="PhylogeneticTree" isCacheable="false"
                       displayName="Phylogenetic Tree" includeProjects="GiardiaDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="phyTreeId"/>
            <sql>
            <![CDATA[
              select tree.source_id as phyTreeId,tree.source_id, '@project_id@' as project_id
              from apidb.phylogenetictree tree
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- transcript sequence -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


        <sqlQuery name="NewAnnotationTranscriptSequence" isCacheable="false"
                       displayName="RNA Sequence">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="workshop_transcript_sequence"/>
            <sql>
            <![CDATA[
              select gf.source_id, s.sequence as workshop_transcript_sequence,'@project_id@' as project_id
              from dots.genefeature gf, dots.transcript t, dots.splicednasequence s, apidb.TRACKNEWANNOTATION tna
              where tna.new_source_id = gf.source_id
                and t.parent_id = gf.na_feature_id
                and s.na_sequence_id = t.na_sequence_id
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="TranscriptSequence" isCacheable="false"  excludeProjects="ApiDB" 
                       displayName="RNA Sequence">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="transcript_sequence"/>
            <sql>
            <![CDATA[
              select gf.source_id, s.sequence as transcript_sequence,'@project_id@' as project_id
              from dots.genefeature gf, dots.transcript t, dots.splicednasequence s
              where t.parent_id = gf.na_feature_id
                and s.na_sequence_id = t.na_sequence_id
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="TranscriptSequence" isCacheable="false"  includeProjects="ApiDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="transcript_sequence"/>
            <sql>
                 (SELECT g.source_id, ext.name as project_id, g.sequence as transcript_sequence 
                  from dots.SplicedNaSequence g, 
                       sres.SequenceOntology s, 
                       sres.ExternalDatabaseRelease extr, 
                       sres.ExternalDatabase ext
                  WHERE g.sequence_ontology_id = s.sequence_ontology_id
                    AND s.term_name = 'processed_transcript'
                    AND g.external_database_release_id=extr.external_database_release_id 
                    AND extr.external_database_id=ext.external_database_id
                 )
 
           </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- cds sequence -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


        <sqlQuery name="NewAnnotationCDS" isCacheable="false"
                       displayName="New Annotation RNA Sequence">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="workshop_cds"/>
            <sql>
            <![CDATA[
              SELECT gf.source_id,
                     SUBSTR(s.sequence,
                            tf.translation_start,
                            tf.translation_stop - tf.translation_start + 1)
                       AS workshop_cds,'@project_id@' as project_id
              FROM dots.genefeature gf, dots.transcript t,
                   dots.splicednasequence s, dots.TranslatedAaFeature tf,
                   apidb.TRACKNEWANNOTATION tna
              WHERE tna.new_source_id = gf.source_id
                AND t.parent_id = gf.na_feature_id
                AND s.na_sequence_id = t.na_sequence_id
                AND t.na_feature_id = tf.na_feature_id
            ]]>
            </sql>
        </sqlQuery>



        <sqlQuery name="CDS" isCacheable="false" excludeProjects="ApiDB" 
                       displayName="RNA Sequence">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="cds"/>
            <sql>
            <![CDATA[
              SELECT gf.source_id,
                     SUBSTR(s.sequence,
                            tf.translation_start,
                            tf.translation_stop - tf.translation_start + 1)
                       AS cds,'@PROJECT_ID@' as project_id
              FROM dots.genefeature gf, dots.transcript t,
                   dots.splicednasequence s, dots.TranslatedAaFeature tf
              WHERE t.parent_id = gf.na_feature_id
                AND s.na_sequence_id = t.na_sequence_id
                AND t.na_feature_id = tf.na_feature_id
            ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="CDS" isCacheable="false"  includeProjects="ApiDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="cds"/>
            <sql>
                 (SELECT g.source_id, ext.name as project_id, g.sequence as cds
                  from dots.SplicedNaSequence g, 
                       sres.SequenceOntology s, 
                       sres.ExternalDatabaseRelease extr, 
                       sres.ExternalDatabase ext
                  WHERE g.sequence_ontology_id = s.sequence_ontology_id
                    AND s.term_name = 'CDS'
                    AND g.external_database_release_id=extr.external_database_release_id 
                    AND extr.external_database_id=ext.external_database_id
                 )
 
           </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- plasmo expression graphs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ExpressionGraphs" isCacheable="false" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="graph_derisi_winzeler" />
            <column name="graph_winzeler" />
            <column name="graph_3d7" />
            <column name="graph_hb3" />
            <column name="graph_dd2" />
            <column name="graph_waters"/>
            <column name="graph_gametocyte"/>
            <column name="graph_cowman"/>
            <column name="graph_mexp128"/>
            <column name="graph_kappe"/>
            <column name="graph_daily"/>
            <sql>
            <![CDATA[
               SELECT egs.source_id AS source_id, '@project_id@' as project_id,
                      NVL(MAX(graph_derisi_winzeler), 0) AS graph_derisi_winzeler,
                      NVL(MAX(graph_winzeler), 0) AS graph_winzeler,
                      NVL(MAX(graph_3d7), 0) AS graph_3d7,
                      NVL(MAX(graph_hb3), 0) AS graph_hb3,
                      NVL(MAX(graph_dd2), 0) AS graph_dd2,
                      NVL(MAX(graph_waters), 0) AS graph_waters,
                      NVL(MAX(graph_gametocyte), 0) AS graph_gametocyte,
                      NVL(MAX(graph_cowman), 0) AS graph_cowman,
                      NVL(MAX(graph_mexp128), 0) AS graph_mexp128,
                      NVL(MAX(graph_kappe), 0) AS graph_kappe,
                      NVL(MAX(graph_daily), 0) AS graph_daily
               FROM apidb.PlasmoExpressionGraphs egs
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- toxo expression graphs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ExpressionGraphs" isCacheable="false" includeProjects="ToxoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="graph_starvation" />
            <column name="graph_archetypal"/>
            <sql>
            <![CDATA[
               SELECT egs.source_id AS source_id, '@project_id@' as project_id,
                      NVL(MAX(graph_starvation), 0) AS graph_starvation,
                      NVL(MAX(graph_archetypal), 0) AS graph_archetypal
               FROM apidb.ToxoExpressionGraphs egs
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- giardia expression graphs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ExpressionGraphs" isCacheable="false" includeProjects="GiardiaDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="graph_stress" />
            <sql>
            <![CDATA[
               SELECT egs.source_id AS source_id, '@project_id@' as project_id,
                      NVL(MAX(graph_stress), 0) AS graph_stress
               FROM apidb.GiardiaExpressionGraphs egs
            ]]>
            </sql>
        </sqlQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF sequence -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneGffSequence">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_transcript_sequence"/>
        <sql>
          <![CDATA[
            select gf.source_id, '@project_id@' as project_id,
                   s.sequence as gff_transcript_sequence
            from DoTS.GeneFeature gf, 
                 DoTS.Transcript rna,
                 dots.splicednasequence s
            where gf.na_feature_id = rna.parent_id
                  and s.na_sequence_id = rna.na_sequence_id
          ]]>
        </sql>
      </sqlQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF attributes (other than sequence) -->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneGffAttrs">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_web_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_locus_tag"/>
        <column name="gff_attr_size"/>
        <sql>
          <![CDATA[
            select ga.source_id, '@project_id@' as project_id,
                   'apidb|' || ga.sequence_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'gene' as gff_type,
                   least(ga.start_min, ga.end_max) as gff_fstart,
                   greatest(ga.start_min, ga.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(ga.is_reversed, 1, '-', '+') as gff_strand,
                   '.' as gff_phase,
                   'apidb|' || ga.source_id as gff_attr_id,
                   ga.source_id as gff_attr_web_id,
                   ga.source_id as gff_attr_name,
                   case
                     when ga.is_deprecated = 1 then ga.product || ' (deprecated)'
                     else ga.product
                   end as gff_attr_description,
                   ga.source_id as gff_attr_locus_tag,
                   (greatest(ga.start_min, ga.end_max)
                   - least(ga.start_min, ga.end_max) + 1) as gff_attr_size
            from apidb.GeneAttributes ga
          ]]>
        </sql>
      </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Protein Id's and Linkouts -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="Protein_Linkout" isCacheable='true' includeProjects="CryptoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_id" />
            <column name="linkout" />
            <sql>
            <![CDATA[           
            SELECT 
                  g.source_id,'@project_id@' as project_id,
                  DECODE (
                       protein_id, null, 
                           '', 
                           'Genbank Protein Record ' ||
                           '(<a href="http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?val=' ||
                            protein_id         || 
                            '">' || 
                            protein_id         ||
                            '</a>)'
                       )
                  as linkout, 
                  t.protein_id
            FROM  dots.transcript t, dots.genefeature g
            WHERE g.na_feature_id = t.parent_id(+)
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="SGC_3D_Struct" isCacheable="false" includeProjects="CryptoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="pdb_id"/>
            <sql>
              <![CDATA[
            SELECT gf.source_id, '@project_id@' as project_id,
                   dr.primary_identifier AS pdb_id
            FROM dots.GeneFeature gf,
                 dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            AND dr.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND ed.name = 'Structural Genomics Consortium 3D Structures'
            ORDER BY dr.primary_identifier
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="Translation" isCacheable='true' includeProjects="CryptoDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="translation" />
            <column name="molecular_weight" />
            <column name="molecular_weight_note" />
            <sql>
            <!-- UPPER(source_id) is a workaround to some unresolved bug where
                 the translation doesn't get returned via webservices
                 (UPPER removed until new sql munger updated to handle it) -->
            <!-- The sql weirdness is to force a single row result set of null
                 values when there is no translation (as is the case for 
                 non-protein coding genes) - the WDK doesn't allow an empty result.    -->
            <![CDATA[  SELECT g.source_id, '@project_id@' as project_id,
                          tas.sequence as translation, tas.molecular_weight,
                          DECODE (
                            tas.molecular_weight, null,
                            '',
                            'Approximate protein mol. wt. (Daltons): <b>'  ||
                            tas.molecular_weight  ||
                            '</b><font size=''-1''><i> [computed from raw translation]</i></font>'
                          ) as molecular_weight_note
            FROM    dots.genefeature g,
                    dots.translatedaasequence tas, 
                    dots.translatedaafeature taf, 
                    dots.transcript t
            WHERE taf.aa_sequence_id = tas.aa_sequence_id 
            AND taf.na_feature_id = t.na_feature_id
            AND g.na_feature_id = t.parent_id         
           
            ]]>
            </sql>
        </sqlQuery>

    </querySet>

</wdkModel>
