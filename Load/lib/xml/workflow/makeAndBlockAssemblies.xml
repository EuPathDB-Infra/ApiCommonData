<workflowGraph name="makeAndBlockAssemblies">

    <param name="parentDataDir"/>
    <param name="genomeExtDbRlsSpec"/>
    <param name="parentNcbiTaxonId"/>
    <param name="ncbiTaxonId"/>
    <param name="maxIntronSize"/>
    <param name="dataDir"/>
    <param name="assemblySeqsDataDir"/>
 
    <step name="makeDataDir" stepClass="ApiCommonData::Load::WorkflowSteps::MakeDir">
      <paramValue name="dataDir">$$dataDir$$</paramValue>
    </step>

    <step name="makeClusterTaskInputDir" stepClass="ApiCommonData::Load::WorkflowSteps::MakeRepeatMaskTaskInputDir">
      <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
      <depends name="makeDataDir"/>
    </step>

    <step name="clusterTranscriptsByGenomeAlignment" stepClass="ApiCommonData::Load::WorkflowSteps::ClusterTranscriptsByGenomeAlignment">
      <paramValue name="outputFile">$$dataDir$$/alignedClusters.out</paramValue>
      <paramValue name="parentNcbiTaxonId">$$parentNcbiTaxonId$$</paramValue>
      <paramValue name="genomeExtDbRlsSpec">$$genomeExtDbRlsSpec$$</paramValue>
      <paramValue name="maxIntronSize">$$maxIntronSize$$</paramValue>
      <depends name="makeDataDir"/>
    </step>

   <step name="putUnalignedTranscriptsIntoOneCluster"
          stepClass="ApiCommonData::Load::Steps::PutUnalignedTranscriptsIntoOneCluster">
      <paramValue name="inputFile">$$dataDir$$/alignedClusters.out</paramValue>
      <paramValue name="outputFile">$$dataDir$$/allClusters.out</paramValue>
      <paramValue name="queryNcbiTaxonId">$$parentNcbiTaxonId$$</paramValue>
      <paramValue name="subjectNcbiTaxonId">$$ncbiTaxonId$$</paramValue>
      <paramValue name="useTaxonHierarchy">true</paramValue>
      <paramValue name="repeatMaskErrFile">$$assemblySeqsDataDir$$/master/mainresult/blocked.err</paramValue>
      <depends name="clusterTranscriptsByGenomeAlignment"/>
    </step>

    <step name="makeAssembliesSmallClusterDataDir" stepClass="ApiCommonData::Load::WorkflowSteps::MakeDir">
      <paramValue name="dataDir">$$dataDir$$/small</paramValue>
      <depends name="makeDataDir"/>
    </step>

    <step name="makeAssembliesBigClusterDataDir" stepClass="ApiCommonData::Load::WorkflowSteps::MakeDir">
      <paramValue name="dataDir">$$dataDir$$/big</paramValue>
      <depends name="makeDataDir"/>
    </step>

   <step name="assembleTranscripts"
          stepClass="ApiCommonData::Load::Steps::AssembleTranscripts">
      <paramValue name="inputFile">$$dataDir$$/allClusters.out</paramValue>
      <paramValue name="outputDir">$$dataDir$$/</paramValue>
      <paramValue name="ncbiTaxonId">$$parentNcbiTaxonId$$</paramValue>
      <paramValue name="reassemble"></paramValue>
      <depends name="putUnalignedTranscriptsIntoOneCluster"/>
    </step>

   <step name="extractAssemblies"
          stepClass="ApiCommonData::Load::Steps::ExtractAssemblies">
      <paramValue name="outputFile">$$dataDir$$/assemblies.fsa</paramValue>
      <paramValue name="ncbiTaxonId">$$parentNcbiTaxonId$$</paramValue>
      <depends name="assembleTranscripts"/>
    </step>

    <step name="mirrorToCluster" stepClass="ApiCommonData::Load::WorkflowSteps::MirrorToComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <depends name="makeClusterTaskInputDir"/>
    </step>

    <step name="startClusterTask" stepClass="ApiCommonData::Load::WorkflowSteps::StartClusterTask">
      <paramValue name="taskDir">$$dataDir$$</paramValue>
      <paramValue name="queue">apidb</paramValue>
      <paramValue name="cmdName">runRepeatMask</paramValue>
      <paramValue name="cmdArgs">$$dataDir$$/assemblies.fsa</paramValue>
      <depends name="mirrorToCluster"/>
    </step>

    <step name="waitForClusterTask" stepClass="ApiCommonData::Load::WorkflowSteps::WaitForClusterTask">
      <paramValue name="taskDir">$$dataDir$$</paramValue>
      <depends name="startClusterTask"/>
    </step>

    <step name="mirrorFromCluster" stepClass="ApiCommonData::Load::Steps::MirrorFromComputeCluster">
      <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
      <depends name="waitForClusterTask"/>
    </step>

</workflowGraph>
