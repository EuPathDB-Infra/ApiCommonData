<?xml version="1.0" encoding="UTF-8"?>
<tuningConfig>

  <tuningTable name="SequenceAlias">
    <externalDependency name="dots.NaSequenceImp"/>
    <sql>
      <![CDATA[
CREATE TABLE SequenceAlias&1 NOLOGGING AS
SELECT ens.source_id, LOWER(ens.source_id) AS lowercase_source_id
FROM dots.ExternalNaSequence ens
UNION
SELECT ens.source_id, LOWER(ens.source_id) AS lowercase_source_id
FROM dots.VirtualSequence ens
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SequenceAlias_idx&1 ON SequenceAlias&1(lowercase_source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="GoTermSummary">
    <externalDependency name="core.TableInfo"/>
    <externalDependency name="dots.AaFeatureImp"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.GoAssociation"/>
    <externalDependency name="dots.GoAssociationInstance"/>
    <externalDependency name="dots.GoAssociationInstanceLoe"/>
    <externalDependency name="dots.GoAssocInstEvidCode"/>
    <externalDependency name="sres.GoEvidenceCode"/>
    <externalDependency name="sres.GoRelationship"/>
    <externalDependency name="sres.GoTerm"/>
    <sql>
      <![CDATA[
CREATE TABLE GoTermSummary&1 NOLOGGING AS
SELECT gf.source_id,
       decode(ga.is_not, 0, '', 1, 'not', ga.is_not) as is_not,
                 gt.go_id, o.ontology, gt.name AS go_term_name,
                  gail.name AS source, gec.name as evidence_code
FROM dots.GeneFeature gf, dots.Transcript t,
     dots.TranslatedAaFeature taf, dots.GoAssociation ga,
     sres.GoTerm gt, dots.GoAssociationInstance gai,
     dots.GoAssociationInstanceLoe gail,
     dots.GoAssocInstEvidCode gaiec, sres.GoEvidenceCode gec,
     (SELECT gr.child_term_id AS go_term_id,
             DECODE(gp.name, 'biological_process', 'Biological Process',
                             'molecular_function', 'Molecular Function',
                             'cellular_component', 'Cellular Component',
                              gp.name)
             AS ontology
      FROM sres.GoRelationship gr, sres.GoTerm gp
      WHERE gr.parent_term_id = gp.go_term_id
        AND gp.go_id in ('GO:0008150','GO:0003674','GO:0005575')) o
WHERE gf.na_feature_id = t.parent_id
  AND t.na_feature_id = taf.na_feature_id
  AND taf.aa_sequence_id = ga.row_id
  AND ga.table_id = (SELECT table_id
                     FROM core.TableInfo
                     WHERE name = 'TranslatedAASequence')
  AND ga.go_term_id = gt.go_term_id
  AND ga.go_association_id = gai.go_association_id
  AND gai.go_assoc_inst_loe_id = gail.go_assoc_inst_loe_id
  AND gai.go_association_instance_id
      = gaiec.go_association_instance_id
  AND gaiec.go_evidence_code_id = gec.go_evidence_code_id
  AND gt.go_term_id = o.go_term_id(+)
ORDER BY o.ontology, gt.go_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GoTermSum_sourceId_idx&1 ON GoTermSummary&1 (source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="PdbSimilarity">
    <externalDependency name="core.TableInfo"/>
    <externalDependency name="dots.AaFeatureImp"/>
    <externalDependency name="dots.AaSequenceImp"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.Similarity"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE PdbSimilarity&1 NOLOGGING AS
SELECT gf.source_id, eas.source_id AS pdb_chain,
       substr(eas.description, 1, 100) AS pdb_title,
       substr(eas.source_id, 1,
              instr(eas.source_id, '_', -1) - 1)
         AS pdb_id,
       s.pvalue_mant, s.pvalue_exp, 
       SUBSTR(tn.name, 1, 100) AS taxon,
       ROUND( (s.number_identical / s.total_match_length) * 100)
         AS percent_identity,
       ROUND( (s.total_match_length / tas.length) * 100)
         AS percent_plasmo_coverage,
       s.score, eas.taxon_id as pdb_taxon_id, tas.taxon_id as gene_taxon_id
FROM dots.TranslatedAaFeature taf,
     dots.TranslatedAaSequence tas, core.TableInfo tas_ti,
     dots.Similarity s, core.TableInfo eas_ti,
     dots.ExternalAaSequence eas,
     sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed,
     sres.TaxonName tn, dots.Transcript t, dots.GeneFeature gf
WHERE taf.aa_sequence_id = tas.aa_sequence_id
  AND tas_ti.name = 'TranslatedAASequence'
  AND tas_ti.table_id = s.query_table_id
  AND s.query_id = tas.aa_sequence_id
  AND eas_ti.name = 'ExternalAASequence'
  AND eas_ti.table_id = s.subject_table_id
  AND s.subject_id = eas.aa_sequence_id
  AND tn.name_class = 'scientific name'
  AND eas.external_database_release_id
      = edr.external_database_release_id
  AND edr.external_database_id = ed.external_database_id
  AND ed.name in ('PDBProteinSequences_RSRC','PDB protein sequences')
  AND eas.taxon_id = tn.taxon_id
  AND t.na_feature_id = taf.na_feature_id
  AND gf.na_feature_id = t.parent_id
ORDER BY taf.source_id, eas.source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index PdbSim_sourceId_ix&1
ON PdbSimilarity&1 (source_id, score DESC)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="SequencePieceClosure" prefixEnabled="true">
    <externalDependency name="dots.SequencePiece"/>
    <sql>
      <![CDATA[
        create table &prefixSequencePieceClosure&1 nologging as
        select sp.sequence_piece_id,
               sp.virtual_na_sequence_id,
               sp.piece_na_sequence_id, 
               sp.sequence_order, 
               sp.distance_from_left,
               sp.uncertainty,
               sp.strand_orientation,
               sp.start_position,
               sp.end_position, 
               sp.modification_date,
               1 as edge_level
        from dots.SequencePiece sp, dots.NaSequence ns
        where sp.piece_na_sequence_id = ns.na_sequence_id
          and (ns.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
      ]]>
    </sql>
    <sql>
      <![CDATA[
        /* known issue: this should be run not just once, but iteratively
           until it doesn't create new records.  Currently (7/2008),
           SequencePieces aren't nested even once. */
        insert into &prefixSequencePieceClosure&1
                    (edge_level, virtual_na_sequence_id, piece_na_sequence_id,
                     distance_from_left, strand_orientation, modification_date, 
                     start_position, end_position, sequence_order, sequence_piece_id)
        select 2, higher.virtual_na_sequence_id, lower.piece_na_sequence_id,
               higher.distance_from_left,
               case
                 when nvl(higher.strand_orientation, '+') = nvl(lower.strand_orientation, '+')
                 then '+'
                 else '-'
               end as strand_orientation,
               sysdate,
               higher.start_position - lower.distance_from_left, 
               higher.end_position - lower.distance_from_left, 
               higher.sequence_order,
               dots.sequencepiece_sq.nextval
        from &prefixSequencePieceClosure&1 higher, &prefixSequencePieceClosure&1 lower
        where higher.piece_na_sequence_id = lower.virtual_na_sequence_id
         and higher.start_position >= lower.start_position + lower.distance_from_left
         and higher.end_position <= lower.end_position + lower.distance_from_left
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="FeatureLocation" prefixEnabled="true">
    <internalDependency name="SequencePieceClosure"/>
    <internalDependency name="SequenceAttributes"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.NaLocation"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <sql>
      <![CDATA[
create table &prefixFeatureLocation&1 NOLOGGING as
select case
         when nf.subclass_view = 'GeneFeature'
              and nf.is_predicted = 1
           then 'GenePrediction'
         when nf.subclass_view = 'Miscellaneous' 
              and nf.is_predicted = 1
           then 'Prediction'
         else nf.subclass_view
       end as feature_type,
       nf.source_id as feature_source_id, ns.source_id as sequence_source_id,
       nf.na_sequence_id, nf.na_feature_id,
       least(nl.start_min, nl.start_max, nl.end_min, nl.end_max) as start_min,
       greatest(nl.start_min, nl.start_max, nl.end_min, nl.end_max) as end_max,
       nl.is_reversed, nf.parent_id, nf.sequence_ontology_id,
       cast (null as number) as is_top_level, ef.coding_start, ef.coding_end,
       nf.external_database_release_id,
       cast(apidb.project_id(tn.name) as varchar2(20)) as project_id
from dots.NaFeature nf, dots.NaLocation nl, SequenceAttributes ns,
     dots.ExonFeature ef, sres.TaxonName tn
where nf.na_feature_id = nl.na_feature_id
  and nf.na_sequence_id = ns.na_sequence_id
  and nl.na_feature_id = ef.na_feature_id(+)
  and ns.taxon_id = tn.taxon_id
  and tn.name_class = 'scientific name'
  and (ns.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
union
select -- virtual feature locations mapped through SequencePiece
       case
         when nf.subclass_view = 'GeneFeature'
              and nf.is_predicted = 1
           then 'GenePrediction'
         else nf.subclass_view
       end as feature_type,
       nf.source_id as feature_source_id, scaffold.source_id as sequence_source_id,
       sp.virtual_na_sequence_id, nf.na_feature_id,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - greatest(nl.start_min, nl.start_max, nl.end_min, nl.end_max)  + 1
           else sp.distance_from_left + least(nl.start_min, nl.start_max, nl.end_min, nl.end_max) - sp.start_position  + 1
       end as start_min,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - least(nl.start_min, nl.start_max, nl.end_min, nl.end_max) + 1
         else sp.distance_from_left + greatest(nl.start_min, nl.start_max, nl.end_min, nl.end_max) - sp.start_position + 1
       end as end_max,
       case
         when sp.strand_orientation in ('-', '-1')
         then decode(nvl(nl.is_reversed, 0),
                     0, 1,  1, 0,  1)
         else nl.is_reversed
       end as is_reversed,
       nf.parent_id, nf.sequence_ontology_id,
       cast (null as number) as is_top_level,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - coding_start + 1
           else sp.distance_from_left + ef.coding_start - sp.start_position + 1
       end as coding_start,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - coding_end + 1
         else sp.distance_from_left + coding_end - sp.start_position + 1
       end as coding_end, nf.external_database_release_id,
       cast(apidb.project_id(tn.name) as varchar2(20)) as project_id
from dots.NaFeature nf, dots.NaLocation nl, SequenceAttributes contig,
     &prefixSequencePieceClosure sp, SequenceAttributes scaffold, dots.ExonFeature ef,
     sres.TaxonName tn
where nf.na_feature_id = nl.na_feature_id
  and nf.na_sequence_id = contig.na_sequence_id
  and nf.na_sequence_id = sp.piece_na_sequence_id
  and sp.start_position <= nl.start_min
  and sp.end_position >= nl.end_max
  and sp.virtual_na_sequence_id = scaffold.na_sequence_id
  and nl.na_feature_id = ef.na_feature_id(+)
  and contig.taxon_id = tn.taxon_id
  and tn.name_class = 'scientific name'
  and (contig.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
      ]]>
    </sql>
    <sql>
      <![CDATA[
update &prefixFeatureLocation&1
set is_top_level = 1
      ]]>
    </sql>
    <sql>
      <![CDATA[
update &prefixFeatureLocation&1 fl
set is_top_level = 0 
where na_sequence_id in (select distinct piece_na_sequence_id 
                         from &prefixSequencePieceClosure spc
                         where fl.start_min >= spc.start_position
                         and fl.end_max <= spc.end_position)
      ]]>
    </sql>
    <sql>
      <![CDATA[
commit
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc_ix&1 on &prefixFeatureLocation&1
             (feature_type, na_sequence_id, start_min, end_max, is_reversed, feature_source_id, na_feature_id,external_database_release_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc2_ix&1 on &prefixFeatureLocation&1
             (na_sequence_id, start_min, end_max, is_reversed, sequence_ontology_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index fl_seq_st_end_feat_idx&1
      on &prefixFeatureLocation&1 (na_sequence_id,start_min,end_max,na_feature_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc3_ix&1 on &prefixFeatureLocation&1
             (na_feature_id, na_sequence_id, is_top_level)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc4_ix&1 on &prefixFeatureLocation&1
             (feature_type, is_top_level, na_feature_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc5_ix&1
on &prefixFeatureLocation&1 
(na_sequence_id, feature_type, start_min, end_max, parent_id, na_feature_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc6_ix&1 on &prefixFeatureLocation&1 (feature_source_id, is_top_level, na_sequence_id, is_reversed)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index featloc7_ix&1 on &prefixFeatureLocation&1
             (feature_type, sequence_source_id, start_min, is_reversed, end_max, feature_source_id, na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="GeneId" prefixEnabled="true">
  <!-- GeneId maps any valid ID for a gene onto its official ID. These two quantities
       are stored in the "id" and "gene" columns, respectively. The "unique_mapping"
       column is set to 1 for IDs which map to only one gene.

       Most of the CREATE TABLE statement is made up of the union of nine subqueries,
       each of which looks in a different place for gene IDs. Each subquery populates
       the "union_member" field with a different literal string, to make it easier to
       understand which part (or parts) of the SQL is responsible for each ID-to-gene
       mapping.
    -->
    <internalDependency name="FeatureLocation"/>
    <externalDependency name="dots.DbRefNaFeature"/>
    <externalDependency name="dots.DbRefNaSequence"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.GeneFeature"/>
    <externalDependency name="sres.DbRef"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="apidb.GeneFeatureName"/>
    <sql>
      <![CDATA[
CREATE TABLE &prefixGeneId&1 NOLOGGING AS
SELECT mapping.id, mapping.gene, cast (null as NUMBER) as unique_mapping,
       SUBSTR(apidb.tab_to_string(set(CAST(COLLECT(union_member order by union_member) AS apidb.varchartab)),'; '), 1, 80) as union_member, 
       SUBSTR(apidb.tab_to_string(set(CAST(COLLECT(database_name order by database_name) AS apidb.varchartab)),'; '), 1, 80) as database_name
FROM (SELECT substr(t.protein_id, 1, instr(t.protein_id, '.') - 1) AS id,
             gf.source_id AS gene,
             'Transcript.protein_id before dot' as union_member, ed.name as database_name -- dots.Transcript.protein_id, trimmed at period
      FROM dots.Transcript t, dots.GeneFeature gf,
           sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr
      WHERE t.parent_id = gf.na_feature_id
        AND substr(t.protein_id, 1, instr(t.protein_id, '.') - 1) IS NOT NULL
        AND gf.external_database_release_id = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
     UNION
      SELECT t.protein_id AS id,
             gf.source_id AS gene,
             'Transcript.protein_id' as union_member, ed.name as database_name -- dots.Transcript.protein_id
      FROM dots.Transcript t, dots.GeneFeature gf,
           sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr
      WHERE t.parent_id = gf.na_feature_id
        AND t.protein_id IS NOT NULL
        AND gf.external_database_release_id = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
     UNION
      SELECT dr.primary_identifier AS id, 
             gf.source_id AS gene,
             'DbRef.primary_identifier' as union_member, ed.name as database_name -- sres.DbRef.primary_identifier
      FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf,
           sres.DbRef dr, sres.ExternalDatabaseRelease edr,
           sres.ExternalDatabase ed
      WHERE dr.primary_identifier IS NOT NULL
        AND gf.na_feature_id = drnf.na_feature_id
        AND drnf.db_ref_id = dr.db_ref_id
        AND dr.external_database_release_id
              = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
        AND ed.name not in ('Pf_Phenotype_DBRefs_RSRC','Pb_RMgm_Phenotype_DBRefs_RSRC','Pc_Phenotype_DBRefs_RSRC','Pv_Phenotype_DBRefs_RSRC')
        AND ed.name != 'Pf_PathwayMappings_Hagai_RSRC'
        AND ed.name != 'Links to Pathway Maps'
        AND ed.name != 'Phenotype DBRefs'
        AND ed.name != 'MPMP'
        AND ed.name != 'Pf_BRENDAMapping_RSRC'
        AND ed.name != 'Pf_SGPPMapping_RSRC'
        AND ed.name not in ('Pubmed DBRefs','Pb_Pubmed_DBRefs_RSRC','Pc_Pubmed_DBRefs_RSRC','Pf_Pubmed_DBRefs_RSRC','Pk_Pubmed_DBRefs_RSRC','Pv_Pubmed_DBRefs_RSRC','Py_Pubmed_DBRefs_RSRC')
        AND ed.name not in ('Entrez DBRefs','DBRefs_RSRC','Pk_Entrez_DBRefs_RSRC','Pv_Entrez_DBRefs_RSRC','Py_Entrez_DBRefs_RSRC', 'Pf_Entrez_DBRefs_RSRC')
        AND ed.name != 'PMID'
        AND dr.primary_identifier not in (SELECT source_id 
              FROM dots.GeneFeature gf, sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
              WHERE gf.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id)
     UNION
      SELECT dr.secondary_identifier AS id, 
             gf.source_id AS gene,
             'DbRef.secondary_identifier' as union_member, ed.name as database_name -- sres.DbRef.secondary_identifier
      FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf,
           sres.DbRef dr, sres.ExternalDatabaseRelease edr,
           sres.ExternalDatabase ed
      WHERE dr.secondary_identifier IS NOT NULL
        AND gf.na_feature_id = drnf.na_feature_id
        AND drnf.db_ref_id = dr.db_ref_id
        AND dr.external_database_release_id
              = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
        AND ed.name IN ('NRDB_gb_dbXRefBySeqIdentity',
                        'NRDB_pdb_dbXRefBySeqIdentity',
                        'NRDB_ref_dbXRefBySeqIdentity',
                        'NRDB_sp_dbXRefBySeqIdentity',
                        'Predicted protein structures','Pf_predictedProteinStructures_RSRC',
                        'GenBank')
     UNION
      SELECT dr.primary_identifier AS id, 
             gf.source_id AS gene,
             'genbank DbRef.primary_identifier' as union_member, ed.name as database_name -- sres.DbRef.primary_identifier for Genbank records
      FROM dots.GeneFeature gf, dots.Transcript t, dots.dbrefNaSequence drns,
           sres.DbRef dr, sres.ExternalDatabaseRelease edr,
            sres.ExternalDatabase ed
      WHERE gf.na_feature_id = t.parent_id
        AND t.na_sequence_id = drns.na_sequence_id
        AND drns.db_ref_id = dr.db_ref_id
        AND dr.external_database_release_id = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
        AND ed.name = 'GenBank'
     UNION
      SELECT pred_loc.feature_source_id AS id,
             gene_loc.feature_source_id AS gene,
             'overlapping predicted gene source_id' as union_member, ed.name as database_name -- dots.GeneFeature.source_id for predicted genes that overlap
      FROM &prefixFeatureLocation gene_loc, &prefixFeatureLocation pred_loc,
           sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
      WHERE pred_loc.feature_type = 'GenePrediction'
        AND gene_loc.feature_type = 'GeneFeature'
        AND pred_loc.na_sequence_id = gene_loc.na_sequence_id
        AND gene_loc.start_min <= pred_loc.end_max
        AND gene_loc.end_max >= pred_loc.start_min
        AND pred_loc.is_reversed = gene_loc.is_reversed
        AND pred_loc.external_database_release_id = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
     UNION
      SELECT ng.name AS id, gf.source_id AS gene,
             'NaGene' as union_member, ed.name as database_name -- dots.NaGene.name
      FROM dots.GeneFeature gf, dots.NaFeatureNaGene nfng, dots.NaGene ng,
           sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
      WHERE gf.na_feature_id = nfng.na_feature_id
        AND ng.na_gene_id = nfng.na_gene_id
        AND gf.external_database_release_id = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
     UNION
      SELECT source_id AS id, source_id AS gene,
             'same ID' as union_member, ed.name as database_name -- same ID (reflexive mapping)
      FROM dots.GeneFeature gf,
           sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
      WHERE gf.external_database_release_id = edr.external_database_release_id
        AND edr.external_database_id = ed.external_database_id
     UNION
      SELECT n.name AS id, gf.source_id AS gene,
             'gene name' as union_member, d.name as database_name -- apidb.GeneFeatureName.name
      from apidb.GeneFeatureName n, dots.genefeature gf, sres.externaldatabaserelease r, sres.externaldatabase d
      where n.na_feature_id = gf.na_feature_id
        and gf.external_database_release_id =r.external_database_release_id
        and r.external_database_id = d.external_database_id
        and n.is_preferred = 1) mapping,
      dots.GeneFeature gf, dots.NaSequence ns
where mapping.gene = gf.source_id
  and gf.na_sequence_id = ns.na_sequence_id
  and (ns.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
  and (gf.is_predicted != 1 OR gf.is_predicted is null)
group by mapping.id, mapping.gene
      ]]>
    </sql>
    <sql>
      <![CDATA[
update &prefixGeneId&1
set unique_mapping = 1
where lower(id) in (select lower_id
                    from (select distinct lower(id) as lower_id, gene
                          from &prefixGeneId&1) case_independent_mapping
                    group by lower_id
                    having count(*) = 1)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX GeneId_gene_idx&1 ON &prefixGeneId&1 (gene, id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX GeneId_id_idx&1 ON &prefixGeneId&1 (id, gene)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX GeneId_uniqid_idx&1 ON &prefixGeneId&1 (unique_mapping, id, gene)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX GeneId_lowid_idx&1 ON &prefixGeneId&1 (lower(id), gene)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX GeneId_uniqlowid_idx&1 ON &prefixGeneId&1 (unique_mapping, lower(id), gene)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SequenceId">
    <externalDependency name="dots.DbRefNaSequence"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.DbRef"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.SequenceOntology"/>
    <sql>
      <![CDATA[
CREATE TABLE SequenceId&1 NOLOGGING AS
SELECT DISTINCT substr(id, 1, 50) as id, substr(sequence, 1, 50) AS sequence
FROM (
  SELECT lower(source_id) as id, source_id as sequence
  FROM dots.NaSequence ns, sres.SequenceOntology so
  WHERE ns.sequence_ontology_id = so.sequence_ontology_id
    AND so.term_name in ('contig', 'supercontig', 'chromosome','mitochondrial_chromosome','plastid_sequence','cloned_genomic','apicoplast_chromosome')
UNION
  SELECT LOWER(dr.primary_identifier) AS id, ns.source_id AS sequence
  FROM dots.NaSequence ns, dots.DbRefNaSequence drnf,
       sres.DbRef dr, sres.ExternalDatabaseRelease edr,
       sres.ExternalDatabase ed
  WHERE dr.primary_identifier IS NOT NULL
    AND ns.na_sequence_id = drnf.na_sequence_id
    AND drnf.db_ref_id = dr.db_ref_id
    AND dr.external_database_release_id
          = edr.external_database_release_id
    AND edr.external_database_id = ed.external_database_id
)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SequenceId_sequence_idx&1 ON SequenceId&1 (sequence)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SequenceId_id_idx&1 ON SequenceId&1 (id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="EpitopeSummary">
    <externalDependency name="dots.AaFeatureImp"/>
    <externalDependency name="dots.AaLocation"/>
    <externalDependency name="dots.AaSequenceDbRef"/>
    <externalDependency name="dots.AaSequenceImp"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="sres.DbRef"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE EpitopeSummary&1 NOLOGGING AS
SELECT gf.source_id, 
              al.start_min||'-'||al.end_max AS location,
              ef.source_id as iedb_id,
       mas.sequence, 
       SUBSTR(tn.name, 1, 100) AS name,
       DECODE(ef.type, 'Not Full Set Not on Blast Hit', 'Low',
                       'Not Full Set On Blast Hit', 'Medium',
                       'Full Set Not on Blast Hit', 'Medium',
                       'Full Set On Blast Hit', 'High',
                       'unknown epitope type') AS confidence
FROM dots.GeneFeature gf, 
     dots.Transcript t,
     dots.TranslatedAaFeature taf, 
     dots.MotifAaSequence mas,
     dots.TranslatedAaSequence tas, 
     dots.EpitopeFeature ef,
     dots.AaLocation al, 
     Sres.TaxonName tn
WHERE t.parent_id = gf.na_feature_id
  AND taf.na_feature_id = t.na_feature_id
  AND taf.aa_sequence_id = tas.aa_sequence_id
  AND tas.aa_sequence_id = ef.aa_sequence_id
  AND ef.aa_feature_id = al.aa_feature_id
  AND ef.motif_aa_sequence_id = mas.aa_sequence_id
  AND tas.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Epi_srcId_ix&1 ON EpitopeSummary&1 (source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="GeneCentromereDistance">
    <internalDependency name="FeatureLocation"/>
    <externalDependency name="sres.SequenceOntology"/>
    <sql>
      <![CDATA[
CREATE TABLE GeneCentromereDistance&1 NOLOGGING AS
SELECT gfl.feature_source_id AS gene,
       LEAST(ABS(mfl.start_min - gfl.end_max),
             ABS(mfl.end_max - gfl.start_min)) AS centromere_distance,
       gfl.sequence_source_id AS genomic_sequence
FROM FeatureLocation gfl, FeatureLocation mfl,
     sres.SequenceOntology so
WHERE gfl.na_sequence_id = mfl.na_sequence_id
  AND mfl.feature_type = 'Miscellaneous'
  AND gfl.feature_type = 'GeneFeature'
  AND mfl.sequence_ontology_id = so.sequence_ontology_id
  AND so.term_name = 'centromere'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GCent_loc_ix&1
       ON GeneCentromereDistance&1 (genomic_sequence, centromere_distance)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SageTagAnalysisAttributes">
    <externalDependency name="core.TableInfo"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="rad.Analysis"/>
    <externalDependency name="rad.AnalysisInput"/>
    <externalDependency name="rad.AnalysisResultImp"/>
    <externalDependency name="rad.Assay"/>
    <externalDependency name="rad.CompositeElementImp"/>
    <externalDependency name="rad.CompositeElementResultImp"/>
    <externalDependency name="rad.LogicalGroup"/>
    <externalDependency name="rad.LogicalGroupLink"/>
    <externalDependency name="rad.Protocol"/>
    <externalDependency name="rad.Quantification"/>
    <intermediateTable name="SageTagInfo"/>
    <intermediateTable name="SageTagGenomicOccurrence"/>
    <intermediateTable name="SageTagLibraryTotal"/>
    <intermediateTable name="SageTagQuantificationTotal"/>

    <sql>
      <![CDATA[
create table SageTagInfo NOLOGGING as
select st.composite_element_id, dtr.analysis_id, dtr.float_value as dtr_tag_count,
       substr(st.tag, 1, 30) as sequence, r.tag_count, r.quantification_id, dtr.table_id
from dots.SageTagFeature stf, rad.DataTransformationResult dtr, rad.SageTag st, rad.SageTagResult r
where st.composite_element_id = dtr.row_id
  and st.composite_element_id = stf.source_id
  and st.composite_element_id = r.composite_element_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create table SageTagGenomicOccurrence NOLOGGING as
select source_id, count(*) as occurrence
from dots.SageTagFeature
group by source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create table SageTagLibraryTotal NOLOGGING as
select dt.analysis_id, sum(float_value) as total_count
from rad.DataTransformationResult dt, rad.Analysis a, rad.Protocol p
where dt.analysis_id = a.analysis_id
  and a.protocol_id = p.protocol_id
  and p.name = 'Normalization of SAGE tag frequencies to a target total intensity'
group by dt.analysis_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create table SageTagQuantificationTotal nologging as
select quantification_id, sum(tag_count) as total_raw_count
from rad.SageTagResult
group by quantification_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create table SageTagAnalysisAttributes&1 NOLOGGING as
select sti.analysis_id, max(sti.dtr_tag_count) as tag_count,
       max(ct.occurrence) as occurrence, sti.sequence,
       sti.composite_element_id, a.name as library_name,
       library_total.total_count as library_total_tag_count,
       (max(sti.dtr_tag_count) * 100) / library_total.total_count
         as library_tag_percentage,
       sti.tag_count as raw_count, tot.total_raw_count,
       100 *(sti.tag_count / tot.total_raw_count ) as raw_percent
from SageTagInfo sti, SageTagGenomicOccurrence ct,
     SageTagLibraryTotal library_total, SageTagQuantificationTotal tot,
     core.TableInfo ti, rad.AnalysisInput ai, rad.LogicalGroup lg,
     rad.LogicalGroupLink ll, rad.Assay a, core.TableInfo quant_ti,
     rad.Quantification q
where ti.name = 'SAGETag'
  and quant_ti.name = 'Assay'
  and sti.table_id = ti.table_id
  and q.quantification_id = sti.quantification_id
  and tot.quantification_id = sti.quantification_id
  and ct.source_id = sti.composite_element_id
  and sti.analysis_id = ai.analysis_id
  and ai.logical_group_id = lg.logical_group_id
  and lg.logical_group_id = ll.logical_group_id
  and ll.row_id = a.assay_id
  and a.name = q.name
  and ll.table_id = quant_ti.table_id
  and sti.analysis_id = library_total.analysis_id
group by sti.analysis_id, sti.sequence, sti.composite_element_id,
         a.name, library_total.total_count,
         q.name, sti.tag_count, tot.total_raw_count
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index staa_ix&1 on SageTagAnalysisAttributes&1 (analysis_id, composite_element_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index staa_tag_ix&1 on SageTagAnalysisAttributes&1 (composite_element_id, analysis_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SageTagGene">
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="SageTagAnalysisAttributes"/>
    <externalDependency name="rad.DataTransformationResult"/>
    <externalDependency name="dots.SageTagFeature"/>
    <intermediateTable name="SageTagGeneFivePrime"/>
    <intermediateTable name="SageTagGeneThreePrime"/>
    <sql>
      <![CDATA[
create table SageTagGeneFivePrime NOLOGGING as
   select '5' as direction, g.feature_source_id AS gene_source_id,
          s.feature_source_id as tag_source_id,
             min (case
                    when g.is_reversed = 1 and s.end_max - g.end_max < 0
                      then 0
                    when g.is_reversed = 1 and s.end_max - g.end_max >= 0
                      then s.end_max - g.end_max
                    when g.is_reversed = 0 and g.start_min - s.start_min < 0
                      then 0
                    when g.is_reversed = 0 and g.start_min - s.start_min >= 0
                      then g.start_min - s.start_min
                  end) as distance,
           dr.analysis_id, max(dr.float_value) as tag_count,
           max(ct.occurrence) as occurrence,
           g.na_feature_id as gene_feature_id, s.na_feature_id as tag_feature_id,
           case when s.is_reversed = g.is_reversed then 0
                else 1
           end as antisense
      from FeatureLocation g, FeatureLocation s,
           rad.DataTransformationResult dr,
           (select source_id , count(*) as occurrence
            from dots.SageTagFeature
            group by source_id) ct
      where g.feature_type = 'GeneFeature'
        and s.feature_type = 'SAGETagFeature'
        and g.na_sequence_id = s.na_sequence_id
        and s.feature_source_id = dr.row_id
        and dr.row_id = ct.source_id
        and (case
               when g.is_reversed = 0
                 then g.start_min - s.start_min
               else s.end_max - g.end_max
             end <= 1000
            and case
                  when g.is_reversed = 0
                    then g.end_max - s.end_max
                  else s.start_min - g.start_min
                end >= 0)
      group by g.feature_source_id, s.feature_source_id, dr.analysis_id,
               g.na_feature_id, s.na_feature_id,
               case when s.is_reversed = g.is_reversed then 0
                    else 1
               end
      ]]>
    </sql>
    <sql>
      <![CDATA[
create table SageTagGeneThreePrime NOLOGGING as
      select '3' as direction, g.feature_source_id AS gene_source_id,
             s.feature_source_id as tag_source_id,
             min (case
                    when g.is_reversed = 1 and g.start_min - s.start_min < 0
                      then 0
                    when g.is_reversed = 1 and g.start_min - s.start_min  >= 0
                      then g.start_min - s.start_min
                    when g.is_reversed = 0 and s.end_max - g.end_max < 0
                      then 0
                    when g.is_reversed = 0 and s.end_max - g.end_max >= 0
                      then s.end_max - g.end_max
                  end) as distance,
           dr.analysis_id, max(dr.float_value) as tag_count,
           max(ct.occurrence) as occurrence,
           g.na_feature_id as gene_feature_id, s.na_feature_id as tag_feature_id,
           case when s.is_reversed = g.is_reversed then 0
                else 1
           end as antisense
      from FeatureLocation g, FeatureLocation s,
           rad.DataTransformationResult dr,
           (select source_id , count(*) as occurrence
            from dots.SageTagFeature
            group by source_id) ct
            where g.feature_type = 'GeneFeature'
              and s.feature_type = 'SAGETagFeature'
              and g.na_sequence_id = s.na_sequence_id
              and s.feature_source_id = dr.row_id
              and dr.row_id = ct.source_id
              and (case
                     when g.is_reversed = 0
                       then s.end_max - g.end_max
                     else g.start_min - s.start_min end <= 1000
                  and
                   case
                     when g.is_reversed = 0
                       then s.start_min - g.start_min
                     else g.end_max - s.end_max
                   end >= 0)
            group by g.feature_source_id, s.feature_source_id, dr.analysis_id,
                     g.na_feature_id, s.na_feature_id,
                     case when s.is_reversed = g.is_reversed then 0
                          else 1
                     end
      ]]>
    </sql>
    <sql>
      <![CDATA[
create table SageTagGene&1 NOLOGGING as
select t.direction, t.gene_source_id, t.tag_source_id, t.distance,
       t.analysis_id, t.occurrence, t.gene_feature_id, t.tag_feature_id,
       t.tag_count, t.antisense,
       case
         when t.antisense = 0 then t.tag_count
         else 0
       end as sense_count,
       case
         when t.antisense = 0 then 0
         else t.tag_count
       end as antisense_count, 
       libs.library_name
from
  (select * from SageTagGeneFivePrime
   union all
   select * from SageTagGeneThreePrime) t,
  (select distinct(analysis_id), library_name from SageTagAnalysisAttributes) libs
  where t.analysis_id = libs.analysis_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index stg_ix&1
on SageTagGene&1 (gene_source_id, direction, distance, tag_source_id, tag_feature_id, antisense)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="GeneAttributes" prefixEnabled="true">
    <internalDependency name="GeneId"/>
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="GenomicSequence"/>
    <internalDependency name="TaxonSpecies"/>
    <externalDependency name="apidb.AaSequenceAttribute"/>
    <externalDependency name="apidb.GeneFeatureProduct"/>
    <externalDependency name="apidb.Profile"/>
    <externalDependency name="apidb.ProfileSet"/>
    <externalDependency name="core.TableInfo"/>
    <externalDependency name="dots.AaFeatureImp"/>
    <externalDependency name="dots.AaLocation"/>
    <externalDependency name="dots.AaSequenceEnzymeClass"/>
    <externalDependency name="dots.AaSequenceImp"/>
    <externalDependency name="dots.DbRefNaFeature"/>
    <externalDependency name="dots.GeneInstance"/>
    <externalDependency name="dots.GoAssociation"/>
    <externalDependency name="dots.GoAssociationInstance"/>
    <externalDependency name="dots.GoAssociationInstanceLoe"/>
    <externalDependency name="dots.GoAssocInstEvidCode"/>
    <externalDependency name="dots.NaFeatureComment"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.NaSequenceImp"/> 
    <externalDependency name="dots.SequenceGroup"/>
    <externalDependency name="rad.Analysis"/>
    <externalDependency name="rad.AnalysisInput"/>
    <externalDependency name="rad.AnalysisResultImp"/>
    <externalDependency name="rad.CompositeElementImp"/>
    <externalDependency name="rad.LogicalGroup"/>
    <externalDependency name="rad.Protocol"/>
    <externalDependency name="sres.DbRef"/>
    <externalDependency name="sres.EnzymeClass"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.GoEvidenceCode"/>
    <externalDependency name="sres.GoRelationship"/>
    <externalDependency name="sres.GoTerm"/>
    <externalDependency name="sres.SequenceOntology"/>
    <externalDependency name="sres.Taxon"/>
    <externalDependency name="sres.TaxonName"/>
    <intermediateTable name="GoTermList"/>
    <intermediateTable name="GeneGoAttributes"/>
    <intermediateTable name="DerisiExpn"/>
    <intermediateTable name="WinzelerExpn"/>
    <intermediateTable name="ToxoExpn"/>
    <intermediateTable name="GeneProteinAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE &prefixGoTermList NOLOGGING AS
SELECT *
FROM (  -- work around sometime Oracle bug ORA-00942
      SELECT source_id, ontology, source,
             apidb.tab_to_string(set(cast(COLLECT(name order by name) as apidb.varchartab)), ', ')
               AS go_terms
      FROM (SELECT DISTINCT gf.source_id, o.ontology, gt.name,
                        DECODE(gail.name, 'Interpro', 'predicted', 'annotated')
                              AS source
            FROM dots.GeneFeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.GoAssociation ga,
                 sres.GoTerm gt, dots.GoAssociationInstance gai,
                 dots.GoAssociationInstanceLoe gail,
                 dots.GoAssocInstEvidCode gaiec, sres.GoEvidenceCode gec,
                 (SELECT gr.child_term_id AS go_term_id, gp.name AS ontology
                  FROM sres.GoRelationship gr, sres.GoTerm gp
                  WHERE gr.parent_term_id = gp.go_term_id
                    AND gp.go_id in ('GO:0008150','GO:0003674','GO:0005575')) o
            WHERE gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = (SELECT table_id
                                 FROM core.TableInfo
                                 WHERE name = 'TranslatedAASequence')
              AND ga.go_term_id = gt.go_term_id
              AND ga.go_association_id = gai.go_association_id
              AND gai.go_assoc_inst_loe_id = gail.go_assoc_inst_loe_id
              AND gai.go_association_instance_id
                  = gaiec.go_association_instance_id
              AND gaiec.go_evidence_code_id = gec.go_evidence_code_id
              AND gt.go_term_id = o.go_term_id)
      GROUP BY source_id, ontology, source)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE &prefixGeneGoAttributes NOLOGGING AS
SELECT DISTINCT gene.source_id,
       substr(annotated_go_component.go_terms, 1, 300) AS annotated_go_component,
       substr(annotated_go_function.go_terms, 1, 300) AS annotated_go_function,
       substr(annotated_go_process.go_terms, 1, 300) AS annotated_go_process,
       substr(predicted_go_component.go_terms, 1, 300) AS predicted_go_component,
       substr(predicted_go_function.go_terms, 1, 300) AS predicted_go_function,
       substr(predicted_go_process.go_terms, 1, 300) AS predicted_go_process
FROM (SELECT DISTINCT gene AS source_id FROM &prefixGeneId) gene,
     (SELECT * FROM &prefixGoTermList
      WHERE source = 'annotated' AND ontology = 'cellular_component')
       annotated_go_component,
     (SELECT * FROM &prefixGoTermList
      WHERE source = 'annotated' AND ontology = 'molecular_function')
       annotated_go_function,
     (SELECT * FROM &prefixGoTermList
      WHERE source = 'annotated' AND ontology = 'biological_process')
       annotated_go_process,
     (SELECT * FROM &prefixGoTermList
      WHERE source = 'predicted' AND ontology = 'cellular_component')
       predicted_go_component,
     (SELECT * FROM &prefixGoTermList
      WHERE source = 'predicted' AND ontology = 'molecular_function')
       predicted_go_function,
     (SELECT * FROM &prefixGoTermList
      WHERE source = 'predicted' AND ontology = 'biological_process')
       predicted_go_process
WHERE gene.source_id = annotated_go_component.source_id(+)
  AND 'annotated' = annotated_go_component.source(+)
  AND 'cellular_component' = annotated_go_component.ontology(+)
  AND gene.source_id = annotated_go_function.source_id(+)
  AND 'annotated' = annotated_go_function.source(+)
  AND 'molecular_function' = annotated_go_function.ontology(+)
  AND gene.source_id = annotated_go_process.source_id(+)
  AND 'annotated' = annotated_go_process.source(+)
  AND 'biological_process' = annotated_go_process.ontology(+)
  AND gene.source_id = predicted_go_component.source_id(+)
  AND 'predicted' = predicted_go_component.source(+)
  AND 'cellular_component' = predicted_go_component.ontology(+)
  AND gene.source_id = predicted_go_function.source_id(+)
  AND 'predicted' = predicted_go_function.source(+)
  AND 'molecular_function' = predicted_go_function.ontology(+)
  AND gene.source_id = predicted_go_process.source_id(+)
  AND 'predicted' = predicted_go_process.source(+)
  AND 'biological_process' = predicted_go_process.ontology(+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneGoAttr_sourceId&1 ON &prefixGeneGoAttributes (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE &prefixDerisiExpn NOLOGGING AS
SELECT gene.source_id, expn.derisi_max_level, derisi_max_pct,
       derisi_max_timing, derisi_min_timing, derisi_min_level,
       max_fold_induction as derisi_max_fold_induction
FROM (SELECT DISTINCT gene AS source_id from &prefixGeneId) gene,
     (SELECT * FROM (SELECT p.source_id,
                            p.max_expression AS derisi_max_level,
                            p.equiv_max AS derisi_max_timing,
                            p.equiv_min AS derisi_min_timing,
                            p.min_expression AS derisi_min_level,
                            p.ind_ratio as max_fold_induction,
                            row_number() over (partition by p.source_id order by p.ind_ratio desc) row_number
                     FROM apidb.Profile p, apidb.ProfileSet ps
                     WHERE ps.name like 'DeRisi % Smoothed'
                       AND p.profile_set_id = ps.profile_set_id)
      WHERE row_number = 1) expn,
     (SELECT p.source_id, max(p.max_percentile) as derisi_max_pct
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name like 'DeRisi % Smoothed'
        AND p.profile_set_id = ps.profile_set_id
      GROUP BY p.source_id) percentile
WHERE gene.source_id = expn.source_id(+)
  AND gene.source_id = percentile.source_id(+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Derisi_sourceId&1 ON &prefixDerisiExpn (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE &prefixWinzelerExpn NOLOGGING AS
SELECT gene.source_id, expn.winzeler_max_level, winzeler_max_pct,
       winzeler_max_timing, winzeler_min_timing, winzeler_min_level
FROM (SELECT DISTINCT gene AS source_id from &prefixGeneId) gene,
     (SELECT p.source_id,
             p.max_expression AS winzeler_max_level,
             p.max_percentile AS winzeler_max_pct,
             p.time_of_max_expr AS winzeler_max_timing,
             p.time_of_min_expr AS winzeler_min_timing,
             p.min_expression AS winzeler_min_level
      FROM apidb.Profile p, apidb.ProfileSet ps, core.TableInfo ti
      WHERE ps.name = 'winzeler_cc_sorbExp'
        AND ti.name = 'GeneFeature'
        AND p.profile_set_id = ps.profile_set_id
        AND ti.table_id = p.subject_table_id) expn
WHERE gene.source_id = expn.source_id(+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Winzeler_sourceId&1 ON &prefixWinzelerExpn (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE &prefixToxoExpn NOLOGGING AS
select g.source_id, 
       type3_type1_fold_change,
       type3_type2_fold_change,
       type2_type1_fold_change
From dots.genefeature g, 
     (select gf.source_id, dr.fold_change as type3_type1_fold_change
      from rad.analysis a, rad.differentialexpression dr, 
           core.tableinfo t, dots.genefeature gf
      where a.analysis_id = dr.analysis_id
       and dr.table_id = t.table_id
       and dr.row_id = gf.na_feature_id
       and t.name = 'GeneFeature'
       and a.name = 'Type3vsType1') type3vstype1,
 (select gf.source_id, dr.fold_change as type3_type2_fold_change
      from rad.analysis a, rad.differentialexpression dr, 
           core.tableinfo t, dots.genefeature gf
      where a.analysis_id = dr.analysis_id
       and dr.table_id = t.table_id
       and dr.row_id = gf.na_feature_id
       and t.name = 'GeneFeature'
       and a.name = 'Type3vsType2') type3vstype2,
 (select gf.source_id, dr.fold_change as type2_type1_fold_change
      from rad.analysis a, rad.differentialexpression dr, 
           core.tableinfo t, dots.genefeature gf
      where a.analysis_id = dr.analysis_id
       and dr.table_id = t.table_id
       and dr.row_id = gf.na_feature_id
       and t.name = 'GeneFeature'
       and a.name = 'Type2vsType1') type2vstype1
where g.source_id = type3vstype1.source_id
 and g.source_id = type3vstype2.source_id
 and g.source_id = type2vstype1.source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Toxo_sourceId&1 ON &prefixToxoExpn (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE &prefixGeneProteinAttributes NOLOGGING AS
SELECT gene.source_id,
       protein.tm_count, protein.molecular_weight,
       protein.isoelectric_point, protein.min_molecular_weight,
       protein.max_molecular_weight, protein.hydropathicity_gravy_score,
       protein.aromaticity_score, protein.cds_length, protein.protein_length,
       protein.ec_numbers,
       protein.signalp_scores, protein.signalp_peptide, protein.aa_sequence_id
FROM (SELECT DISTINCT gene AS source_id from &prefixGeneId) gene,
     (SELECT gf.source_id, taf.na_feature_id, tas.aa_sequence_id,tas.molecular_weight,
             tas.length AS protein_length,
             greatest(taf.translation_start, taf.translation_stop)
             - least(taf.translation_start, taf.translation_stop) + 1 AS cds_length,
             asa.isoelectric_point,
             asa.min_molecular_weight, asa.max_molecular_weight,
             asa.hydropathicity_gravy_score,
             asa.aromaticity_score,
             NVL(transmembrane.tm_domains, 0) AS tm_count,
             ec.ec_numbers,
             sigp.scores as signalp_scores,
             substr(sigp.pep, 1, 200) as signalp_peptide
      FROM  dots.GeneFeature gf, dots.Transcript t,
            dots.TranslatedAaFeature taf,
            dots.TranslatedAaSequence tas,
            apidb.AaSequenceAttribute asa,
            (SELECT aa_sequence_id, max(tm_domains) AS tm_domains
             FROM (SELECT tmaf.aa_sequence_id, COUNT(*) AS tm_domains
                   FROM dots.TransmembraneAaFeature tmaf, dots.AaLocation al
                   WHERE tmaf.aa_feature_id = al.aa_feature_id
                   GROUP BY tmaf.aa_sequence_id) tms
             GROUP BY tms.aa_sequence_id) transmembrane,
            (SELECT aa_sequence_id,
                    SUBSTR(apidb.tab_to_string(set(cast(COLLECT(ec_number order by ec_number)
                                               as apidb.varchartab)), '; '),
                           1, 300)
                      AS ec_numbers
             FROM (SELECT DISTINCT asec.aa_sequence_id,
                          ec.ec_number || ' (' || ec.description || ')' AS ec_number
                   FROM dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
                   WHERE ec.enzyme_class_id = asec.enzyme_class_id)
             GROUP BY aa_sequence_id) ec,
             (SELECT spf.aa_sequence_id,'NN Sum: ' || ( spf.maxy_conclusion + spf.maxc_conclusion + spf.maxs_conclusion + spf.means_conclusion ) ||
              ', NN D: ' || round(((spf.means_score + spf.maxy_score) / 2),2) || ', HMM Prob: ' || round(spf.signal_probability,2) as scores,
               apidb.tab_to_string(set(cast(COLLECT(decode(spf.algorithm_name,'SignalPhmm','HMM: ','NN: ') || dbms_lob.substr(s.sequence,aal.end_max,1) order by spf.algorithm_name, dbms_lob.substr(s.sequence, aal.end_max, 1)) as apidb.varchartab)), ', ') as pep
              FROM dots.signalpeptidefeature spf, dots.aalocation aal,dots.AASEQUENCE s
              WHERE spf.aa_sequence_id = s.aa_sequence_id 
              and  aal.aa_feature_id = spf.aa_feature_id
              and (spf.signal_probability >= .5
              or ((spf.means_score + spf.maxy_score) / 2) >= .5
              or ( spf.maxy_conclusion + spf.maxc_conclusion + spf.maxs_conclusion + spf.means_conclusion ) >= 3)
              group by spf.aa_sequence_id,'NN Sum: ' || ( spf.maxy_conclusion + spf.maxc_conclusion + spf.maxs_conclusion + spf.means_conclusion ) ||
              ', NN D: ' || round(((spf.means_score + spf.maxy_score) / 2),2) || ', HMM Prob: ' || round(spf.signal_probability,2)) sigp
      WHERE gf.na_feature_id = t.parent_id
        AND t.na_feature_id = taf.na_feature_id
        AND taf.aa_sequence_id = tas.aa_sequence_id
        AND taf.aa_sequence_id = asa.aa_sequence_id
        and tas.aa_sequence_id = sigp.aa_sequence_id(+)
        AND tas.aa_sequence_id = transmembrane.aa_sequence_id(+)
        AND tas.aa_sequence_id = ec.aa_sequence_id(+)) protein
WHERE gene.source_id = protein.source_id(+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GPA_sourceId&1 ON &prefixGeneProteinAttributes (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE &prefixGeneAttributes&1 NOLOGGING AS
SELECT cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       gf.source_id, gf.na_feature_id,
       REPLACE(so.term_name, '_', ' ') AS gene_type,
       CASE  WHEN (COALESCE(preferred_name.name, any_name.name) is NOT NULL) THEN
            SUBSTR(COALESCE(preferred_product.product, any_product.product, gf.product, 'unspecified product'), 1, 300)
            || ' (' || COALESCE(preferred_name.name, any_name.name) || ')' 
           ELSE SUBSTR(COALESCE(preferred_product.product, any_product.product, gf.product, 'unspecified product'), 1, 300)
           END AS product,
       COALESCE(preferred_name.name, any_name.name) AS name,
       gf.is_pseudo,
       LEAST(nl.start_min, nl.end_max) AS start_min,
       GREATEST(nl.start_min, nl.end_max) AS end_max,
       CASE
         WHEN nl.is_reversed = 1
           THEN coding_range.max_coding_start
         ELSE coding_range.min_coding_start
       END as coding_start,
       CASE
         WHEN nl.is_reversed = 1
           THEN coding_range.min_coding_end
         ELSE coding_range.max_coding_end
       END as coding_end,
       nl.is_reversed,
       sns.length AS transcript_length,
       GREATEST(1, least(nl.start_min, nl.end_max) - 15000)
           AS context_start,
       LEAST(sequence.length, greatest(nl.start_min, nl.end_max) + 15000)
           AS context_end,
       DECODE(nvl(nl.is_reversed, 0), 0, 'forward', 1, 'reverse',
              nl.is_reversed) AS strand,
       SUBSTR(sequence.source_id, 1, 50) AS sequence_id,
       SUBSTR(tn.name, 1, 100) AS organism,
       SUBSTR(species_name.name, 1, 100) AS species,
       taxon.ncbi_tax_id,
       so_id, SUBSTR(so.term_name, 1, 150) AS so_term_name,
       SUBSTR(so.definition, 1, 150) AS so_term_definition,
       so.ontology_name, SUBSTR(so.so_version, 1, 7) AS so_version,
       SUBSTR(NVL(rt1.anticodon, rt2.anticodon), 1, 3) AS anticodon,
       protein.tm_count, protein.molecular_weight,
       protein.isoelectric_point, protein.min_molecular_weight,
       protein.max_molecular_weight, protein.hydropathicity_gravy_score,
       protein.aromaticity_score, protein.cds_length, protein.protein_length,
       protein.ec_numbers,
       ed.name AS external_db_name,
       SUBSTR(edr.version, 1, 10) AS external_db_version,
       exons.exon_count, SUBSTR(cmnt.comment_string, 1, 300) AS comment_string,
       SUBSTR(sequence.chromosome, 1, 20) AS chromosome,
       sequence.chromosome_order_num, sequence.na_sequence_id,
       go.annotated_go_component,
       go.annotated_go_function,
       go.annotated_go_process,
       go.predicted_go_component,
       go.predicted_go_function,
       go.predicted_go_process,
       DerisiExpn.derisi_max_level,
       DerisiExpn.derisi_max_pct,
       DerisiExpn.derisi_max_timing,
       DerisiExpn.derisi_min_timing,
       DerisiExpn.derisi_min_level,
       DerisiExpn.derisi_max_fold_induction,
       WinzelerExpn.winzeler_max_level,
       WinzelerExpn.winzeler_max_pct,
       WinzelerExpn.winzeler_max_timing,
       WinzelerExpn.winzeler_min_timing,
       WinzelerExpn.winzeler_min_level,
       ToxoExpn.type3_type1_fold_change,
       ToxoExpn.type3_type2_fold_change,
       ToxoExpn.type2_type1_fold_change,
       nvl(deprecated.is_deprecated, 0) as is_deprecated, gi.gene_id,
       substr(orthologs.name, 1, 60) as orthomcl_name,
       nvl(totsnps.total_snps,0) as total_snps, 
       nvl(nssnps.nonsyn_snps,0) as nonsynonymous_snps,
       nvl(synsnps.syn_snps,0) as synonymous_snps,
       CASE WHEN (nssnps.nonsyn_snps is null) THEN 0
            WHEN (synsnps.syn_snps is null) THEN null
            ELSE round((nssnps.nonsyn_snps / synsnps.syn_snps),2) END as nonsyn_syn_ratio,
       protein.signalp_scores,protein.signalp_peptide, sequence.taxon_id, protein.aa_sequence_id
FROM dots.GeneFeature gf, &prefixFeatureLocation nl, sres.SequenceOntology so,
     sres.Taxon, sres.TaxonName tn, dots.RnaType rt1, dots.RnaType rt2,
     dots.Transcript t, sres.ExternalDatabase ed,
     sres.ExternalDatabaseRelease edr, dots.SplicedNaSequence sns,
     &prefixGeneProteinAttributes protein, &prefixGeneGoAttributes go,
     &prefixDerisiExpn DerisiExpn, &prefixWinzelerExpn WinzelerExpn,
     &prefixToxoExpn ToxoExpn, &prefixGenomicSequence sequence,
     dots.geneinstance gi, &prefixTaxonSpecies ts, sres.TaxonName species_name,
     (SELECT DISTINCT gene AS source_id FROM &prefixGeneId) gene,
     (SELECT parent_id, count(*) AS exon_count
      FROM dots.ExonFeature
      GROUP BY parent_id) exons,
     (SELECT parent_id, max(coding_start) as max_coding_start, min(coding_start) as min_coding_start,
             max(coding_end) as max_coding_end, min(coding_end) as min_coding_end
      FROM &prefixFeatureLocation
      WHERE feature_type = 'ExonFeature'
        AND is_top_level = 1
      GROUP BY parent_id) coding_range,
     (SELECT nfc.na_feature_id,
             MAX(DBMS_LOB.SUBSTR(nfc.comment_string, 300, 1))
               AS comment_string
      FROM dots.NaFeatureComment nfc
      GROUP BY nfc.na_feature_id) cmnt,
     (select distinct gf.source_id, 1 as is_deprecated
      from dots.GeneFeature gf, dots.DbRefNaFeature drnf, sres.DbRef dr, sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
      where gf.na_feature_id = drnf.na_feature_id
        and drnf.db_ref_id = dr.db_ref_id
        and dr.external_database_release_id = edr.external_database_release_id
        and edr.external_database_id = ed.external_database_id
        and ed.name = 'deprecated genes') deprecated,
     (select sf.parent_id,count(*) as total_snps
      from dots.snpfeature sf, sres.externaldatabaserelease rel, sres.EXTERNALDATABASE d
      where d.name not in ('pfal3D7_SNP_Broad_gff_RSRC','Broad SNPs','Sanger falciparum SNPs', 'pfal3D7_SNP_sanger_ItGhana_gff_RSRC', 'Winzeler Array - Plasmodium Genetic Variation','pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC','X.Su SNPs','Pf_XSuSnps_RSRC','Sanger reichenowi SNPs','pfal3D7_SNP_sanger_PReichenowi_gff_RSRC')
      and d.external_database_id = rel.external_database_id
      and sf.external_database_release_id = rel.external_database_release_id
      and sf.parent_id is not null
      group by sf.parent_id) totsnps,
     (select sf.parent_id,count(*) as nonsyn_snps
      from dots.snpfeature sf, sres.externaldatabaserelease rel, sres.EXTERNALDATABASE d
      where d.name not in ('pfal3D7_SNP_Broad_gff_RSRC','Broad SNPs','Sanger falciparum SNPs','pfal3D7_SNP_sanger_ItGhana_gff_RSRC',
             'Winzeler Array - Plasmodium Genetic Variation','pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC','X.Su SNPs','pfal3D7_SNP_XSu_gff_RSRC','Sanger reichenowi SNPs','pfal3D7_SNP_sanger_PReichenowi_gff_RSRC')
        and d.external_database_id = rel.external_database_id
        and sf.external_database_release_id = rel.external_database_release_id
        and sf.parent_id is not null
        and sf.has_nonsynonymous_allele = 1
      group by sf.parent_id) nssnps,
     (select sf.parent_id,count(*) as syn_snps
      from dots.snpfeature sf, sres.externaldatabaserelease rel, sres.EXTERNALDATABASE d
      where d.name not in ('pfal3D7_SNP_Broad_gff_RSRC','Broad SNPs','Sanger falciparum SNPs','pfal3D7_SNP_sanger_ItGhana_gff_RSRC',
             'Winzeler Array - Plasmodium Genetic Variation','pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC','X.Su SNPs','pfal3D7_SNP_XSu_gff_RSRC','Sanger reichenowi SNPs','pfal3D7_SNP_sanger_PReichenowi_gff_RSRC')
        and d.external_database_id = rel.external_database_id
        and sf.external_database_release_id = rel.external_database_release_id
        and sf.parent_id is not null
        and sf.has_nonsynonymous_allele is null
        and sf.is_coding = 1
      group by sf.parent_id) synsnps,
     (  select gf.na_feature_id, sg.name
        from dots.genefeature gf, dots.sequencesequencegroup ssg, 
             dots.sequencegroup sg, Core.tableinfo ti
        where gf.na_feature_id = ssg.sequence_id
          and ssg.sequence_group_id = sg.sequence_group_id
          and ssg.source_table_id = ti.table_id
          and ti.name = 'GeneFeature'
       ) orthologs,
     (select na_feature_id, max(product) as product
      from apidb.GeneFeatureProduct
      where is_preferred = 1
      group by na_feature_id
     ) preferred_product,
     (select na_feature_id, max(product) as product
      from apidb.GeneFeatureProduct
      group by na_feature_id
     ) any_product,
     (select na_feature_id, max(name) as name
      from apidb.GeneFeatureName
      where is_preferred = 1
      group by na_feature_id
     ) preferred_name,
     (select na_feature_id, max(name) as name
      from apidb.GeneFeatureName
      group by na_feature_id
     ) any_name
WHERE gf.source_id = gene.source_id
  AND gf.na_feature_id = nl.na_feature_id
  AND nl.is_top_level = 1
  AND nl.na_sequence_id = sequence.na_sequence_id
  AND (sequence.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
  AND gf.sequence_ontology_id = so.sequence_ontology_id
  AND sequence.taxon_id = taxon.taxon_id
  AND sequence.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
  AND tn.taxon_id NOT IN
	 (SELECT o.taxon_id FROM apidb.organism o WHERE  o.is_annotated_genome=0)
  AND gf.source_id = protein.source_id(+)
  AND gf.source_id = go.source_id(+)
  AND gf.source_id = DerisiExpn.source_id(+)
  AND gf.source_id = WinzelerExpn.source_id(+)
  AND gf.source_id = ToxoExpn.source_id(+)
  AND t.na_sequence_id = sns.na_sequence_id(+)
  AND gf.na_feature_id = t.parent_id(+)
  AND t.na_feature_id = rt1.parent_id(+)
  AND gf.na_feature_id = rt2.parent_id(+)
  AND gf.external_database_release_id
       = edr.external_database_release_id
  AND edr.external_database_id = ed.external_database_id
  AND gf.na_feature_id = exons.parent_id(+)
  AND gf.na_feature_id = orthologs.na_feature_id(+)
  AND gf.na_feature_id = coding_range.parent_id(+)
  AND gf.na_feature_id = cmnt.na_feature_id(+)
  AND gf.source_id = deprecated.source_id(+)
  AND gf.na_feature_id = gi.na_feature_id(+)
  AND gf.na_feature_id = totsnps.parent_id(+)
  AND gf.na_feature_id = nssnps.parent_id(+)
  AND gf.na_feature_id = synsnps.parent_id(+)
  AND sequence.taxon_id = ts.taxon_id(+)
  AND ts.species_taxon_id = species_name.taxon_id
  AND species_name.name_class = 'scientific name'
  AND gf.na_feature_id = preferred_product.na_feature_id(+)
  AND gf.na_feature_id = preferred_name.na_feature_id(+)
  AND gf.na_feature_id = any_product.na_feature_id(+)
  AND gf.na_feature_id = any_name.na_feature_id(+)
  AND (gf.is_predicted != 1 OR gf.is_predicted is null)
  AND tn.name not in ('Plasmodium gallinaceum','Plasmodium reichenowi')
      ]]>
    </sql>
<!-- 
    <sql>
      <![CDATA[
create table GeneAttributesDuplicates nologging as
select ga.source_id, count(*) as id_count from &prefixGeneAttributes&1 ga
group by ga.source_id having count(*) > 1
      ]]>
    </sql>
-->
    <sql>
      <![CDATA[
create unique index GeneAttr_sourceId&1
       ON &prefixGeneAttributes&1 (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index GeneAttr_srcPrj&1
       ON &prefixGeneAttributes&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneAttr_exon_ix&1
       ON &prefixGeneAttributes&1 (exon_count, source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneAttr_loc_ix&1
       ON &prefixGeneAttributes&1 (na_sequence_id, start_min, end_max, is_reversed)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneAttr_feat_ix&1
       ON &prefixGeneAttributes&1 (na_feature_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneAttr_geneid_ix&1
       ON &prefixGeneAttributes&1 (gene_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneAttr_orthoname_ix&1
       ON &prefixGeneAttributes&1 (orthomcl_name, source_id, taxon_id, gene_type)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GeneAttr_ortholog_ix&1
       ON &prefixGeneAttributes&1 (source_id, na_sequence_id, start_min, end_max, orthomcl_name)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
  update &prefixGeneAttributes&1
  set exon_count = 1
  where exon_count > 1
   and project_id = 'TriTrypDB' 
   and source_id in (
                select source_id from &prefixGeneAttributes&1
              minus
                select source_id
                from (
                  select 'intron' as type, ga.source_id,
                          abs(rightLoc.start_min - leftLoc.end_max) as len
                  from dots.ExonFeature left, &prefixFeatureLocation leftLoc,
                       dots.ExonFeature right, &prefixFeatureLocation rightLoc,
                       &prefixGeneAttributes&1 ga
                  where left.parent_id = right.parent_id
                    and left.parent_id = ga.na_feature_id
                    and (left.order_number = right.order_number - 1
                         or left.order_number = right.order_number + 1)
                    and leftLoc.start_min < rightLoc.start_min
                    and left.na_feature_id = leftLoc.na_feature_id
                    and leftLoc.is_top_level = 1
                    and right.na_feature_id = rightLoc.na_feature_id
                    and rightLoc.is_top_level = 1
                   ) 
               group by source_id
               having min(len) > 10
           )
      ]]>
    </sql>
    <sql>
      <![CDATA[
update &prefixGeneAttributes&1 ga
set ga.orthomcl_name = (select distinct gb.orthomcl_name from &prefixGeneAttributes&1 gb
                     where gb.gene_id = ga.gene_id
                     and gb.orthomcl_name is not null
                     and gb.source_id != gb.orthomcl_name)
where ga.organism like 'Toxo%' 
and ga.orthomcl_name is null
      ]]>
    </sql>
    <sql>
      <![CDATA[
        update &prefixGeneAttributes&1
        set orthomcl_name = 'ORTH_' || gene_id || '.tmp'
        where orthomcl_name is null
        and gene_id is not null
      ]]>
    </sql>
    <sql>
      <![CDATA[
        update &prefixGeneAttributes&1
        set orthomcl_name = source_id
        where orthomcl_name is null
      ]]>
    </sql>
    <sql>
      <![CDATA[
       alter table &prefixGeneAttributes&1
       add (
            paralog_number number,
            ortholog_number number
            )
      ]]>
    </sql>
    <sql>
      <![CDATA[
       update &prefixGeneAttributes&1 set ortholog_number = 0,paralog_number = 0
      ]]>
    </sql>
    <sql>
      <![CDATA[
       update &prefixGeneAttributes&1 gaup
       set paralog_number = (select count(*)
                               from &prefixGeneAttributes&1 g1
                               where g1.orthomcl_name = gaup.orthomcl_name
                               and g1.organism = gaup.organism
                               and gaup.source_id != g1.source_id),
           ortholog_number = (select count(*)
                               from &prefixGeneAttributes&1 g1
                               where g1.orthomcl_name = gaup.orthomcl_name
                               and g1.organism != gaup.organism)
        where gaup.gene_type = 'protein coding'
      ]]>
    </sql>
<!--
This code will scale the context start and end so that ~ 10 genes appear in the genomic context;  it is breaking ... setting most to null;  This was added to help with the gbrwose popup/labels problems.... that is now a nonissue.   This code isn't as important
    <sql>
      <![CDATA[
    update &prefixGeneAttributes&1 gattr
    set (gattr.context_start, gattr.context_end) = (select nvl(context_start, gattr.context_start), 
                                                           nvl(context_end, gattr.context_end)
                                                    from (select ga.source_id, 
                                                                 round(ga.context_start + (least(ga.start_min, ga.end_max)- ga.context_start) * (10/count(*)) ) as context_start,
                                                                 round(ga.context_end - (ga.context_end - greatest(ga.start_min, ga.end_max)) * (10/count(*)) ) as context_end
                                                          from &prefixGeneAttributes&1 ga,
                                                               &prefixFeatureLocation fl
                                                          where fl.is_top_level =  1
                                                          and fl.feature_type =  'GeneFeature'
                                                          and ga.sequence_id = fl.sequence_source_id
                                                          and least(fl.start_min, fl.end_max) >= ga.context_start
                                                          and greatest(fl.start_min, fl.end_max) <= ga.context_end
                                                          group by ga.source_id, ga.context_start, ga.context_end, ga.start_min, ga.end_max
                                                          having count(*) > 10) gattrup
                                                    where gattrup.source_id = gattr.source_id
                                                    )
      ]]>
    </sql>
-->

  </tuningTable>

  <tuningTable name="GenomicSequence" prefixEnabled="true">
    <externalDependency name="dots.ExternalNaSequence"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.SequenceOntology"/>
    <sql>
      <![CDATA[
CREATE TABLE &prefixGenomicSequence&1 NOLOGGING AS
  SELECT ens.na_sequence_id, ens.taxon_id,
         SUBSTR(ens.source_id, 1, 50) AS source_id,
         LOWER(SUBSTR(ens.source_id, 1, 50)) AS lowercase_source_id,
         ens.a_count, ens.c_count, ens.g_count, ens.t_count, ens.length,
         SUBSTR(ens.description, 1, 400) AS description,
         ens.external_database_release_id,
         SUBSTR(ens.chromosome, 1, 40) AS chromosome,
         ens.chromosome_order_num, ens.sequence_ontology_id
  FROM dots.ExternalNaSequence ens, sres.SequenceOntology so
  WHERE ens.sequence_ontology_id = so.sequence_ontology_id
    AND so.term_name != 'EST'
    AND so.term_name != 'oligo'
    AND (ens.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
    AND -- see both? use the VirtualSequence.
        ens.source_id IN (SELECT source_id FROM dots.ExternalNaSequence
                         MINUS
                          SELECT source_id FROM dots.VirtualSequence)
UNION
  SELECT na_sequence_id, taxon_id, SUBSTR(source_id, 1, 50) AS source_id,
         LOWER(SUBSTR(source_id, 1, 50)) AS lowercase_source_id,
         a_count, c_count, g_count, t_count, length,
         SUBSTR(description, 1, 400) AS description,
         external_database_release_id, SUBSTR(chromosome, 1, 40) AS chromosome,
         chromosome_order_num, sequence_ontology_id
  FROM dots.VirtualSequence
  WHERE (taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GS_sourceId&1 ON &prefixGenomicSequence&1 (source_id, na_sequence_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GS_lcSourceId&1 ON &prefixGenomicSequence&1 (lowercase_source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GS_naSeqId&1 ON &prefixGenomicSequence&1 (na_sequence_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SequenceAttributes" prefixEnabled="true">
    <internalDependency name="GenomicSequence"/>
    <internalDependency name="SequencePieceClosure"/>
    <externalDependency name="dots.DbRefNaSequence"/>
    <externalDependency name="sres.DbRef"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.SequenceOntology"/>
    <externalDependency name="sres.Taxon"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE &prefixSequenceAttributes&1 NOLOGGING AS
SELECT cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       SUBSTR(sequence.source_id, 1, 60) AS source_id, sequence.a_count,
       sequence.c_count, sequence.g_count, sequence.t_count,
       (sequence.length
        - (sequence.a_count + sequence.c_count + sequence.g_count + sequence.t_count))
         AS other_count,
       sequence.length,
       to_char((sequence.a_count + sequence.t_count) / sequence.length * 100, '99.99')
         AS at_percent,
       SUBSTR(tn.name, 1, 100) AS organism,
       taxon.ncbi_tax_id,
       taxon.taxon_id,                 
       CASE WHEN sequence.description IS NULL  THEN SUBSTR(tn.name, 1, 100)
            ELSE SUBSTR(sequence.description, 1, 400)
            END AS sequence_description,
       SUBSTR(genbank.genbank_accession, 1, 20) AS genbank_accession,
       SUBSTR(db.database_version, 1, 30) AS database_version, db.database_name,
       SUBSTR(sequence.chromosome, 1, 20) AS chromosome,
       sequence.chromosome_order_num, so.so_id,
       nvl(virtualization.is_top_level, 1) as is_top_level,
       sequence.na_sequence_id
FROM sres.TaxonName tn, sres.Taxon, sres.SequenceOntology so,
     &prefixGenomicSequence sequence,
     (SELECT drns.na_sequence_id, max(dr.primary_identifier) AS genbank_accession
      FROM dots.dbrefNaSequence drns, sres.DbRef dr,
           sres.ExternalDatabaseRelease gb_edr, sres.ExternalDatabase gb_ed
      WHERE drns.db_ref_id = dr.db_ref_id
        AND dr.external_database_release_id
            = gb_edr.external_database_release_id
        AND gb_edr.external_database_id = gb_ed.external_database_id
        AND gb_ed.name = 'GenBank'
      GROUP BY drns.na_sequence_id) genbank,
     (SELECT edr.external_database_release_id,
             edr.version AS database_version, ed.name AS database_name
      FROM sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr
      WHERE edr.external_database_id = ed.external_database_id) db,
     (SELECT distinct piece_na_sequence_id, 0 as is_top_level
      FROM &prefixSequencePieceClosure) virtualization
WHERE sequence.taxon_id = tn.taxon_id(+)
  AND (sequence.taxon_id = '&filterValue' or nvl('&filterValue', 0) = 0)
  AND tn.name_class = 'scientific name'
  AND sequence.taxon_id = taxon.taxon_id
  AND sequence.sequence_ontology_id = so.sequence_ontology_id
  AND so.term_name IN ('chromosome', 'contig', 'supercontig','mitochondrial_chromosome','plastid_sequence','cloned_genomic','apicoplast_chromosome')
  AND sequence.na_sequence_id = genbank.na_sequence_id(+)
  AND sequence.external_database_release_id = db.external_database_release_id(+)
  AND sequence.na_sequence_id = virtualization.piece_na_sequence_id(+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index pk_SeqAttr_&1 ON &prefixSequenceAttributes&1 (lower(source_id), project_id)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index SeqAttr_source_id&1 ON &prefixSequenceAttributes&1 (source_id)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index SeqAttr_naseqid&1 ON &prefixSequenceAttributes&1 (na_sequence_id)
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SnpAttributes">
    <internalDependency name="FeatureLocation"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.Taxon"/>
    <externalDependency name="sres.TaxonName"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <sql>
      <![CDATA[
CREATE TABLE SnpAttributes&1 NOLOGGING AS
SELECT cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       snp.source_id,
       snp.na_feature_id,
       ed.name AS dataset,
       decode(ed.name,'InsertSnps.pm NGS SNPs INTERNAL','HTS','Other') as type,
       sequence.na_sequence_id,
       sequence.source_id AS seq_source_id,
       snp_loc.start_min,
       SUBSTR(snp.reference_strain, 1, 200) AS reference_strain,
       SUBSTR(snp.reference_na, 1, 200) AS reference_na,
       DECODE(snp.is_coding, 0, 'no', 1, 'yes') AS is_coding,
       snp.position_in_CDS,
       snp.position_in_protein,
       SUBSTR(snp.reference_aa, 1, 200) AS reference_aa,
       DECODE(snp.has_nonsynonymous_allele, 0, 'no', 1, 'yes')
         AS has_nonsynonymous_allele,
       SUBSTR(snp.major_allele, 1, 40) AS major_allele,
       SUBSTR(snp.major_product, 1, 40) AS major_product,
       SUBSTR(strain_info.minor_allele, 1, 40) AS minor_allele,
       SUBSTR(strain_info.minor_product, 1, 40) AS minor_product,
       strain_info.major_strains,strain_info.minor_strains,
       snp.major_allele_count, 
       round(snp.major_allele_count / (snp.major_allele_count + snp.minor_allele_count),2) as major_allele_frequency,
       snp.minor_allele_count,
       round(snp.minor_allele_count / (snp.major_allele_count + snp.minor_allele_count),2) as minor_allele_frequency,
       snp.major_allele_count + snp.minor_allele_count as strain_count,
       SUBSTR(snp.strains, 1, 1000) AS strains,
       SUBSTR(snp.strains_revcomp, 1, 1000) AS strains_revcomp,
       gene_info.source_id AS gene_source_id,
       DECODE(gene_info.is_reversed, 0, 'forward', 1, 'reverse')
         AS gene_strand,
       SUBSTR(DBMS_LOB.SUBSTR(sequence.sequence, 60, snp_loc.start_min - 60), 1, 60)
         AS lflank,
       SUBSTR(DBMS_LOB.SUBSTR(sequence.sequence, 60, snp_loc.start_min + 1), 1, 60)
         AS rflank,
       SUBSTR(tn.name, 1, 100) AS organism,
       taxon.ncbi_tax_id,
       SUBSTR(chromosome_info.chromosome, 1, 20) AS chromosome,
       chromosome_info.chromosome_order_num
FROM dots.SnpFeature snp, FeatureLocation snp_loc,
     sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr, sres.Taxon,
     sres.TaxonName tn, dots.NaSequence sequence,
     (SELECT gene.source_id, gene_loc.is_reversed, gene.na_feature_id,
             gene_loc.na_sequence_id
      FROM dots.GeneFeature gene, FeatureLocation gene_loc
      WHERE gene.na_feature_id = gene_loc.na_feature_id
            and gene_loc.is_top_level = 1) gene_info,
     (SELECT na_sequence_id, chromosome, chromosome_order_num
      FROM dots.ExternalNaSequence
     UNION
      SELECT na_sequence_id, chromosome, chromosome_order_num
      FROM dots.VirtualSequence
     UNION
      SELECT na_sequence_id, null as chromosome, null as chromosome_order_num
      FROM dots.NaSequence
      WHERE subclass_view not in ('ExternalNASequence', 'VirtualSequence')
     ) chromosome_info,
     (select sf.na_feature_id, 
             apidb.tab_to_string(set(cast(COLLECT(distinct CASE WHEN sv.allele != sf.major_allele THEN sv.allele END order by sv.allele) as apidb.varchartab)), ', ') as minor_allele,                
             apidb.tab_to_string(set(cast(COLLECT(distinct CASE WHEN sv.allele != sf.major_allele THEN sv.product END order by sv.product) as apidb.varchartab)), ', ') as minor_product,
             apidb.tab_to_string(set(cast(COLLECT(CASE WHEN sv.allele != sf.major_allele THEN sv.strain END order by sv.strain) as apidb.varchartab)), ', ') as minor_strains,
             apidb.tab_to_string(set(cast(COLLECT(CASE WHEN sv.allele = sf.major_allele THEN sv.strain END order by sv.strain) as apidb.varchartab)), ', ') as major_strains
      from dots.SNPFEATURE sf, dots.SEQVARIATION sv
      where sv.parent_id = sf.na_feature_id
      group by sf.na_feature_id) strain_info
WHERE edr.external_database_release_id = snp.external_database_release_id
  AND ed.external_database_id = edr.external_database_id
  AND sequence.taxon_id = taxon.taxon_id
  AND sequence.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
  AND snp_loc.na_feature_id = snp.na_feature_id
  AND snp_loc.is_top_level = 1
  AND sequence.na_sequence_id = snp_loc.na_sequence_id
  AND chromosome_info.na_sequence_id = snp_loc.na_sequence_id
  and strain_info.na_feature_id = snp.na_feature_id
  AND gene_info.na_feature_id(+) = snp.parent_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index SnpAttr_source_id&1 ON SnpAttributes&1 (source_id)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Snp_nafeat_dataset_ix&1
       ON SnpAttributes&1 (na_feature_id, dataset)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Snp_Seq_ix&1
       ON SnpAttributes&1 (na_sequence_id, dataset, start_min, na_feature_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Snp_Freq_ix&1
       ON SnpAttributes&1 (dataset,strain_count,major_allele_frequency,minor_allele_frequency)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index SnpAttr_ds_org_ix&1 on snpattributes&1 (dataset,organism,na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="OrfAttributes">
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="GenomicSequence"/>
    <externalDependency name="dots.AaFeatureImp"/>
    <externalDependency name="dots.AaSequenceImp"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.SequenceOntology"/>
    <externalDependency name="sres.Taxon"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE OrfAttributes&1 NOLOGGING AS
SELECT distinct
       cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       SUBSTR(m.source_id, 1, 60) AS source_id,
       LOWER(SUBSTR(m.source_id, 1, 60)) AS lowercase_source_id,
       SUBSTR(tn.name, 1, 100) AS organism,
       taxon.ncbi_tax_id,
       SUBSTR(sequence.source_id, 1, 30) AS nas_id,
       tas.length,
       nl.start_min, nl.end_max, nl.is_reversed,
       SUBSTR(sequence.chromosome, 1, 20) AS chromosome,
       sequence.chromosome_order_num, sequence.na_sequence_id
FROM dots.Miscellaneous m, dots.TranslatedAaFeature taaf,
     dots.TranslatedAaSequence tas, sres.Taxon, sres.TaxonName tn,
     sres.SequenceOntology so, FeatureLocation nl,
     -- subquery for sequence. Can't just use GenomicSequence,
     -- which only contains records eligible to be the result of a sequence search.
     -- ORFs can be on other sequences, such as ESTs in cryptodb.
     (  select gs.na_sequence_id, gs.source_id, gs.chromosome, gs.chromosome_order_num, gs.taxon_id
        from GenomicSequence gs
      union
        select ens.na_sequence_id, ens.source_id, ens.chromosome, ens.chromosome_order_num, ens.taxon_id
        from dots.ExternalNaSequence ens
        where ens.na_sequence_id in (select distinct na_sequence_id from dots.Miscellaneous
                                  minus select na_sequence_id
                                        from GenomicSequence)) sequence
WHERE m.na_feature_id = taaf.na_feature_id
  AND taaf.aa_sequence_id = tas.aa_sequence_id
  AND sequence.na_sequence_id = nl.na_sequence_id
  AND sequence.taxon_id = tn.taxon_id
  AND sequence.taxon_id = taxon.taxon_id
  AND m.sequence_ontology_id = so.sequence_ontology_id
  AND m.na_feature_id = nl.na_feature_id
  AND nl.is_top_level = 1
  AND so.term_name = 'ORF'
  AND tn.name_class='scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index OrfAttr_source_id&1 ON OrfAttributes&1 (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index OrfAttr_location_idx&1 ON OrfAttributes&1 (na_sequence_id, start_min, end_max, is_reversed)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="EstAttributes">
    <externalDependency name="dots.AssemblySequence"/>
    <externalDependency name="dots.BlatAlignment"/>
    <externalDependency name="dots.Est"/>
    <externalDependency name="dots.Library"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.SequenceOntology"/>
    <externalDependency name="sres.Taxon"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE EstAttributes&1 NOLOGGING AS
SELECT cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       ens.source_id,
       e.seq_primer AS primer,
       ens.a_count,
       ens.c_count,
       ens.g_count,
       ens.t_count,
       (ens.length - (ens.a_count + ens.c_count + ens.g_count + ens.t_count))
         AS other_count,
       ens.length,
       l.dbest_name,
       nvl(regexp_replace(l.vector, '^\s+$', null), 'unknown') AS vector,
       nvl(regexp_replace(l.stage, '^\s+$', null), 'unknown') AS stage,
       SUBSTR(CASE
                WHEN tn.name = 'Giardia lamblia' THEN 'Giardia Assemblage A isolate WB' 
                ELSE tn.name
              END, 1, 100) AS organism,
       taxon.ncbi_tax_id,
       ed.name AS external_db_name,
       nvl(best.best_alignment_count, 0) AS best_alignment_count,
       l.library_id, l.dbest_name as library_dbest_name,
       aseq.assembly_na_sequence_id, asm.source_id as assembly_source_id,
       asm.number_of_contained_sequences AS assembly_est_count
FROM dots.Est e, dots.ExternalNaSequence ens, dots.Library l, sres.Taxon,
     sres.TaxonName tn, sres.ExternalDatabase ed,
     sres.ExternalDatabaseRelease edr, sres.SequenceOntology so,
     dots.AssemblySequence aseq, dots.Assembly asm,
     (select query_na_sequence_id,max(ct) as best_alignment_count
      from (
            SELECT query_na_sequence_id, COUNT(*) AS ct
             FROM dots.BlatAlignment ba
             WHERE is_best_alignment = 1
             GROUP BY target_external_db_release_id,query_na_sequence_id)
      group by query_na_sequence_id) best
WHERE e.na_sequence_id = ens.na_sequence_id
  AND e.library_id = l.library_id
  AND ens.taxon_id = tn.taxon_id
  AND ens.taxon_id = taxon.taxon_id
  AND tn.name_class='scientific name'
  AND ens.external_database_release_id = edr.external_database_release_id
  AND edr.external_database_id = ed.external_database_id
  AND ens.sequence_ontology_id = so.sequence_ontology_id
  AND so.term_name = 'EST'
  AND best.query_na_sequence_id(+) = ens.na_sequence_id
  AND ens.na_sequence_id = aseq.na_sequence_id(+)
  AND aseq.assembly_na_sequence_id = asm.na_sequence_id(+)
AND aseq.row_alg_invocation_id != 678
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index EstAttr_source_id&1 ON EstAttributes&1 (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index EstAttr_seqsrc_id&1 ON EstAttributes&1 (assembly_source_id, source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="BlatAlignmentLocation">
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="dots.blatalignment"/>

    <sql>
      <![CDATA[ 
     delete from dots.blatalignment 
           where query_na_sequence_id in 
                (select s.na_sequence_id
                from sres.externaldatabase d, sres.externaldatabaserelease r, dots.externalnasequence s
                where d.external_database_id = r.external_database_id
                 and s.external_database_release_id = r.external_database_release_id
                 and d.name in ('Tcruzi_BACEnds_RSRC',
                                'Tbrucei_Genbank_BACEnds_RSRC',
                                'Lmajor_sanger_BACEnds_RSRC',
                                'Lmajor_sanger_PACEnds_RSRC',
                                'Lmajor_sanger_CosmidEnds_RSRC')
            ) and is_best_alignment != 1
      ]]> 
    </sql>
    <sql>
      <![CDATA[ 
      CREATE TABLE BlatAlignmentLocation&1 NOLOGGING AS
      SELECT blat_alignment_id, query_na_sequence_id, target_na_sequence_id,
             query_table_id, query_taxon_id, query_external_db_release_id,
             target_table_id, target_taxon_id, target_external_db_release_id,
             is_consistent, is_genomic_contaminant, unaligned_3p_bases,
             unaligned_5p_bases, has_3p_polya, has_5p_polya, is_3p_complete,
             is_5p_complete, percent_identity, max_query_gap, max_target_gap,
             number_of_spans, query_start, query_end, target_start, target_end,
             is_reversed, query_bases_aligned, repeat_bases_aligned, num_ns, score,
             is_best_alignment, blat_alignment_quality_id, blocksizes, qstarts,
             tstarts, cast('direct' as varchar2(7)) as location_mapping
      FROM dots.BlatAlignment
      ]]> 
    </sql>
    <perl>
      <![CDATA[ 
      use strict;
      use lib "$ENV{GUS_HOME}/lib/perl";

      my $sql = <<SQL;
        select blat_alignment_id, query_na_sequence_id, target_na_sequence_id,
               query_table_id, query_taxon_id, query_external_db_release_id, 
               target_table_id, target_taxon_id, target_external_db_release_id,
               is_consistent, is_genomic_contaminant, unaligned_3p_bases,
               unaligned_5p_bases, has_3p_polya, has_5p_polya, is_3p_complete,
               is_5p_complete, percent_identity, max_query_gap, max_target_gap,
               number_of_spans, query_start, query_end, target_start, target_end,
               is_reversed, query_bases_aligned, repeat_bases_aligned, num_ns, score,
               is_best_alignment, blat_alignment_quality_id, blocksizes, qstarts,
               tstarts, sp.virtual_na_sequence_id, sp.distance_from_left, sp.start_position, sp.end_position,
               sp.strand_orientation, piece.length, vti.table_id as virtual_target_table_id
        from dots.BlatAlignment ba, SequencePieceClosure sp, dots.NaSequence piece,
             dots.NaSequence virtualseq, core.TableInfo vti
        where ba.target_na_sequence_id = sp.piece_na_sequence_id(+)
          and sp.start_position <= target_start
          and sp.end_position >= target_end
          and ba.target_na_sequence_id = piece.na_sequence_id
          and sp.virtual_na_sequence_id = virtualseq.na_sequence_id
          and virtualseq.subclass_view = vti.name
SQL
      
      my $queryHandle = $dbh->prepare($sql) or die $dbh->errstr;
      $queryHandle->execute();

      $sql = <<SQL;
        insert into BlatAlignmentLocation&1(blat_alignment_id,
               query_na_sequence_id, target_na_sequence_id,
               query_table_id, query_taxon_id, query_external_db_release_id, 
               target_table_id, target_taxon_id, target_external_db_release_id,
               is_consistent, is_genomic_contaminant, unaligned_3p_bases,
               unaligned_5p_bases, has_3p_polya, has_5p_polya, is_3p_complete,
               is_5p_complete, percent_identity, max_query_gap, max_target_gap,
               number_of_spans, query_start, query_end, target_start, target_end,
               is_reversed, query_bases_aligned, repeat_bases_aligned, num_ns, score,
               is_best_alignment, blat_alignment_quality_id, blocksizes, qstarts,
               tstarts, location_mapping)
         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                 ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)
SQL

      my $insertHandle = $dbh->prepare($sql) or die $dbh->errstr;
      my ($virtual_target_start, $virtual_target_end, $virtual_tstarts);

      while (my ($blat_alignment_id, $query_na_sequence_id, $target_na_sequence_id,
               $query_table_id, $query_taxon_id, $query_external_db_release_id,
               $target_table_id, $target_taxon_id, $target_external_db_release_id,
               $is_consistent, $is_genomic_contaminant, $unaligned_3p_bases,
               $unaligned_5p_bases, $has_3p_polya, $has_5p_polya, $is_3p_complete,
               $is_5p_complete, $percent_identity, $max_query_gap, $max_target_gap,
               $number_of_spans, $query_start, $query_end, $target_start, $target_end,
               $is_reversed, $query_bases_aligned, $repeat_bases_aligned, $num_ns, $score,
               $is_best_alignment, $blat_alignment_quality_id, $blocksizes, $qstarts,
               $tstarts, $virtual_na_sequence_id, $distance_from_left, $start_position, $end_position,
               $strand_orientation, $length, $virtual_target_table_id)
             = $queryHandle->fetchrow_array()) {

        if ($virtual_na_sequence_id) {
          if ($strand_orientation eq '-') {
            $virtual_target_start = $distance_from_left + $end_position - $target_end + 1;
            $virtual_target_end = $distance_from_left + $end_position - $target_start + 1;
            $virtual_tstarts = &getReversedTstarts($distance_from_left,$end_position,$tstarts,$blocksizes);
            $blocksizes = join(',', reverse split(',', $blocksizes));
          } else {
            $virtual_target_start = $target_start + $distance_from_left - $start_position + 1;
            $virtual_target_end = $target_end + $distance_from_left - $start_position + 1;
            $virtual_tstarts = join( ',', map{ $_ + $distance_from_left - $start_position + 1 } split( /,/, $tstarts));
          }

          # insert virtual locations
          $insertHandle->execute($blat_alignment_id,
                 $query_na_sequence_id, $virtual_na_sequence_id,
                 $query_table_id, $query_taxon_id, $query_external_db_release_id,
                 $virtual_target_table_id, $target_taxon_id, $target_external_db_release_id,
                 $is_consistent, $is_genomic_contaminant, $unaligned_3p_bases,
                 $unaligned_5p_bases, $has_3p_polya, $has_5p_polya, $is_3p_complete,
                 $is_5p_complete, $percent_identity, $max_query_gap, $max_target_gap,
                 $number_of_spans, $query_start, $query_end, $virtual_target_start,
                 $virtual_target_end,
                 $is_reversed, $query_bases_aligned, $repeat_bases_aligned, $num_ns, $score,
                 $is_best_alignment, $blat_alignment_quality_id, $blocksizes, $qstarts,
                 $virtual_tstarts, 'virtual');
        }
      }

      $insertHandle->finish();
      $queryHandle->finish();

sub getReversedTstarts {
  my($dfl,$len,$tstart,$blocksizes) = @_;
  my @ts = split(',',$tstart);
  my @bs = split(',',$blocksizes);
  my @new;
  for(my $a = scalar(@ts) - 1;$a >= 0;$a--){
    push(@new,($dfl + $len - $ts[$a] - $bs[$a] + 2));
  }
  return join(',',@new);
}
      ]]> 
    </perl>
  </tuningTable>


  <tuningTable name="GeneNeighbors">
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE GeneNeighbors&1 AS 
SELECT a.prev_id, a.source_id, b.next_id
FROM
(SELECT  ga.source_id, ga2.source_id AS prev_id
 FROM GeneAttributes ga, GeneAttributes ga2,
  (SELECT max(prev.end_max) AS alpha, ga.source_id
   FROM GeneAttributes ga, GeneAttributes  prev
   WHERE ga.na_sequence_id = prev.na_sequence_id 
   AND prev.end_max < ga.start_min  GROUP BY ga.source_id) sub
 WHERE ga.source_id = sub.source_id
 AND ga2.end_max = sub.alpha
 AND ga.na_sequence_id = ga2.na_sequence_id
 UNION
 SELECT  source_id, 'null' as prev_id 
 FROM (
  SELECT ga.na_sequence_id , ga.source_id
  FROM GeneAttributes ga, 
    (SELECT min(start_min) as min_start_min, na_sequence_id
     FROM GeneAttributes
     GROUP BY na_sequence_id) sub
  WHERE ga.na_sequence_id = sub.na_sequence_id
  AND ga.start_min = sub.min_start_min )
) a,
(SELECT ga.source_id, ga2.source_id as next_id
 FROM GeneAttributes ga, GeneAttributes ga2,
  (SELECT min(nxt.start_min) AS alpha, ga.source_id
   FROM GeneAttributes ga, GeneAttributes  nxt
   WHERE ga.na_sequence_id = nxt.na_sequence_id 
   AND nxt.start_min > ga.end_max group by ga.source_id) sub
 WHERE ga.source_id = sub.source_id
 AND ga2.start_min = sub.alpha
 AND ga.na_sequence_id = ga2.na_sequence_id
 UNION
 SELECT  source_id, 'null' as next_id
 FROM (
   SELECT ga.na_sequence_id , ga.source_id, 0 as alpha
   FROM GeneAttributes ga, 
     (SELECT max(end_max) AS max_end_max, na_sequence_id
      FROM GeneAttributes
      GROUP BY na_sequence_id)  sub
   WHERE ga.na_sequence_id = sub.na_sequence_id
   AND ga.end_max = sub.max_end_max )
) b
WHERE a.source_id = b.source_id
ORDER BY a.source_id
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="EstAlignmentGeneSummary">
    <internalDependency name="GenomicSequence"/>
    <internalDependency name="GeneAttributes"/>
    <internalDependency name="BlatAlignmentLocation"/>
    <externalDependency name="dots.AssemblySequence"/>
    <externalDependency name="dots.BlatAlignment"/>
    <externalDependency name="dots.Est"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.SequenceOntology"/>
    <intermediateTable name="EstAlignmentGene"/>
    <intermediateTable name="EstAlignmentNoGene"/>
    <sql>
      <![CDATA[
CREATE TABLE EstAlignmentGene NOLOGGING AS
SELECT ba.blat_alignment_id, ba.query_na_sequence_id, e.accession,
         e.library_id, ba.query_taxon_id, ba.target_na_sequence_id,
         ba.target_taxon_id, ba.percent_identity, ba.is_consistent,
         ba.is_best_alignment, ba.is_reversed, ba.target_start, ba.target_end,
         sequence.source_id AS target_sequence_source_id,
         least(ba.target_end, ga.end_max)
         - greatest(ba.target_start, ga.start_min) + 1
           AS est_gene_overlap_length,
         ba.query_bases_aligned / (query_sequence.length)
         * 100 AS percent_est_bases_aligned,
         ga.source_id AS gene
  FROM BlatAlignmentLocation ba, dots.est e, dots.AssemblySequence aseq,
       GeneAttributes ga, GenomicSequence sequence,
       dots.NaSequence query_sequence, sres.SequenceOntology so
  WHERE e.na_sequence_id = ba.query_na_sequence_id
    AND aseq.na_sequence_id = ba.query_na_sequence_id
    AND sequence.na_sequence_id = ba.target_na_sequence_id
    AND ga.sequence_id = sequence.source_id
    AND least(ba.target_end, ga.end_max) - greatest(ba.target_start, ga.start_min) >= 0
    AND query_sequence.na_sequence_id = ba.query_na_sequence_id
    AND query_sequence.sequence_ontology_id = so.sequence_ontology_id
    AND so.term_name = 'EST'
    AND ba.target_na_sequence_id = sequence.na_sequence_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE EstAlignmentNoGene NOLOGGING AS
SELECT * from EstAlignmentGene WHERE 1=0 UNION -- define datatype for null column
SELECT ba.blat_alignment_id, ba.query_na_sequence_id, e.accession,
       e.library_id, ba.query_taxon_id, ba.target_na_sequence_id,
       ba.target_taxon_id, ba.percent_identity, ba.is_consistent,
       ba.is_best_alignment, ba.is_reversed, ba.target_start, ba.target_end,
       sequence.source_id AS target_sequence_source_id,
       NULL AS est_gene_overlap_length,
       ba.query_bases_aligned / (query_sequence.length)
       * 100 AS percent_est_bases_aligned,
       NULL AS gene
FROM dots.blatalignment ba, dots.est e, dots.AssemblySequence aseq,
     dots.NaSequence sequence, dots.NaSequence query_sequence
WHERE e.na_sequence_id = ba.query_na_sequence_id
  AND e.na_sequence_id = query_sequence.na_sequence_id
  AND aseq.na_sequence_id = ba.query_na_sequence_id
  AND ba.target_na_sequence_id = sequence.na_sequence_id
  AND ba.blat_alignment_id IN
   ( -- set of blat_alignment_ids not in in first leg of UNION
    -- (because they overlap no genes)
    SELECT ba.blat_alignment_id
    FROM dots.BlatAlignment ba, dots.NaSequence query_sequence,
         sres.SequenceOntology so
    WHERE query_sequence.na_sequence_id = ba.query_na_sequence_id
      AND query_sequence.sequence_ontology_id = so.sequence_ontology_id
      AND so.term_name = 'EST'
  MINUS
    SELECT blat_alignment_id FROM EstAlignmentGene)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE EstAlignmentGeneSummary&1 NOLOGGING AS
SELECT * FROM EstAlignmentNoGene
UNION
SELECT * FROM EstAlignmentGene
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index EstSumm_libOverlap_ix&1
             ON EstAlignmentGeneSummary&1
                (library_id, percent_identity, is_consistent,
                 est_gene_overlap_length, percent_est_bases_aligned)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index EstSumm_estSite_ix&1
             ON EstAlignmentGeneSummary&1
                (target_sequence_source_id, target_start, target_end,
                 library_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="FeatureSo">
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="sres.SequenceOntology"/>
    <sql>
      <![CDATA[
CREATE TABLE FeatureSo&1 NOLOGGING AS
  SELECT t.na_feature_id, so.sequence_ontology_id, so.term_name
  FROM dots.NaFeature gf, dots.NaFeature t, sres.SequenceOntology so
  WHERE  gf.na_feature_id =  t.parent_id
  AND gf.sequence_ontology_id = so.sequence_ontology_id
UNION
  SELECT na_feature_id, so.sequence_ontology_id, so.term_name
  FROM dots.Miscellaneous misc, sres.SequenceOntology so
  WHERE misc.sequence_ontology_id = so.sequence_ontology_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX featso_id_ix&1 ON FeatureSo&1(na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SnpStrains">
    <internalDependency name="SequenceAttributes"/>
    <externalDependency name="dots.SnpFeature"/>
    <externalDependency name="dots.SeqVariation"/>
    <sql>
      <![CDATA[
CREATE TABLE SnpStrains&1 NOLOGGING AS
  SELECT distinct sv.strain,
                  sa.organism,
                  sf.external_database_release_id,
                  CASE WHEN d.name='pfal3D7_SNP_sanger_PReichenowi_gff_RSRC' THEN 1
                       WHEN d.name='pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC' THEN 0
                       WHEN d.name='pfal3D7_SNP_sanger_ItGhana_gff_RSRC' THEN 0
                       WHEN d.name='pfal3D7_SNP_Broad_gff_RSRC' THEN 0
                       WHEN d.name='pfal3D7_SNP_XSu_gff_RSRC' THEN 0
                       WHEN d.name='InsertSnps.pm NGS SNPs INTERNAL' THEN 0
                       ELSE 1 
                  END as is_queryable,
                  d.name as extdb_name
  FROM   DoTS.SnpFeature sf, 
         DoTS.SeqVariation sv, 
         SequenceAttributes sa,
         SRES.externaldatabase d, 
         SRES.externaldatabaserelease rel
  WHERE sa.na_sequence_id = sf.na_sequence_id
    AND sf.na_feature_id = sv.parent_id
    AND sf.external_database_release_id = rel.external_database_release_id
    AND rel.external_database_id = d.external_database_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
        CREATE INDEX SnpStrains_ix&1 ON SnpStrains&1(extdb_name,external_database_release_id,strain,organism)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Polymorphism">
    <internalDependency name="FeatureLocation"/>
    <externalDependency name="dots.SnpFeature"/>
    <externalDependency name="dots.SeqVariation"/>
    <sql>
      <![CDATA[
CREATE TABLE Polymorphism&1 NOLOGGING AS
  SELECT snp.na_feature_id AS snp_na_feature_id, fl.na_sequence_id,
         fl.start_min AS start_min,
         snp.source_id AS snp_source_id,
         snp.position_in_protein,
         sa.na_feature_id as na_feature_id_a,
         sb.na_feature_id as na_feature_id_b,
         substr(sa.strain, 1, 100) AS strain_a,
         substr(sb.strain, 1, 100) AS strain_b,
         substr(sa.allele, 1, 1) AS allele_a,
         substr(sb.allele, 1, 1) AS allele_b,
         substr(sa.product, 1, 1) AS product_a,
         substr(sb.product, 1, 1) AS product_b,
         sa.coverage as coverage_a, sb.coverage as coverage_b,
         sa.allele_percent as allele_percent_a, sb.allele_percent as allele_percent_b,
         sa.pvalue as pvalue_a, sb.pvalue as pvalue_b,
         snp.external_database_release_id,
         snp.parent_id as gene_na_feature_id,
         nl.is_reversed as gene_is_reversed, gf.source_id as gene_source_id,
         case when sa.product is null then 1 else 0 end as is_non_coding,
         case when sa.product = sb.product then 1 else 0 end as is_synonymous,
         case when sa.product != sb.product then 1 else 0 end as is_non_synonymous,
         case when sa.product = '*' OR  sb.product = '*' then 1 else 0 end as is_stop
  FROM dots.SnpFeature snp, dots.SeqVariation sa, dots.SeqVariation sb,
       FeatureLocation fl, FeatureLocation nl, dots.GeneFeature gf
  WHERE (sa.strain < sb.strain OR (sa.strain = sb.strain AND sa.na_feature_id < sb.na_feature_id) )
    AND sa.allele != sb.allele
    AND sa.parent_id = sb.parent_id
    AND sa.parent_id = snp.na_feature_id
    AND snp.na_feature_id = fl.na_feature_id
    AND fl.parent_id = nl.na_feature_id (+)
    AND fl.na_sequence_id = nl.na_sequence_id (+)
    AND snp.parent_id = gf.na_feature_id (+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX polymorphism_ix&1 ON Polymorphism&1(na_sequence_id, strain_a, strain_b, start_min)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX polymorphism_loc_ix&1
ON Polymorphism&1(external_database_release_id, na_sequence_id, strain_a, strain_b, start_min, pvalue_a, allele_percent_a, coverage_a, pvalue_b, allele_percent_b, coverage_b)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index polymorph_htsgene_ix&1
on Polymorphism&1(external_database_release_id, strain_a, strain_b, start_min, pvalue_a, allele_percent_a,
                  coverage_a, pvalue_b, allele_percent_b, coverage_b, is_non_coding, is_synonymous,
                  is_non_synonymous, is_stop, gene_source_id, snp_na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="IsolateAttributes">
    <externalDependency name="study.study"/>
    <externalDependency name="study.biosource"/>
    <externalDependency name="study.biomaterialcharacteristic"/>
    <externalDependency name="rad.studybiomaterial"/>
    <externalDependency name="study.ontologyentry"/>
    <externalDependency name="apidb.isolatevocabulary"/>
    <externalDependency name="apidb.vocabularybiomaterial"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <sql>
      <![CDATA[
CREATE TABLE IsolateAttributes&1 NOLOGGING AS
select null as na_sequence_id,
       null as na_feature_id,
       b.bio_material_id,
       o.taxon_id,
       edr.version as external_db_version,
       ed.name as external_db_name,
       b.source_id,
       nvl(o.name, 'Unknown') as organism,
       nvl(strain.value, 'Unknown') as strain,
       nvl(host.value, 'Unknown') as specific_host,
       nvl(isolation_source.value, 'Unknown') as isolation_source,
       nvl(geographic_location.value, 'Unknown') as geographic_location,
      'N/A' as product,
       null as note,
       b.description,
       null as is_reference,
       project.project_id,
       'HTS' as data_type,
       host.annotated_value as annotated_specific_host,
       isolation_source.annotated_value as annotated_isolation_source,
       geographic_location.annotated_value as annotated_geographic_location,
       null as length, 
       null as pcr_primers, 
       null as collected_by
 From study.biosource b, study.study s, 
     rad.studybiomaterial sb, SRES.externaldatabase ed, SRES.externaldatabaserelease edr,
     (select bc.bio_material_id, tn.name, tn.taxon_id
      from study.ontologyentry oe, sres.taxonname tn, STUDY.biomaterialcharacteristic bc
      where category = 'Organism'
      and oe.value = tn.name
      and bc.ontology_entry_id = oe.ontology_entry_id
      ) o,
     (select bc.bio_material_id, oe.value
      from study.ontologyentry oe, STUDY.biomaterialcharacteristic bc
      where category = 'StrainOrLine'
      and bc.ontology_entry_id = oe.ontology_entry_id
      ) strain,
     (select bc.bio_material_id, oe.value, iv.term as annotated_value
      from study.ontologyentry oe, STUDY.biomaterialcharacteristic bc,
           APIDB.vocabularybiomaterial vb, APIDB.isolatevocabulary iv
      where category = 'Host'
      and bc.ontology_entry_id = oe.ontology_entry_id
      and bc.bio_material_id = vb.bio_material_id
      and vb.isolate_vocabulary_id = iv.isolate_vocabulary_id
      and iv.type = 'specific_host'
      ) host,
     (select bc.bio_material_id, oe.value, iv.term as annotated_value
      from study.ontologyentry oe, STUDY.biomaterialcharacteristic bc,
           APIDB.vocabularybiomaterial vb, APIDB.isolatevocabulary iv
      where category = 'BioSourceType'
      and bc.ontology_entry_id = oe.ontology_entry_id
      and bc.bio_material_id = vb.bio_material_id
      and vb.isolate_vocabulary_id = iv.isolate_vocabulary_id
      and iv.type = 'isolation_source'
      ) isolation_source,
     (select bc.bio_material_id, oe.value, iv.term as annotated_value
      from study.ontologyentry oe, STUDY.biomaterialcharacteristic bc,
           APIDB.vocabularybiomaterial vb, APIDB.isolatevocabulary iv
      where category = 'GeographicLocation'
      and bc.ontology_entry_id = oe.ontology_entry_id
      and bc.bio_material_id = vb.bio_material_id
      and vb.isolate_vocabulary_id = iv.isolate_vocabulary_id
      and iv.type = 'geographic_location'
      ) geographic_location,
     (select distinct project_id from sequenceattributes) project
where s.name like '%_HTS%'
and s.study_id = sb.study_id
and sb.bio_material_id = b.bio_material_id
and b.external_database_release_id = edr.external_database_release_id
and edr.external_database_id = ed.external_database_id
and b.bio_material_id = o.bio_material_id (+)
and b.bio_material_id = strain.bio_material_id (+)
and b.bio_material_id = host.bio_material_id (+)
and b.bio_material_id = isolation_source.bio_material_id (+)
and b.bio_material_id = geographic_location.bio_material_id (+)
UNION
select i.na_sequence_id,
       i.na_feature_id,
       null as bio_material_id,
       i.taxon_id,
       i.external_db_version,
       i.external_db_name,
       i.source_id,
       decode(i.organism, null, 'Unknown', substr(i.organism, 1, 100)) as organism,
       decode(i.strain, null, 'Unknown', substr(i.strain, 1, 100)) as strain,
       decode(i.specific_host, null, 'Unknown', substr(i.specific_host, 1, 100)) as specific_host,
       decode(i.isolation_source, null, 'Unknown', substr(i.isolation_source, 1, 200)) as isolation_source,
       decode(i.country, null, 'Unknown', substr(i.country, 1, 200)) as geographic_location,
       nvl(nvl(prod.product, prod.gene), 'Unknown') as product,
       substr(i.note, 1, 400) as note,
       substr(i.description, 1, 400) as description,
       i.is_reference,
       i.project_id,
       i.data_type,
       s_h.annotated_specific_host,
       i_s.annotated_isolation_source,
       g_l.annotated_geographic_location,
       i.length, 
       i.pcr_primers, 
       i.collected_by
FROM (
       SELECT  etn.na_sequence_id,
               etn.taxon_id,
               etn.length,
               edr.version as external_db_version, 
               src.na_feature_id,
               edb.name as external_db_name,
               CASE 
                 WHEN etn.source_id is null 
                   THEN decode(edb.name, 'Broad 75K genotyping chip', 'CPHD.'||etn.na_sequence_id, 
                                         'pfal3D7_SNP_Broad75KGenotyping_RSRC', 'CPHD.'||etn.na_sequence_id,
                                         'Broad 3K genotyping chip', 'CP3.'||etn.na_sequence_id,
                                         'pfal3D7_SNP_Broad3KGenotyping_RSRC', 'CP3.'||etn.na_sequence_id,
                                         'pfal3D7_SNP_BroadIsolateBarcode_RSRC','BC.'||etn.na_sequence_id,etn.source_id,
                                        'Isolate barcode data from Broad','BC.'||etn.na_sequence_id,etn.source_id)
                ELSE etn.source_id 
              END as source_id,
              tn.name as organism,
              CASE 
                WHEN src.strain != src.isolate 
                  THEN src.strain || ' ' || src.isolate 
                WHEN src.strain is  not null 
                  THEN src.strain
                ELSE src.isolate 
              END as strain,
              src.specific_host as specific_host,
              src.isolation_source as isolation_source,
              src.country as country,
              src.note as note,
              etn.description as description,
              src.pcr_primers,
              src.collected_by,
              src.is_reference,
              decode(edb.name, 'Broad 75K genotyping chip', 'HD_Array', 
                               'pfal3D7_SNP_Broad75KGenotyping_RSRC', 'HD_Array',
                               'Broad 3K genotyping chip', '3kChip',
                               'pfal3D7_SNP_Broad3KGenotyping_RSRC', '3kChip',
                               'Toxoplasma_RFLP_Su_RSRC', 'RFLP Typed',
                               'pfal3D7_SNP_BroadIsolateBarcode_RSRC','Barcode',
                               'Isolate barcode data from Broad','Barcode','Sequencing Typed') as data_type,
        CASE WHEN lower(pinfo.name) like 'plas%' THEN 'PlasmoDB' 
             WHEN lower(pinfo.name) like 'cryp%' THEN 'CryptoDB'
             WHEN lower(pinfo.name) like 'toxo%' THEN 'ToxoDB'
             WHEN lower(pinfo.name) like 'giard%' THEN 'GiardiaDB'
             WHEN lower(pinfo.name) like 'tritryp%' THEN 'TriTrypDB'
             WHEN lower(pinfo.name) like 'micro%' THEN 'MicrosporidiaDB'
             WHEN lower(pinfo.name) like 'piro%' THEN 'PiroplasmaDB'
        ELSE '' END as project_id
      FROM dots.ExternalNaSequence etn, dots.IsolateSource src,
           sres.ExternalDatabaseRelease edr, sres.ExternalDatabase edb, core.PROJECTINFO pinfo, 
           (select  distinct taxon_id,name from sres.taxonname where name_class = 'scientific name') tn
      WHERE etn.na_sequence_id = src.na_sequence_id
       AND  etn.taxon_id = tn.taxon_id(+)
       AND edr.external_database_id = edb.external_database_id
       AND edr.external_database_release_id = etn.external_database_release_id
       AND pinfo.project_id = etn.row_project_id
      ) i,
      (select im.na_sequence_id, apidb.tab_to_string(set(cast(COLLECT(iv.term) as apidb.varchartab)),',') as annotated_isolation_source
      from apidb.isolatevocabulary iv, apidb.isolatemapping im
      where iv.isolate_vocabulary_id = im.isolate_vocabulary_id
      and iv.type = 'isolation_source'
      group by im.na_sequence_id
      ) i_s,
      (select im.na_sequence_id, apidb.tab_to_string(set(cast(COLLECT(iv.term) as apidb.varchartab)),',') as annotated_specific_host
      from apidb.isolatevocabulary iv, apidb.isolatemapping im
      where iv.isolate_vocabulary_id = im.isolate_vocabulary_id
      and iv.type = 'specific_host'
      group by im.na_sequence_id
      ) s_h,
      (select im.na_sequence_id, apidb.tab_to_string(set(cast(COLLECT(iv.term) as apidb.varchartab)),',') as annotated_geographic_location
      from apidb.isolatevocabulary iv, apidb.isolatemapping im
      where iv.isolate_vocabulary_id = im.isolate_vocabulary_id
      and iv.type = 'geographic_location'
      group by im.na_sequence_id
      ) g_l,
      (select na_sequence_id,
              apidb.tab_to_string(set(cast(COLLECT(product order by product) as apidb.varchartab)),'; ') as product,
              apidb.tab_to_string(set(cast(COLLECT(gene order by gene) as apidb.varchartab)),'; ') as gene
       from dots.isolatefeature group by na_sequence_id
      ) prod
WHERE i.na_sequence_id = i_s.na_sequence_id
and i.na_sequence_id = s_h.na_sequence_id
and i.na_sequence_id = g_l.na_sequence_id
and i.na_sequence_id = prod.na_sequence_id (+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index IsolateAttr_sourceId_idx&1 ON IsolateAttributes&1 (source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

 <tuningTable name="ChIPProtocolParams">
    <externalDependency name="rad.Analysis"/>
    <externalDependency name="rad.AnalysisParam"/>
    <externalDependency name="rad.ProtocolParam"/>
    <sql>
      <![CDATA[
        create table ChIPProtocolParams&1 NOLOGGING AS
select pp.*, e.experiment_name from
(
select a.analysis_id,
       a.protocol_id,
       antbd.antibody as antibody,
       strn.strain as strain,
       treamnt.treatment as treatment,
       replcte.replicate as replicate,
       gentyp.genotype as genotype,
       celltyp.celltype as celltype,
       CASE
          WHEN lower(p.name) like '%peak%' then 'called_peaks'
       ELSE 'raw'
       END as protocol_type
from   rad.analysis a,rad.protocol p,
      (select ap.analysis_id,ap.value as antibody
       from   rad.analysisparam ap,rad.protocolparam pp
       where  ap.protocol_param_id = pp.protocol_param_id
       and    lower(name) like 'antibody') antbd,
      (select ap.analysis_id,ap.value as strain
       from   rad.analysisparam ap,rad.protocolparam pp
       where  ap.protocol_param_id = pp.protocol_param_id
       and    lower(name) like 'strain') strn,
      (select ap.analysis_id,ap.value as treatment
       from   rad.analysisparam ap,rad.protocolparam pp
       where  ap.protocol_param_id = pp.protocol_param_id
       and    lower(name) like 'treatment') treamnt,
      (select ap.analysis_id,ap.value as replicate
       from   rad.analysisparam ap,rad.protocolparam pp
       where  ap.protocol_param_id = pp.protocol_param_id
       and    lower(name) like 'replicate') replcte,
      (select ap.analysis_id,ap.value as genotype
       from   rad.analysisparam ap,rad.protocolparam pp
       where  ap.protocol_param_id = pp.protocol_param_id
       and    lower(name) like 'genotype') gentyp,
      (select ap.analysis_id,ap.value as celltype
       from   rad.analysisparam ap,rad.protocolparam pp
       where  ap.protocol_param_id = pp.protocol_param_id
       and    lower(name) like 'celltype') celltyp
where a.protocol_id = p.protocol_id
and p.name in ('ChIP chip Smoothed',
               'ChIP chip Peak Calls',
                -- legacy ones too
                'NimbleScan_ChIP_Hakimi_called_peaks',
                'NimbleScan_ChIP_Hakimi',
                'NimbleGen_ChIP_Myler_Lmajor',
                'ChIP_chip_Einstein',
                'ChIP_chip_Einstein_called_peaks',
                'ChIP_chip_Einstein_ME1',
                'ChIP_chip_Einstein_ME1_Peak_Calls')
and   a.analysis_id = antbd.analysis_id (+)
and   a.analysis_id = strn.analysis_id (+)
and   a.analysis_id = treamnt.analysis_id (+)
and   a.analysis_id = replcte.analysis_id (+)
and   a.analysis_id = gentyp.analysis_id (+)
and   a.analysis_id = celltyp.analysis_id (+)
) pp, (
select replace(d.name, '_' || a.name || '_chipChipSample_RSRC', '') as experiment_name, a.analysis_id
from sres.externaldatabase d, rad.analysis a
where d.name like '%' || a.name ||'%_chipChipSample_RSRC') e
where pp.analysis_id = e.analysis_id (+)
      ]]>
    </sql>
    <sql>
      <![CDATA[
       create index chp_prtparam_idx&1 ON ChIPProtocolParams&1 (analysis_id,protocol_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="ChIPchipGene">
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="GeneAttributes"/>
    <internalDependency name="SequenceAttributes"/>
    <internalDependency name="ExpressionElement"/>
    <sql>
      <![CDATA[
        create table ChIPchipGene&1 NOLOGGING AS
select distinct
      ga.source_id as gene_source_id,
      aef.feature_source_id as probe_id,
      aef.na_feature_id as chip_na_feature_id,
      CASE 
        WHEN ga.is_reversed = 0 
        THEN round(abs(ga.start_min - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)),0)
        ELSE round(abs(ga.end_max - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)),0) 
      END as distance,
      CASE 
        WHEN -- distance > 0
          CASE WHEN ga.is_reversed = 0 
            THEN ga.start_min - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)
            ELSE ga.end_max - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)
          END > 0 
        THEN 
          CASE 
            WHEN ga.is_reversed = 0 
            THEN '-' 
            ELSE '+'
          END 
        ELSE 
          CASE 
            WHEN ga.is_reversed = 1 
            THEN '-' 
            ELSE '+'
          END 
        END as direction
from  ExpressionElement aef,
      FeatureLocation arrloc,
      GeneAttributes ga,
      rad.analysis a,
      rad.protocol p
where aef.na_feature_id = arrloc.na_feature_id
and   aef.analysis_id = a.analysis_id
and   a.protocol_id = p.protocol_id
and   p.name in ('ChIP chip Peak Calls','ChIP_chip_Einstein_called_peaks','NimbleScan_ChIP_Hakimi_called_peaks')
and   arrloc.na_sequence_id = ga.na_sequence_id
and   ( (ga.is_reversed = 0 and abs((((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min) - ga.start_min) <= 3000)
                  or (ga.is_reversed = 1 and abs((((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min) - ga.end_max) <= 3000) )
     ]]>
    </sql>
    <sql>
      <![CDATA[
       create index chpgene_geneid_idx&1 ON ChIPchipGene&1 (gene_source_id, chip_na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="TFBSGene">
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="GeneAttributes"/>
    <internalDependency name="SequenceAttributes"/>
    <sql>
      <![CDATA[
        create table TFBSGene&1 NOLOGGING AS
select distinct
      ga.source_id as gene_source_id,
      ga.organism as organism,
      ga.species as species,
      aef.source_id as probe_id,
      aef.na_feature_id as tfbs_na_feature_id,
      CASE 
        WHEN ga.is_reversed = 0 
        THEN round(abs(ga.start_min - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)),0)
        ELSE round(abs(ga.end_max - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)),0) 
      END as distance,
      CASE 
        WHEN -- distance > 0
          CASE WHEN ga.is_reversed = 0 
            THEN ga.start_min - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)
            ELSE ga.end_max - (((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min)
          END > 0 
        THEN 
          CASE 
            WHEN ga.is_reversed = 0 
            THEN '-' 
            ELSE '+'
          END 
        ELSE 
          CASE 
            WHEN ga.is_reversed = 1 
            THEN '-' 
            ELSE '+'
          END 
        END as direction
from  dots.BindingSiteFeature aef,
      FeatureLocation arrloc,
      GeneAttributes ga
where aef.na_feature_id = arrloc.na_feature_id
and   arrloc.na_sequence_id = ga.na_sequence_id
and   ( (ga.is_reversed = 0 and abs((((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min) - ga.start_min) <= 3000)
                  or (ga.is_reversed = 1 and abs((((arrloc.end_max - arrloc.start_min) / 2) + arrloc.start_min) - ga.end_max) <= 3000) )
     ]]>
    </sql>
    <sql>
      <![CDATA[
       create index tfbs_geneid_idx&1 ON TFBSGene&1 (gene_source_id, tfbs_na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="SageTagAttributes">
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="SageTagAnalysisAttributes"/>
    <internalDependency name="SageTagGene"/>
    <internalDependency name="GeneAttributes"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="dots.NaFeatureImp"/>
    <externalDependency name="rad.CompositeElementImp"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE SageTagAttributes&1 NOLOGGING AS
SELECT cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       substr(s.source_id || '-' || l.start_min || '-' || l.end_max || '.'
              || l.is_reversed, 1, 40) as source_id,
       f.na_feature_id, f.source_id as feature_source_id,
       substr(s.source_id, 1, 40) as sequence_source_id, s.na_sequence_id,
       l.start_min, l.end_max, substr(st.tag, 1, 20) as sequence,
       st.composite_element_id, st.source_id as rad_source_id,
       l.is_reversed,
       SUBSTR(CASE
                WHEN tn.name = 'Giardia lamblia' THEN 'Giardia Assemblage A isolate WB' 
                ELSE tn.name
              END, 1, 60) AS organism,
       gene.gene_source_id, nvl(gene.gene_count, 0) gene_count,
       gene.gene_product
from dots.SageTagFeature f, FeatureLocation l, dots.NaSequence s,
     sres.TaxonName tn, rad.SageTag st, 
     (select a.na_feature_id,
             apidb.tab_to_string(set(cast(COLLECT(b.gene_source_id order by b.gene_source_id) as apidb.varchartab)),'; ') as gene_source_id,
             apidb.tab_to_string(set(cast(COLLECT(ga.product order by ga.product) as apidb.varchartab)),'; ') as gene_product,
             count(b.gene_source_id) as gene_count
      from dots.sagetagfeature a, (
                             select distinct a.na_feature_id,
                                            sg.gene_source_id as gene_source_id
                             from dots.SageTagFeature a left join SageTagGene sg on a.na_feature_id = sg.tag_feature_id
                             where (sg.distance = 0 or sg.distance is null)
                             and (sg.antisense = 0 or sg.antisense is null)
                             ) b, GeneAttributes ga
       where a.na_feature_id = b.na_feature_id
        and b.gene_source_id = ga.source_id
       group by a.na_feature_id
      ) gene
where f.na_feature_id = gene.na_feature_id (+)
  and f.na_feature_id = l.na_feature_id
  and l.is_top_level = 1
  and s.na_sequence_id = l.na_sequence_id
  and s.taxon_id = tn.taxon_id
  and tn.name_class = 'scientific name'
  and f.source_id = st.composite_element_id
  and st.composite_element_id in (select composite_element_id from SageTagAnalysisAttributes)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index SageTagAttr_sourceId_idx&1 ON SageTagAttributes&1
             (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index SageTagAttr_loc_idx&1 ON SageTagAttributes&1
             (na_sequence_id, start_min, end_max, is_reversed, source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create unique index SageTagAttr_ftrId_idx&1 ON SageTagAttributes&1
             (na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="AsmAlignmentGeneSummary">
    <internalDependency name="GeneAttributes"/>
    <internalDependency name="GenomicSequence"/>
    <internalDependency name="BlatAlignmentLocation"/>
    <externalDependency name="dots.BlatAlignment"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="sres.SequenceOntology"/>
    <intermediateTable name="AsmAlignmentGene"/>
    <intermediateTable name="AsmAlignmentNoGene"/>
    <sql>
      <![CDATA[
CREATE TABLE AsmAlignmentGene NOLOGGING AS
SELECT ba.blat_alignment_id, ba.query_na_sequence_id, a.source_id, a.number_of_contained_sequences AS est_count, a.length,
         ba.query_taxon_id, ba.target_na_sequence_id,
         ba.target_taxon_id, ba.percent_identity, ba.is_consistent,
         ba.is_best_alignment, ba.is_reversed, ba.target_start, ba.target_end,
         sequence.source_id AS target_sequence_source_id,
         least(ba.target_end, ga.end_max)
         - greatest(ba.target_start, ga.start_min) + 1
           AS assembly_gene_overlap_length,
         ba.query_bases_aligned / (a.length)
         * 100 AS percent_assembly_bases_aligned,
         ga.source_id AS gene
  FROM dots.assembly a, 
       BlatAlignmentLocation ba,
       GeneAttributes ga, 
       GenomicSequence sequence
  WHERE ba.query_na_sequence_id = a.na_sequence_id 
   AND ba.target_na_sequence_id = sequence.na_sequence_id
   AND ga.sequence_id = sequence.source_id
   AND least(ba.target_end, ga.end_max) - greatest(ba.target_start, ga.start_min) >= 0
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE AsmAlignmentNoGene NOLOGGING AS
SELECT * from AsmAlignmentGene WHERE 1=0 UNION -- define datatype for null column
SELECT ba.blat_alignment_id, ba.query_na_sequence_id, a.source_id, a.number_of_contained_sequences AS est_count, a.length,
         ba.query_taxon_id, ba.target_na_sequence_id,
         ba.target_taxon_id, ba.percent_identity, ba.is_consistent,
         ba.is_best_alignment, ba.is_reversed, ba.target_start, ba.target_end,
         sequence.source_id AS target_sequence_source_id,
         NULL
           AS assembly_gene_overlap_length,
         ba.query_bases_aligned / (a.length)
         * 100 AS percent_assembly_bases_aligned,
         NULL AS gene
  FROM dots.blatalignment ba, dots.assembly a,
      dots.NaSequence sequence
  WHERE a.na_sequence_id = ba.query_na_sequence_id
    AND sequence.na_sequence_id = ba.target_na_sequence_id
    AND ba.blat_alignment_id IN
   ( -- set of blat_alignment_ids not in in first leg of UNION
    -- (because they overlap no genes)
    SELECT ba.blat_alignment_id
    FROM dots.BlatAlignment ba, dots.NaSequence query_sequence,
         sres.SequenceOntology so
    WHERE query_sequence.na_sequence_id = ba.query_na_sequence_id
      AND query_sequence.sequence_ontology_id = so.sequence_ontology_id
      AND so.term_name = 'assembly'
  MINUS
    SELECT blat_alignment_id FROM AsmAlignmentGene)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE TABLE AsmAlignmentGeneSummary&1 NOLOGGING AS
SELECT * FROM AsmAlignmentNoGene
UNION
SELECT * FROM AsmAlignmentGene
      ]]>
    </sql>
  </tuningTable>



  <tuningTable name="ToxoExpressionGraphs">
    <internalDependency name="GeneAttributes"/>
    <externalDependency name="apidb.Profile"/>
    <externalDependency name="apidb.ProfileSet"/>
    <sql>
      <![CDATA[
CREATE TABLE ToxoExpressionGraphs&1 NOLOGGING AS
SELECT ga.source_id,
        COUNT(archetypal) AS graph_archetypal,
        COUNT(bradyzoite) AS graph_bradyzoite
FROM GeneAttributes ga,
     (SELECT p.source_id, 1 AS archetypal
      FROM apidb.profile p, apidb.profileSet ps
      WHERE ps.name = 'Expression profiling of the 3 archetypal T. gondii lineages'
        AND p.profile_set_id = ps.profile_set_id) archetypal,
        (SELECT p.source_id, 1 AS bradyzoite
      FROM apidb.profile p, apidb.profileSet ps
      WHERE ps.name = 'expression profile percentiles of T. gondii Matt_Tz-Bz time series'
        AND p.profile_set_id = ps.profile_set_id) bradyzoite
  WHERE ga.source_id = archetypal.source_id(+)
  and ga.source_id = bradyzoite.source_id (+)
GROUP BY ga.source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index ToxoExp_sourceId_idx&1 ON ToxoExpressionGraphs&1 (source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="GiardiaExpressionGraphs">
    <internalDependency name="GeneAttributes"/>
    <externalDependency name="apidb.Profile"/>
    <externalDependency name="apidb.ProfileSet"/>
    <sql>
      <![CDATA[
CREATE TABLE GiardiaExpressionGraphs&1 NOLOGGING AS
SELECT ga.source_id,
       COUNT(stress) as graph_stress,
       COUNT(stress_ts) as graph_stress_ts,
       COUNT(sage_pct) as graph_sage_pct
FROM GeneAttributes ga,
     (SELECT p.source_id, 1 AS stress
      FROM apidb.profile p, apidb.profileSet ps
      WHERE ps.name = 'Stress Response in Giardia lamblia Trophozoites-Averaged'
        AND p.profile_set_id = ps.profile_set_id) stress,
     (SELECT p.source_id, 1 AS stress_ts
      FROM apidb.profile p, apidb.profileSet ps
      WHERE ps.name = 'Stress response Dynamics in Trophozoites (time series)-Averaged'
        AND p.profile_set_id = ps.profile_set_id) stress2,
     (SELECT p.source_id, 1 AS sage_pct
      FROM apidb.profile p, apidb.profileSet ps
      WHERE ps.name = 'giar sage count'
        AND p.profile_set_id = ps.profile_set_id) sage
  WHERE ga.source_id = stress.source_id(+)
  AND ga.source_id = stress2.source_id(+)
  AND ga.source_id = sage.source_id(+)
GROUP BY ga.source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index ExpGraphSum_sourceId_idx&1 ON GiardiaExpressionGraphs&1 (source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="ProfileGraphs">
    <internalDependency name="GeneAttributes"/>
    <externalDependency name="apidb.Profile"/>
    <externalDependency name="apidb.ProfileSet"/>
    <sql>
      <![CDATA[
CREATE TABLE ProfileGraphs&1 NOLOGGING AS
select all_gg.source_id, 
       all_gg.main_profile_name as profile_name, 
       all_gg.project_id, 
       max(case when pr.name is null then 0 ELSE 1 END) as has_profile
from 
  (
    select ga.source_id, pm.profile_name, nvl(pm.main_profile_name, pm.profile_name) as main_profile_name, pm.project_id
    from
    (
    -- CryptoDB --
    select 'Cparvum_RT_PCR_Kissinger' as profile_name,
          '' as main_profile_name,
           'CryptoDB' as project_id
    from dual
    UNION
    --select 'CparIowaII Lippuner mRNA Seq data' as profile_name,
    --      '' as main_profile_name,
    --       'CryptoDB' as project_id
    --from dual
    --UNION
    -- FungiDB --
    select 'rhizopus_oryzae_99880 hyphal_tip RNA Sequence min Profiles' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'Expression profiling of saccharomyces cerevisiae s288c cdc15 Experiments' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'C.albicans activity against antifungal' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'Toc1, Toc2, and Skn7 null mutants treated with Flucytosine' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION

    select 'C.neoformans NRG1 Expression' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'NcraOR74A Hyphal Growth RNASeq' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'C.neoformans- ada2-delta, nrg1-delta, cir1-delta and KN99-alpha analysis' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'N Crassa population genomics' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'C albicans Comprehensive Annotation' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION
    select 'S Pombe Dicer Protein' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION

    select 'H. arabidopsidis expression during infection' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION

	select 'P. ramorum expression in Chlamydospora, P. ramorum expression in zoospores, P. ramorum expression is Tomato media, P. ramorum expression in V8 Liquid media' as profile_name,
          '' as main_profile_name,
           'FungiDB' as project_id
    from dual
    UNION


    -- ToxoDB --
    select 'Expression profiles of Tgondii ME49 Carruthers experiments' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    Union
    select 'expression profiles of TgRH_Matrajt_GSE23174_Bz_WildType_V_Mutant' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    Union
    select 'expression profiles of TgRH_Matrajt_GSE23174_Bz_Time_Series' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    Union
    select 'expression profiles of TgRH_Matrajt_GSE23174_Bz_11hr_Egress' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    Union
    select 'Profiles of GSE22100 GCN5-AE-GEOD-10022 array from Sullivan' as profile_name,
          '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION 
    select 'Expression profiles of Tgondii ME49 Boothroyd experiments' as profile_name,
          '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'M.White Cell Cycle Microarray profiles' as profile_name,
          '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'T. gondii VEG Day 3-4 Tachyzoite aligned to the TgME49 Genome-profiles' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'T. gondii VEG Day 3-4 Tachyzoite aligned to the VEG Genome-profiles' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'N. caninum Day 3-4 Tachyzoite-profiles' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'expression profiles of RH delta-HXGPRT delta-UPRT strain Alkaline bradyzoite-inducing conditions' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'expression profiles of T. gondii Matt_Tz-Bz time series' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'expression profiles of VEG strain CO2-starvation bradyzoite inducing conditions' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'expression profiles of three Tgondii strains under both normal-tachyzoite and induced-bradyzoite conditoins' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION
    select 'Expression profiling of the 3 archetypal T. gondii lineages' as profile_name,
           '' as main_profile_name,
           'ToxoDB' as project_id
    from dual
    UNION

    -- AmoebaDB --
    select 'EhistolyticaAffyProfiles' as profile_name,
           '' as main_profile_name,
           'AmoebaDB' as project_id
    from dual
    UNION
    select 'EhistolyticaNugenProfiles' as profile_name,
           '' as main_profile_name,
           'AmoebaDB' as project_id
    from dual
    UNION
    select 'Ehist_Gilchrist_G3_V_HM1:IMSS' as profile_name,
           '' as main_profile_name,
           'AmoebaDB' as project_id
    from dual
    UNION
  
    -- GiardiaDB --
    select 'Stress Response in Giardia lamblia Trophozoites-Averaged' as profile_name,
           '' as main_profile_name,
           'GiardiaDB' as project_id
    from dual
    UNION
    select 'Stress response Dynamics in Trophozoites (time series)-Averaged' as profile_name,
           '' as main_profile_name,
           'GiardiaDB' as project_id
    from dual
    UNION
    select 'Hehl encystation expression profile' as profile_name,
           '' as main_profile_name,
           'GiardiaDB' as project_id
    from dual
    UNION
    select 'Profiles of G.lamblia Ringqvist array data' as profile_name,
           '' as main_profile_name,
           'GiardiaDB' as project_id
    from dual
    UNION
    select 'giar sage tag frequencies sense' as profile_name,
           '' as main_profile_name,
           'GiardiaDB' as project_id
    from dual
    UNION
    select 'giar sage tag frequencies antisense' as profile_name,
           'giar sage tag frequencies sense' as main_profile_name,
           'GiardiaDB' as project_id
    from dual
    UNION

    -- PiroplasmaDB --

    select 'Lau B.b. Virulent vs Attenuated' as profile_name,
           '' as main_profile_name,
          'PiroplasmaDB' as project_id
    from dual
    UNION

    -- PlasmoDB --

    select 'Expression profile of 3D7 clones 3D7AH1S2 and 3D7S8.4' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'Profiles of Cowman Invasion KO-averaged' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'winzeler_cc_tempExp' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select ' winzeler_3D7_gametocyte' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'newbold gene profiles sorted mild-severe' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'Profiles of E-TABM-438 from Cowman' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'P. falciparum Newbold mRNA Seq data' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'P.falciparum duffy mRNA Seq data' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'DeRisi HB3 Smoothed' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'DeRisi 3D7 Smoothed' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'Profiles of Derisi HalfLife-half_life' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'E-GEOD-10022 array from Su' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'percentile - daily_patient-number' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'pfal3D7_Stunnenberg_pi_time_series' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'P. berghei DOZI array data' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'Waters HP' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'ZB Pvivax time series 1' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'westenberger vivax expression profile' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'kappe_all_comparisons_profiles' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'winzeler py mixed' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION

    select 'Profiles of DD2-HB3 expression from Ferdig' as profile_name,
           '' as main_profile_name,
          'PlasmoDB' as project_id
    from dual
    UNION
    select 'Profiles of transcriptional variation in Plasmodium falciparum 3d7a' as profile_name,
           '' as main_profile_name,
           'PlasmoDB' as project_id
    from dual
    UNION
    select 'Profiles of transcriptional variation in Plasmodium falciparum all_strains' as profile_name,
           '' as main_profile_name,
           'PlasmoDB' as project_id
    from dual
    UNION
    --TriTrypDB --
    select 'T.brucei Horn RNAi Sequence minProfiles' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Linfantum promastigote time-course biorep01' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Expression profiling of T. brucei microarray data from Christine Clayton' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Expression profiling of T. brucei differentiation series' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Expression profiling of Tbrucei five life cycle stages' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Profiles of T.cruzi Tarleton Rick array data' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Expression profiling of Tbrucei Procyclic TbDRBD3 depletion' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'T.brucei Clayton RNA Sequence of transcriptome-wide mRNA degradation minProfiles' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'T.brucei Archer Stuart Cell Cycle RNA Sequence min-Profiles' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'T.brucei George Cross RNA Sequence min-Profiles' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Profiles of L.major Beverly Steve array data' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'Profiles of Linfantum axenic and intracellular amastigote array data' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
    UNION
    select 'T. brucei under heat shock array data' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
--    UNION
--   select 'T.brucei Tschudi RNA Seq data' as profile_name,
--           '' as main_profile_name,
--           'TriTrypDB' as project_id
--    from dual
    UNION
    select 'T. brucei DHH1 wild type array data' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
--    UNION
--    select 'Lmajor RNASeq Spliced Leader And Poly A Sites from Myler uniqProfile' as profile_name,
--           '' as main_profile_name,
--           'TriTrypDB' as project_id
--    from dual
    UNION
    select 'T.brucei RNASeq Spliced Leader And Poly A Sites from Nilsson uniqProfile' as profile_name,
           '' as main_profile_name,
           'TriTrypDB' as project_id
    from dual
--     UNION
--     select 'Tcruzi RNASeq Spliced Leader And Poly A Sites from Nilsson uniqProfile' as profile_name,
--            '' as main_profile_name,
--            'TriTrypDB' as project_id
--     from dual
    ) pm, GeneAttributes ga
    where ga.project_id = pm.project_id
  ) all_gg,
  (select p.source_id, ps.name, count(*) 
   from apidb.profile p, apidb.profileset ps
   where p.profile_set_id = ps.profile_set_id
   group by p.source_id,ps.name having count(*) = 1 
   ) pr
  where  all_gg.source_id = pr.source_id (+)
  and all_gg.profile_name = pr.name (+)
group by all_gg.source_id, all_gg.main_profile_name, all_gg.project_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index ProfGraph_sourceId_idx&1 ON ProfileGraphs&1 (source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="ProfileGraphDescrip">
    <internalDependency name="GeneAttributes"/>
    <externalDependency name="apidb.Profile"/>
    <externalDependency name="apidb.ProfileSet"/>
    <sql>
      <![CDATA[
CREATE TABLE ProfileGraphDescrip&1 NOLOGGING AS
select d.mainOpen, d.dataOpen, d.order_num, d.profile_name, d.module, d.display_name, d.description, d.x_axis, d.y_axis, d.visible_parts, d.attribution, d.type, d.dataTable, psorg.species, psorg.organism
from (

-- FungiDB

select 'NcraOR74A Hyphal Growth RNASeq' as profile_name,
       'NeurosporaCrassaOR74A::RnaSeqHyphalGrowth' as module,
       'RNA Seq' as display_name,
       'Unpublished data from <a href="http://lab.stajich.org">Stajich lab</a> at UC Riverside representing 3 time points (3hrs, 5hr, and 20hrs) of hyphal growth on solid media for <i>Neurospora crassa</i>.' as description,
       'Sample Time point (hours)' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual

    UNION
select 'C.neoformans NRG1 Expression' as profile_name,
       'CryptococcusNeoformansGrubiiH99::RnaSeqNrg1' as module,
       'C.neoformans RNASeq -  Wild Type, nrg1 KO, and nrg1 overexpression' as display_name,
       'Unpublished <i>Cryptococcus neoformans</i> var. <i>grubii</i> H99 data from Teresea O''Meara et al from <a href="http://mgm.duke.edu/microbial/mycology/alspaugh/">Alspaugh Lab</a> at Duke University on Wild Type, nrg1 KO, and nrg1 overexpression.'  as description,
       'Wildtype, nrg1-KO, and Nrg1 overexpression' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
    from dual

    UNION

select 'C.neoformans- ada2-delta, nrg1-delta, cir1-delta and KN99-alpha analysis' as profile_name,
       'CryptococcusNeoformansGrubiiH99::RnaSeqCapReg' as module,
       'C.neoformans- ada2-delta, nrg1-delta, cir1-delta and KN99-alpha analysis' as display_name,
       'C.neoformans grubii H99 data from Brian Haynes et al from <a href= "http://www.crypto.wustl.edu/">Doering Lab</a> at Washington University Medical School on ada2&Delta;, nrg1&Delta; and cir1&Delta; and KN99&alpha; wildtype expression.'  as description,
       'WT at 30C,  WT at 37C with CO2,  ada2 at 30C,  ada2 at 37C with CO2,  cir1 at 30C, cir1 at 37C with CO2,  nrg1 at 30C, nrg1 at 37C with CO2' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        11 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
    from dual

    UNION

select 'N Crassa population genomics' as profile_name,
       'NeurosporaCrassaOR74A::RnaSeqPopGen' as module,
       'N crassa population genomics' as display_name,
       'Neurospora crasss data from Christopher Ellison et al from <a href="http://nature.berkeley.edu/taylorlab/">Taylor Lab</a> at at UC Berkeley on whole-transcriptome sequencing of 48 individuals to identify SNPs'  as description,
       'FGSC_1131, FGSC_1132, FGSC_1133, FGSC_1165, FGSC_2229b, FGSC_2229, FGSC_3199, FGSC_3200, FGSC_3211, FGSC_3223, FGSC_3943, FGSC_3968, FGSC_3975, FGSC_4708, FGSC_4712, FGSC_4713, FGSC_4715, FGSC_4716, FGSC_4730, FGSC_4824, FGSC_5910, FGSC_5914, FGSC_6203, FGSC_851, FGSC_8783, FGSC_8784, FGSC_8787, FGSC_8789, FGSC_8790, FGSC_8816, FGSC_8819, FGSC_8829, FGSC_8845, FGSC_8848, FGSC_8850, FGSC_8851, FGSC_8870, FGSC_8871, FGSC_8872, FGSC_8874, FGSC_8876, FGSC_8878, Perkins_4450, Perkins_4452, Perkins_4455, Perkins_4465, Perkins_4476, Perkins_4496' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        11 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
    from dual

    UNION

select 'C albicans Comprehensive Annotation' as profile_name,
       'CandidaAlbicansSC5314::RnaSeqCompAnn' as module,
       'C albicans Comprehensive Annotation' as display_name,
       'Candida albicans data from Michael Snyder et al from <a href="http://snyderlab.stanford.edu/">Synder Lab</a> at Stanford University on Comprehensive Annotation of the transcriptome of the human fugal pathogen Candida albicans using RNA-Seq'   as description,
       'Cellwall Damaging Environment, High Oxidative Stress, Low Oxidative Stress, Media Containing Serum, medium at PH4, medium at PH8, Nitrosative Stress, Non Cellwall Damage Environment, Non Nitrosative Environment, Non Oxidation Stress, YPD, YPD media, YPD media containing Serum' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        12 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
    from dual

    UNION

select 'S Pombe Dicer Protein' as profile_name,
       'Spombe972h::RnaSeqDicer' as module,
       'S Pombe Dicer Protein' as display_name,
       'Schizosaccharomyces pombe data from Pierre Barraud et al from ETH Zurich on nuclear retention of fission yeast Dicer
The data is generated for C. albicans grown under a total of nine different in vitro conditions which included hyphae-inducing conditions, tissue culture medium, high and low oxidative stress, nitrosative stress and cell wall damage inducing conditions'   as description,
       'dcr1Delta, dcr1Deltaloop2, dcr1-SHSS, Wild Type' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        13 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
    from dual

    UNION

select 'rhizopus_oryzae_99880 hyphal_tip RNA Sequence min Profiles' as profile_name,
       'RhizopusOryzae::RnaSeqHyphalTip' as module,
       'RNA Seq' as display_name,
       'Unpublished data from <a href="http://lab.stajich.org">Stajich lab</a> at UC Riverside representing 3 time points (3hrs, 5hr, and 20hrs) of hyphal growth on solid media for <i>Rhizopus oryzae</i>.' as description,
       'Sample Time point (hours)' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual

    UNION
select 'Expression profiling of saccharomyces cerevisiae s288c cdc15 Experiments' as profile_name,
       'SaccharomycesCerevisiae::MicroArrCellCycleTS' as module,
       'Microarray Cell cycle Time Series - Single' as display_name,
       'Microarray data for <i>S. cerevisiae</i> is from the cell cycle regulation microarray from <a href="http://www.ncbi.nlm.nih.gov/pubmed/9843569">Spellman et al</a>.
<br /><br />
Pheromone timecourse experiments were performed by synchronizing cells with alpha-factor to arrest them, then removing the alpha factor releasing the cells, and sampling every 7 minutes for the next 140 minutes.
<br /><br />
Cdc15 synchronization was performed by arresting cdc15 cells at 37C then releasing by moving to the 20C permissive temperature and sampling every 10 minutes for the next 300 minutes.
<br /><br />
Cln3 and Clb2 experiment compared wild-type and cln- or clb- strains. For Cln3 experiment, cln3 cell were arrested in late G1 due by temperature-shift inactivating Cdc43p. Clb2 experiment was performed by growing clb2 cells and arresting at M with nocodazole. These RNA were compared to the control wild-type cells arrested at G1 and M using the same approaches. Values represent the relative expression of the mutant to wild-type. cln3-1 is the 40 minute and cln3-2 is the 30 minute experiment. The clb2-1 and clb2-2 represent replicate experiments of the 40min timepoint.
<br /><br />
Raw Data is available <a href="http://genome-www.stanford.edu/cellcycle/data/rawdata/">here</a>.' as description,
       'Time point (minutes) or Sample Name' as x_axis,
       'The expression value is log2(sample/common reference)' as y_axis,
        12 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'Cln_Clb,pheromone,elutriation,cdc15,Cho' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual
    UNION

select 'C.albicans activity against antifungal' as profile_name,
       'CandidaAlbicansSC5314::MicroarrayCalbAntiFung' as module,
       'Candida albicans Microarray expression' as display_name,
       'Candida albicans Microarray expression data from Steffen Rupp, Anke Burger-Kentischer et al on Response of Candida albicans towards a novel antifungal benzimidazole derivative'   as description,
       'Treated samples' as x_axis,
'(exprn_val) left - differential expression value, right - expression fold change;
(percentile) Ranking percentile of intensity, relative to all other genes ' as y_axis,
        13 as order_num,       
       'TRUE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile' as visible_parts,
        '' as dataTable,
       'expression' as type,
       '' as attribution    from dual
    UNION


select 'H. arabidopsidis expression during infection' as profile_name,
       'HyaarEmoy2::RnaSeqInfection' as module,
       'RNA Seq' as display_name,
       '3 weeks old Arabidopsis leaves inoculated with H. arabidopsidis: 7 days post inoculation' as description,
       'Biological replicates' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual
  UNION

select 'P. ramorum expression in Chlamydospora, P. ramorum expression in zoospores, P. ramorum expression is Tomato media, P. ramorum expression in V8 Liquid media' as profile_name,
       'PhyraPr102::RnaSeqCondition' as module,
       'RNA Seq' as display_name,
       'P. ramorum expression during different sporulating conditions and culture media' as description,
       'Experimental replicates' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual
    UNION

select 'P sojae expression during Infection and mycelial stage' as profile_name,
       'PhysoP6497::PhysoInfection' as module,
       'RNA Seq' as display_name,
       'Tyler et al. Science (2006): Vol. 313 no. 5791 pp. 1261-1266' as description,
       'Experimental replicates' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual
    UNION


-- CryptoDB 
select 'Cparvum_RT_PCR_Kissinger' as profile_name,
       'Kissinger::KissingerRtPcrProfiles' as module,
       'Expression profile - semi-quant. Real Time-PCR' as display_name,
       'Expression profile - semi-quant. Real Time-PCR' as description,
       'Time point' as x_axis,
       'Median Expr. (standardized)' as y_axis,
        9 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
    from dual
    UNION

--select 'CparIowaII Lippuner mRNA Seq data' as profile_name,
--       'Lippuner::CpSimpleRNASeq' as module,
--       'Transcriptome of intestinal stages of <i>C. parvum</i>' as display_name,
--       'The coverage values in the graph are displayed in log2 scale' as description,
--       '<i>C.parvum</i> transcriptome of intestinal stages - CL1, CL2, CL3 and CL4 samples' as x_axis,
--       'log2 of (number of aligned tags / million aligned tags). Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
--' as y_axis,
--        382 as order_num,
--        'TRUE' as mainOpen,
--        'FALSE' as dataOpen,
--       'coverage,pct' as visible_parts,
--        '' as dataTable,
--      'expression' as type,
--        'cparIowaII_Lippuner_rnaSeq_RSRC' as attribution
--from dual
--    UNION


-- ToxoDB
-- 1
select 'Expression profiling of the 3 archetypal T. gondii lineages' as profile_name,
       'Roos::ToxoLineages::Ver1' as module,
       'Expression profiling of <i>Toxoplasma gondii</i> tachyzoites (str RH/GT1/Pru/ME49/CTG/Veg)' as display_name,
       'Determination of strain-specific differential expression by profiling wildtype tachyzoites from the RH, Pru, GT1, VEG, ME49 and CTG strains of <i>T. gondii</i>' as description,
       'Strain' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3)' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma' as visible_parts,
        'ToxoStrainsMicroarrayPercentile' as dataTable,
      'expression' as type,
        'Tg_3_Archetypal_Lineages_ExpressionData' as attribution
    from dual

-- 2
UNION
select 'T. gondii VEG Day 3-4 Tachyzoite aligned to the TgME49 Genome-profiles' as profile_name,
       'Reid::TgME49RnaSeq' as module,
       'Expression profiling of <i>T. gondii</i> tachyzoites (str ME49, d3/4, RNA-seq)' as display_name,
       'The values in the graph are displayed in log2 scale. Poly-adenylated RNA was sequenced as 76bp, paired-end reads using the Illumina GAII. Parasites were not synchronised; days 3 and 4 samples are considered to overlap and thus represent biological replicates of expression during the tachyzoite stage, rather than distinct timepoints.' as description,
       'T. gondii ME49 Day 3 and Day4 Tachyzoite Form' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        20 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rpkm,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'TgME49_RNASeq_Tachyzoite_Reid_RSRC' as attribution
from dual

-- 3
UNION 
   select 'M.White Cell Cycle Microarray profiles' as profile_name,
       'White::CellCycle' as module,
       'Transcriptomics across the intracellular tachyzoite cell cycle (str RH, synchronized, 1-hr sampling)' as display_name,
       'The RH<sup>TK+</sup> strain used in this analysis expresses a fusion protein of herpes simplex thymidine kinase and chloramphenicol acetyltransferase (<a href="http://www.ncbi.nlm.nih.gov/pubmed/10496908">Radke and White</a>).  Synchronization of RH<sup>TK+</sup> parasites with thymidine followed published protocols (<a href="http://www.ncbi.nlm.nih.gov/pubmed/10496908">Radke and White</a>).  <b>In this synchrony model parasites released from thymidine immediately progress through S, mitosis and then cytokinesis</b>.  The first G1 phase is the start of the next cycle.  All time points represent microarray hybridization results from duplicate, independent biological replicates.  <br><br><b>The R0-12 time course represents ~1-2/3 divisions</b> with tachyzoite cell cycle phase repeats R1,R2=R8,R9, R3=R10, R4=R11, and R5=R12 (<a href="http://www.plosone.org/article/info%3Adoi%2F10.1371%2Fjournal.pone.0012354">Behnke et al., 2010</a>)' as description,
       'Time point in hours' as x_axis,
       'RMA Value in upper graph or expression percentile value in lower graph.' as y_axis,
        30 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'T.gondii_MWhite_CellCycle_Array_Profiles' as attribution
    from dual
--4
UNION
select 'Expression profiles of Tgondii ME49 Carruthers experiments' as profile_name,
       'Carruthers::IntraExtraDiff' as module,
       'Intracellular vs. extracellular tachyzoites (str RH)' as display_name,
	   'Three sample types were harvested: extracellular, intracellular 0hr, intracellular 2hr. 2 replicates each. Expression for >80% of the regulated genes exhibits a steady downregulation during invasion.' as description,
       'Sample Type
            1. Extracellular: Harvested from outside the cell, pre-invasion
            2. Intracellular_0hr: Harvested from inside the cell, shortly after invasion
            3. Intracellular_2hr: Harvested from inside the cell, 2 hours after invasion' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        40 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'rma,pct' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'Tg_Carruthers_GSE20480_RSRC' as attribution
    from dual
--5
UNION
select 'Expression profiles of Tgondii ME49 Boothroyd experiments' as profile_name,
       'Boothroyd::TgME49M4' as module,
       'Expression profiling of <i>T. gondii</i> oocyst, tachyzoite & bradyzoite stages (str M4)' as display_name,
       'There were three primary objectives to the overall experiment. <br/> I. Describe the transcriptome of the oocyst through its development beginning with the freshly excreted, unsporulated oocyst at "Day 0" to a fully sporulated and mature oocyst at "Day 10" and including a mid-sporulation timepoint at "Day 4".  <br/>II. Compare the transcriptomes of <i>in vitro</i> vs. <i>in vivo</i> derived bradyzoites.<br/> III. Compare expression data from three life stages (oocyst, bradyzoite and tachyzoite) from the same parasite isolate, M4, which has been been characterized as a Type II strain.' as description,
       '1. Time post infection or sporulation (i.e. 4d vs 8d Bradyzoites and 4d vs 10d sporulated oocyst). <br/>2. Developmental form (Oocyst, Tachyzoite, Bradyzoite). <br/> 3. Bradyzoite samples - obtained <i>in vitro</i> vs. <i>in vivo</i>' as x_axis,
       'The RMA values in log2 scale.' as y_axis,
        50 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'tgME49Boothroyd_RSRC' as attribution
from dual

--6
UNION 
select 'expression profiles of RH delta-HXGPRT delta-UPRT strain Alkaline bradyzoite-inducing conditions' as profile_name,
       'Roos::TzBz' as module,
       'Bradyzoite differentiation (str Pru/RH, alkali/NaNP/-CO2, 6-hr sampling 0-72 hr)' as display_name,
       'Two strains of T. gondii parasites were used in this analysis: type II Prugniaud lacking HXGPRT, and type I RH lacking HXGPRT and UPRT. A total of three experimental conditions were used to promote in vitro bradyzoite differentiation: Alkaline conditions (D10 media adjusted to pH 8.2), CO2 starvation (MEM with 10% FBS, 25mM HEPES, pH 7.2 grown without CO2), and sodium nitroprusside (SNP) exposure (D10 with 100uM SNP). All conditions were applied 6hr post-inoculation and each media was exchanged every twelve hours post-inoculation.' as description,
       'Time in hours' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        60 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Brady_Time_Series' as attribution
    from dual

--7 
UNION
select 'expression profiles of T. gondii Matt_Tz-Bz time series' as profile_name,
       'Boothroyd::TzBz' as module,
       'Bradyzoite differentiation (str Pru, alkali, 24-hr sampling 0-4d)' as display_name,
       'T. gondii Type II Prugniaud parasites lacking HXGPRT were inoculated at and MOI of 2 and differentiated in RPMI 1640 lacking sodium bicarbonate, low FCS, and high pH (8.1). RNA was collected from either tachyzoite (2 days post inoculation before monolayer lysis) or bradyzoite cultures (2-days, 3-days and 4-days of induction). ' as description,
       'Time in days' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        70 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Matt_Tz-Bz_Time_Series' as attribution
    from dual

--8
UNION
select 'expression profiles of TgRH_Matrajt_GSE23174_Bz_Time_Series' as profile_name,
       'Matrajt::BzTimeSeries' as module,
       'Bradyzoite differentiation (str RH, -CO2, 24-hr sampling 0-4d)' as display_name,
       'Expression profiles of the T. gondii RH extracelluar tachyzoite stage are compared to its bradyzoite stage at 4 time points (24, 36, 48, and 72 hours post invasion)' as description,
       'Sample Type
            1. Extracellular Tachyzoite
            2. Bradyzoite (24 hrs) 
            3. Bradyzoite (36 hrs) 
            4. Bradyzoite (48 hrs) 
            5. Bradyzoite (72 hrs)' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        80 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'rma,pct' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'Tg_Matrajt_GSE23174_Bz_RSRC' as attribution
    from dual

--9
UNION
select 'expression profiles of VEG strain CO2-starvation bradyzoite inducing conditions' as profile_name,
       'Dzierszinski::TzBz' as module,
       'Bradyzoite differentiation (str Pru/Veg, -CO2, multiple samples 2-14d)' as display_name,
       'Two strains of T. gondii parasites were used in this analysis: type II Prugniaud lacking HXGPRT, and type III VEG. CO2 starvation (MEM with 10% FBS, 25mM HEPES, pH 7.2 grown without CO2) was used to induce in vitro bradyzoite differentiation. ' as description,
       'Time in days' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        90 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Brady_Time_Series' as attribution
    from dual

--10
UNION
select 'expression profiles of three Tgondii strains under both normal-tachyzoite and induced-bradyzoite conditoins' as profile_name,
       'White::TzBz' as module,
       'Bradyzoite differentiation (str GT1/ME49/CTG, Cmpd1/alkali, t=0/48 hr)' as display_name,
       'Bradyzoite genes were induced following a 48 hour treatment with compound 1 or alkaline condition. Strains used in this study: Type I-GT1, Type II-Me49B7 and Type III-CTG.' as description,
       'Treatment/Condition' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        100 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Compound1_pH_avg_pct' as attribution
    from dual

--11
UNION
select 'Profiles of GSE22100 GCN5-AE-GEOD-10022 array from Sullivan' as profile_name,
       'Sullivan::GCN5A' as module,
       'TgGCN5-A null mutants during bradyzoite differentiation (str RH, alkali treatment)' as display_name,
       'Disruption of the gene encoding for TgGCN5-A in type I RH strain did not produce a severe phenotype under normal culture conditions, but here we show that the TgGCN5-A null mutant is deficient in responding to alkaline pH,a common stress used to induce bradyzoite differentiation in vitro. We performed a genome- wide analysis of the Toxoplasma transcriptional response to alkaline pH stress, finding that parasites deleted for TgGCN5-A fail to up-regulate 74% of the stress response genes that are induced 2-fold or more in wild-type. Using chromatin immunoprecipitation, we verify an enrichment of TgGCN5-A at the upstream regions of genes activated by alkaline pH exposure. The TgGCN5-A knockout is also incapable of up-regulating key marker genes expressed during development of the latent cyst form, and is impaired in its ability to recover from alkaline stress. Complementation of the TgGCN5-A knockout restores the expression of these stress-induced genes and reverses the stress recovery defect.' as description,
        'There are 4 samples divided based on two criteria
           1. Strain Type 
              a. Wild Type: unmodified ME49 strain
              b. GCN5-A Knockout: ME49 with GCN5-A gene deletion
           2. Growth Conditions 
              a. unstressed: samples were grown in standard culture medium
              b. stressed: samples were grown in alkaline culture medium' as x_axis,
        'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.The RMA values in log2 scale.' as y_axis,
        110 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'rma,pct' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'Tg_Sullivan_GSE22100_GCN5-A_RSRC' as attribution
from dual

--12
UNION 
select 'expression profiles of TgRH_Matrajt_GSE23174_Bz_WildType_V_Mutant' as profile_name,
       'Matrajt::BzMutant' as module,
       'Bradyzoite differentiation mutants (str RH & mutants, -CO2)' as display_name,
       'Expression profiles of seven mutant strains (B7,P11,7K,11K,12K,13P, and 11P) at both the Extracellular tachyzoite and bradyzoite stages were examined, using the T. gondii RH strain as a control. In addition, the expression profile of the intracellular tachyzoite for the T. gondii RH control strain was also provided for comparison. 17 sample types are provided in total' as description,
       'Sample Type
            1. Control: Tachyzoite
            2. Intracellular Tachyzoite
            3. Control: Bradyzoite
            4. 12K Mutant: Tachyzoite
            5. 12K Mutant: Bradyzoite
            6. 13P Mutant: Tachyzoite
            7. 13P Mutant: Bradyzoite
            8. B7 Mutant: Tachyzoite
            9. B7 Mutant: Bradyzoite
            10. 11P Mutant: Tachyzoite
            11. 11P Mutant: Bradyzoite
            12. 11K Mutant: Tachyzoite
            13. 11K Mutant: Bradyzoite
            14. 7K Mutant: Tachyzoite
            15. 7K Mutant: Bradyzoite
            16. P11 Mutant: Tachyzoite
            17. P11 Mutant: Bradyzoite' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        120 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'rma,pct' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'Tg_Matrajt_GSE23174_Bz_RSRC' as attribution
    from dual

--13
UNION

select 'expression profiles of TgRH_Matrajt_GSE23174_Bz_11hr_Egress' as profile_name,
       'Matrajt::BzEgress' as module,
       'Bradyzoite differentiation mutants after egress (str RH & mutants)' as display_name,
       'The expression profile of T. gondii RH 11 hours post egress was compared to that of the same strain in the extracellular tachyzoite stage, as well as 2 mutant strains (13P and B7) which were also collected 11 hours post egress' as description,
       'Sample Type
            1. Extracellular Tachyzoite 
            2. Wild Type: Post-Egress 
            3. 13P Mutant: Post-Egress 
            4. B7 Mutant: Post-Egress' as x_axis,
       'RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3) or expression percentile value.' as y_axis,
        130 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'rma,pct' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'Tg_Matrajt_GSE23174_Bz_RSRC' as attribution
    from dual

UNION
select 'T. gondii VEG Day 3-4 Tachyzoite aligned to the VEG Genome-profiles' as profile_name,
       'Reid::TgVEGRnaSeq' as module,
       '<i>T. gondii Veg</i> day 3-4 tachyzoite form RNA Sequence' as display_name,
       'The values in the graph are displayed in log2 scale. Poly-adenylated RNA was sequenced as 76bp, paired-end reads using the Illumina GAII. Parasites were not synchronised; days 3 and 4 samples are considered to overlap and thus represent biological replicates of expression during the tachyzoite stage, rather than distinct timepoints.' as description,
       'T. gondii VEG Day 3 and Day4 Tachyzoite Form' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        250 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rpkm,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'TgVEG_RNASeq_Tachyzoite_Reid_RSRC' as attribution
from dual

UNION
select 'N. caninum Day 3-4 Tachyzoite-profiles' as profile_name,
       'Reid::NcRnaSeq' as module,
       '<i>N. caninum </i> day 3-4 tachyzoite form RNA Sequence' as display_name,
       'The values in the graph are displayed in log2 scale. Poly-adenylated RNA was sequenced as 76bp, paired-end reads using the Illumina GAII. Parasites were not synchronised; days 3 and 4 samples are considered to overlap and thus represent biological replicates of expression during the tachyzoite stage, rather than distinct timepoints.' as description,
       'T. gondii VEG Day 3 and Day4 Tachyzoite Form' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        250 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rpkm,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Nc_RNASeq_Tachyzoite_Reid_RSRC' as attribution
from dual

   

    UNION

-- GiardiaDB --
select 'Stress Response in Giardia lamblia Trophozoites-Averaged' as profile_name,
       'Hehl::Stress1' as module,
       'Stress response in Trophozoites - Varying DTT Concentrations and Temperature' as display_name,
       '<b>Stress Response in Giardia lamblia Trophozoites</b>: Samples were incubated for 30min with varying concentrations of DTT. Each bar represents the average of three 2-channel hybridizations which were performed versus a control sample (ie. Control=Control/Control,...). Cases where the Control/Control is NOT close to 0 is an indication of experimental variation in the spots mapping to this gene.' as description,
       'Incubation Condition' as x_axis,
       'log(2) ratio in upper graph or expression percentile value in lower graph.' as y_axis,
        60 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'GL_Spycher_metaData' as attribution
    from dual

    UNION

select 'Stress response Dynamics in Trophozoites (time series)-Averaged' as profile_name,
       'Hehl::Stress2' as module,
       'Stress response in Trophozoites - Varying Incubation Time' as display_name,
       '<b>Stress Response in Giardia lamblia Trophozoites</b>: Samples were incubated 30min, 60min, 120min at 14.2mM DTT. Each bar represents the average of three 2-channel hybridizations which were performed versus a control sample (ie. Control=Control/Control,...). Cases where the Control/Control is NOT close to 0 is an indication of experimental variation in the spots mapping to this gene.' as description,
       'Incubation Time' as x_axis,
       'log(2) ratio in upper graph or expression percentile value in lower graph.' as y_axis,
        70 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'GL_Spycher_metaData_2' as attribution
    from dual

    UNION

select 'Hehl encystation expression profile' as profile_name,
       'Hehl::Encystation' as module,
       'Encystation in Trophozoites' as display_name,
       'Two protocols were used to encyst parasites <i>in vitro</i>: the standard 2-step, and a lipid (cholesterol) starvation protocol. Encystation-specific changes of gene expression were analyzed at 45 minutes, 3 and 7 hours post induction.' as description,
       'Encystation Time' as x_axis,
       'log(2) ratio in upper graph or expression percentile value in lower graph.' as y_axis,
        80 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'G.lamblia_Hehl_encystation_Array_Profiles' as attribution
    from dual

    UNION

select 'Profiles of G.lamblia Ringqvist array data' as profile_name,
       'Ringqvist::WbClone' as module,
       'Transcriptional changes in <i>G. intestinalis</i> during host-parasite interactions ' as display_name,
       'Interaction experiments were performed between G. intestinalis GL50803 and 21-day differentiated Caco-2 cells. Trophozoites were separated and collected from the interaction cultures at 1.5 h, 6 h and 18 h time points.  In addition, trophozoites of the same time points were harvested from standard TYI-S-33 cultures and from cultures in only interaction medium (DMEM).  Microarrays of all samples and time points were performed with a common reference, a pool of trophozoites from the 0 hr  time point of three replicate experiments. At least two 2-channel arrays were performed for each time point.' as description,
       'Time point in hours' as x_axis,
       'Fold Change in upper graph or expression percentile value in lower graph.' as y_axis,
        90 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'G.intestinalis_Troell_Svard_Array_Profiles' as attribution
    from dual

    UNION

select 'giar sage tag frequencies sense' as profile_name,
       'Sage::McArthur' as module,
       'Curated SAGE Data (Sense and Antisense Tags)' as display_name,
       'Serial Analysis of Gene Expression (SAGE) was used to monitor gene expression throughout the Giardia life cycle in vitro.  This data is based on the original raw SAGE tag data and was extensively manually curated.' as description,
       'Time points post excystation or encystation are indicated in hours.<br />S1 (stage 1) = acidic condition to mimic the stomach.<br />S2 (Stage 2) = trypsin and slight alkaline conditions to mimic the small intestine.' as x_axis,
       'Percent of sense and antisense transcripts within individual SAGE libraries.' as y_axis,
        100 as order_num,
        'TRUE' as mainOpen,
        'TRUE' as dataOpen,
       'sage' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'GiardiaSageTagArrayDesign,GiardiaSageTagFreqs' as attribution
    from dual

    UNION

select 'Lau B.b. Virulent vs Attenuated' as profile_name,
       'Lau::Bbovis' as module,
       'Babesia bovis virulent v. attenuated expression' as display_name,
       'In this study, Total RNA from the virulent (V) parental strain and attenuated (A) derivative strain was prepared for the company.  All subsequent processing of the cDNA to be hybridized onto the array was carried out by Mycroarray.com.' as description,
       'Attenuated vs. Virulent' as x_axis,
       '(exprn_val) left - normalized expression value.<br> (percentile) Ranking percentile of intensity, relative to all other genes.' as y_axis,
       5 as order_num,
       'TRUE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual

UNION

-- PlasmoDB --


select 'Profiles of DD2-HB3 expression from Ferdig' as profile_name,
       'Ferdig::DD2_X_HB3' as module,
       'Expression Data for HB3 x DD2 Progeny' as display_name,
       'In this study, genome-wide expression level polymorphisms (ELPs) were examined in a genetic cross between phenotypically distinct parasite clones of <i>P. falciparum</i> (HB3 and Dd2). Using cDNA microarray hybridizations from the progeny of a genetic cross, gene expression quantitative trait loci (eQTLs) were mapped in an experimental population of malaria parasites. Each gene''s transcript level was used as a segregating phenotype to identify regions of the Plasmodium genome dictating transcriptional variation.' as description,
       'Progeny' as x_axis,
       '(xy_scatter) Loess Normalized Values (log2(R/G)); <br> (percentile) expression percentile value.' as y_axis,
        14 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'xy_scatter,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
from dual

UNION


select 'E-GEOD-10022 array from Su' as profile_name,
       'Su::CQTreatment' as module,
       'Expression and genomic changes after exposing drug-selected mutants to short term CQ treatment in <i>P. falciparum</i>' as display_name,
       'Mutations in PfCRT confer chloroquine (CQ) resistance in P. falciparum. Point mutations in the homolog of the mammalian multidrug resistance gene (pfmdr1) can also modulate the levels of CQ response. However, parasites with the same pfcrt and pfmdr1 alleles exhibit a wide range of drug sensitivity, suggesting that additional genes contribute to levels of CQ resistance (CQR).<br>3 isogenic lines which have different drug resistance profiles corresponding to unique mutations in the pfcrt gene (106/1K76, 106/176I, and 106/76I-352K) were used to study changes in gene expression with and without chloroquine  and genomic variations, i.e. copy number (CN) changes.' as description,
       'isogenic line' as x_axis,
       '(rma) RMA Normalized Values (log base 2 generated with RMAExpress v1.0.3);<br>(percentile) expression percentile value.' as y_axis,
        8 as order_num,
        'FALSE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
from dual

UNION

select 'Profiles of E-TABM-438 from Cowman' as profile_name,
       'Cowman::Sir2KO' as module,
       'Transcription profiling of wild type, Pfsir2A knock-out and Pfsir2B knock-out <i>P. falciparum</i> intra-erythrocytic stages' as display_name,
       'Pfsir2A and Pfsir2B KOs expression profiling in intra-erythrocytic stages' as description,
       'intra-erythrocytic stage' as x_axis,
       '(rma) RMA Normalized Values (log base 2 generated with RMAExpress);<br>(percentile) expression percentile value. ' as y_axis,
        9 as order_num,
        'FALSE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
from dual

UNION




select 'P. falciparum Newbold mRNA Seq data' as profile_name,
       'Newbold::IRBC' as module,
       '<i>P.falciparum</i> RNA Sequence Profiles - Intraerythrocytic Cycle' as display_name,
       'Illumina-based massively parallel sequencing was used to gain new insight into the transcriptome (RNA-Seq) of the human malaria parasite, <i>P. falciparum</i>. Using data collected at seven time points during the intraerythrocytic developmental cycle, we (i) detect novel gene transcripts; (ii) correct hundreds of gene models; (iii) propose alternative splicing events; and (iv) predict 5 prime and 3 prime untranslated regions.' as description,
       'Hours in the intraerythrocytic developmental cycle' as x_axis,
       'X/(Y * Z) where X = num bases of reads mapped to the gene; Y = total number of bases (in billions) of reads mapped; Z = length of the gene; Values plotted are log base 2' as y_axis,
        10 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage_line,coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
from dual


UNION
select 'pfal3D7_Stunnenberg_pi_time_series' as profile_name,
       'Stunnenberg::PfRBCRnaSeq' as module,
       '<i>P. falciparum</i> post infection (RBC) RNA Seq (time series)' as display_name,
       'Total RNA was collected from one synchronous 3D7 parasite population at 5, 10, 15, 20, 25, 30, 35 and 40 hours post-invasion of intraerythrocytic development. mRNAs were enriched using polyA-selection (Oligotex dT, Qiagen), fragmented and converted to double-stranded cDNA. All samples were prepared for Illumina sequencing using a customized bias-free sample preparation protocol and sequenced for 76bp from one side of each fragment on an Illumina GAII machine. The scaled graph represents the expression level scaled to the amount of RNA isolated / nucleus to normalize for difference in total RNA produced at different stages of the iRBC cycle. More detail about the scaling can be found on the <a href="showQuestion.do?questionFullName=InternalQuestions.GenesByRNASeqEvidence">P.f. post infection (RBC) RNA-seq time series (fold change)</a> query page.' as description,
       'Time Point post infection' as x_axis,
       'X/(Y * Z) where X = num bases of reads mapped to the gene; Y = total number of bases (in billions) of reads mapped; Z = length of the gene; Values plotted are log base 2' as y_axis,
        11 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage_line,coverage,scaled_coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
from dual

UNION

select 'P.falciparum duffy mRNA Seq data' as profile_name,
       'Duffy::PfRnaSeq' as module,
       '<i>P. falciparum</i> NSR Sequence Coverage' as display_name,
       'NSR-seq was used to analyze the transcriptome of an unsynchronized in vitro culture of human malaria parasite P. falciparum reference strain 3D7, and two pools of field isolates from malaria-infected pregnant women and children adapted to short-term in vitro culture and matched by the percentage of rings, trophozoites and schizonts.' as description,
       'Parasites from pregnant women, Parasites from children, 3D7' as x_axis,
       'X/(Y * Z) where X = num bases of reads mapped to the gene; Y = total number of bases (in billions) of reads mapped; Z = length of the gene; Values plotted are log base 2' as y_axis,
        12 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,percentile' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
from dual
UNION


select 'Profiles of Derisi HalfLife-half_life' as profile_name,
       'DeRisiHalfLife::Combined' as module,
       'mRNA half-lives during intraerythrocytic development - 3D7 post treatment with actD' as display_name,
       'Intraerythrocytic development of Plasmodium 3d7 with the addition of actinomycin D (actD), to achieve transcription inhibition. The mRNA half-life data was obtained from the supplementary material provided with the publication.  Normalized expression levels were calculated for each probe and then averaged for every gene.' as description,
       'Erythrocytic lifecycle stages for barplot or time in minutes' as x_axis,
       '(half_life) mRNA half-lives for each stage of erythrocytic development (in minutes) for barplot;<br> (expr_val) expression level normalized to the 0 Hour' as y_axis,
       13 as order_num,
       'TRUE' as mainOpen,
       'FALSE' as dataOpen,
       'half_life,expr_val' as visible_parts,
        '' as dataTable,
      'expression' as type,
       '' as attribution
from dual
UNION



select 'Expression profile of 3D7 clones 3D7AH1S2 and 3D7S8.4' as profile_name,
       'MEXP128::Ver2' as module,
       'Intraerythrocytic comparison of antigenic and adherent variant clones of P. falciparum 3D7' as display_name,
       'Comparison of expression profile of two 3D7 isogenic clones : 3D7S8.4 vs. 3D7AH1S2 (M=log2(3D7S8.4/3D7AH1S2) at three different stages of intraerythrocytic cycle: ring, trophozite and schizont stage. ' as description,
       'intraerythrocytic cycle stage' as x_axis,
       '(exprn_val) left - normalized expression value, right - expression fold change;<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
       5 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

select 'Profiles of Cowman Invasion KO-averaged' as profile_name,
       'Cowman::Ver2' as module,
       'Sir2 and invasion pathway studies (WT vs. KO)' as display_name,
       'Comparasion of assays of P. falciparum RNA when the Sir2 histone deacetylase gene is knocked out, when an erythrocyte binding protein (EBA-175, EBA-140, or pfRh2b) is knocked out, or in their associated controls' as description,
       '(rma) Affymetrix RMAExpress expression value normalized by experiment;<br> (percentile) Ranking percentile of intensity, relative to all other genes' as x_axis,
       'strain and time point' as y_axis,
       6 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

select 'winzeler_cc_tempExp' as profile_name,
       'Winzeler::Cc' as module,
       'Intraerythrocytic 3D7 (photolithographic oligo array)' as display_name,
       'Plasmodium developmental stages synchronized by sorbitol and temperature. Data for Gametocyte sample corresponds to synchronization only by sorbitol, and for Sporozoite sample represents average of two replicates. (all graphs)' as description,
       'Stages: ER = Early Rings | LR = Late Rings | ET = Early Trophs | LT = Late Trophs | ES = Early Schizonts | LS = Late Schizonts | M = Merozoites | S = Sporozoites | G = Gametocytes' as x_axis,
       '(winzeler) Log (base 2) ratio of Affymetrix RMAExpress expression value (normalized by experiment) to average RMAExpress value for all time points for a gene;<br> (rma) Affymetrix RMAExpress expression value normalized by experiment;<br>(percentile) Ranking percentile of each gene''s intensity relative to all other genes for a given experiment' as y_axis,
       2 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'winzeler,rma,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

select ' winzeler_3D7_gametocyte' as profile_name,
       'WbcGametocytes::Ver2' as module,
       'Gametocyte 3D7/NF54 (photolithographic oligo array)' as display_name,
       'Comparison of normalized expression values and expression percentiles for Pf 3D7, Pf isolate NF54, and Pf 3D7 purified by MACS (magnetic affinity column speration) samples.' as description,
       'Day of gametocytogenesis ' as x_axis,
       '(rma) Affymetrix RMAExpress expression value normalized by experiment;<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
       3 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION


select 'newbold gene profiles sorted mild-severe' as profile_name,
       'Newbold::Patients' as module,
       'Ex vivo intraerythrocitic expression assays of Plasmodium falciparum in malaria infected patients' as display_name,
       'Plasmodium falciparum directly from the blood of infected individuals was cultured to examine patterns of mature-stage gene expression in patient isolates.' as description,
       'Patients with diverse sympotoms of malaria.' as x_axis,
       '(rma) log2 of the RMA normalized values;<br>(percentile) Percentiles are calculated for each sample within array.' as y_axis,
       7 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

select 'DeRisi HB3 Smoothed' as profile_name,
       'DeRisi::Combined' as module,
       'Developmental series (glass slide oligo array)' as display_name,
       'Expression assays of the intraerythrocytic developmental cycle (IDC) of 3 Pf strains (3D7, DD2, and HB3)' as description,
       'Time in hours after adding synchronized culture of 3D7 parasites to fresh blood ' as x_axis,
       '(expr_val) Expression Values - log(ratio);<br>(percentile) Expression intensity percentile;<br> (lifestage) Lifecycle stage' as y_axis,
       4 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'expr_val_HB3,percentile_HB3,lifeStages_HB3,expr_val_3D7,percentile_3D7,lifeStages_3D7,expr_val_Dd2,percentile_Dd2,lifeStages_Dd2' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

-- select 'percentile - daily_patient-number' as profile_name,
--        'Daily::SortedRmaAndPercentiles' as module,
--        'Distinct physiological states of Plasmodium falciparum in malaria infected patients' as display_name,
--        '' as description,
--        '' as x_axis,
--        '' as y_axis,
--        157 as order_num,
--        'FALSE' as mainOpen,
--        'FALSE' as dataOpen,
--        '' as visible_parts,
--        '' as dataTable,
--        'expression' as type,
--        '' as attribution
-- from dual
-- UNION

select 'P. berghei DOZI array data' as profile_name,
       'Waters::Dozi' as module,
       'P.Berghei Differential Expression - DOZI KO vs. WT' as display_name,
       'mRNA abundance was compared between DOZI (development of zygote inhibited) mutant and wt parasite strains.' as description,
       'DOZI mutant vs wild type' as x_axis,
       '(exprn_val) left - differential expression value, right - expression fold change;<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
       15 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

select 'Waters HP' as profile_name,
       'Waters::Ver2' as module,
       'P. berghei expression in late schizont, ring, early trophozoite, and early schizont stages' as display_name,
       'There are two timecourses: HP and HPE. HP is High Producer (as in gametocytes) and HPE is High Producer "E".' as description,
       'Life cycle stage' as x_axis,
       '(exprn_val) left - normalized expression value, right - expression fold change;<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
       16 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION

select 'ZB Pvivax time series 1' as profile_name,
       'ZBPvivaxTS::Ver2' as module,
       'Intraerythrocytic Time Series' as display_name,
       'Transcriptional profile throughout the 48-h intraerythrocytic cycle of three distinct P. vivax clinical isolates. Samples were collected on the Northewestern border of Thailand and taken before treatment.' as description,
       'Using the best fit Pearson correlations, correlated gene expression data in TP1-9 in P. vivax to the expression data in TP 9, 13, 17, 20, 23, 29, 35, 40, and 43 in the P. falciparum transcriptome.' as x_axis,
       '(expn_val) Log (base 2) ratio of expression value (normalized by experiment) to average value for all time points for a gene; (percentile) Ranking (percentile) of each gene''s intensity relative to all other genes for a given experiment.' as y_axis,
       17 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION
select 'westenberger vivax expression profile' as profile_name,
       'WestenbergerVivax::Ver2' as module,
       'Asexual parasites from patient blood samples' as display_name,
       'Asexual parasites were extracted from patients who presented to local health clinics in the Peruvian Amazon region of Iquitos with typical signs and symptoms of malaria. These were evaluated by light microscopy examination of Giemsa-stained blood smears to have P. vivax parasitemia. P. vivax sporozoites were obtained from Sanaria, Inc. from mosquitoes fed on P. vivax infected chimpanzees infected with India VII strain P. vivax.' as description,
       'Patient/Sample' as x_axis,
       '(rma) RMAExpress Expression value (log2 scale); (percentile) Percentiles are calculated for each sample within array.' as y_axis,
       18 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION
select 'kappe_all_comparisons_profiles' as profile_name,
       'Kappe::ReplicatesAveraged' as module,
       'Relative expression profiles between liver, mosquito, and red cell stage parasites' as display_name,
       'Relative expression profiles between liver, mosquito, and red cell stage parasites' as description,
       'ooSpz: Sporozoites from infected A. stephensi mosquitoes midguts (harvested 10 days after mosquito feeding)<br/>
       sgSpz: Sporozoites from infected A. stephensi mosquitoes salivary glands (harvested 15 days after mosquito feeding)<br/>
       LS24: Isolated liver stage infected hepatocytes 24 hrs after in vivo infection<br/>
       LS40: Isolated liver stage infected hepatocytes 40 hrs after in vivo infection<br/>
       LS50: Isolated liver stage infected hepatocytes 50 hrs after in vivo infection<br/>
       Schz: Purified erythrocytic schizonts<br/>
       BS: mixed erythrocytic stages when parasitemia was at 5-10%' as x_axis,
       'Expression Values represent the relative expression level between pairs of conditions expressed as base-2 logarithms (note that M is in units of 2-fold change so in a comparison M = 0 denotes equal expression, M = +/-1 denotes a 2-fold difference in expression between the compared samples, etc.) - each is the average of all arrays representing the indicated comparison. <br/>
       Percentile graph gives the expression percentile of the two conditions for each of the comparisons - each is the average percentile over all arrays representing that comparision.' as y_axis,
       19 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'exprn_val,percentile,percentile_combined' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION
select 'winzeler py mixed' as profile_name,
       'WinzelerYoelii::Ver2' as module,
       'Expression profile of blood stage, live stage, gametocyte, and sporozoite samples' as display_name,
       'Expression profile of blood stage, live stage, gametocyte, and sporozoite 14 samples' as description,
       '<table> <tr><td>G(1)</td><td>Gametocyte 1</td></tr> <tr><td>G(2)</td><td>Gametocyte 2</td></tr> <tr><td>GM(1)</td><td>Gametocyte 1 Mature</td></tr> <tr><td>GI(2)</td><td>Gametocyte 2 Immature</td></tr> <tr><td>S</td><td>Schizont</td></tr> <tr><td>MB</td><td>Mixed blood</td></tr> <tr><td>MB</td><td>Mixed blood</td></tr> <tr><td>SS(1) 14 dpi</td><td>Salivary sporozoite 1 (14 days post infection)</td></tr> <tr><td>SS(2) 14 dpi</td><td>Salivary sporozoite 2 (14 days post infection)</td></tr> <tr><td>SS(3) 14 dpi</td><td>Salivary sporozoite 3 (14 days post infection)</td></tr> <tr><td>MS(1) 9 dpi</td><td>Midgut sporozoite 1 (9 days post infection)</td></tr> <tr><td>MS(2) 9 dpi</td><td>Midgut sporozoite 2 (9 days post infection)</td></tr> <tr><td>LS(1) 36 hpi</td><td>Liver subtraction 1 (36 hours post infection)</td></tr> <tr><td>LS(2) 40 hpi</td><td>Liver subtraction 2 (40 hours post infection)</td></tr> </table> ' as x_axis,
       '(rma) RMA expression values; <br>(percentile)Ranking percentile of intensity, relative to all other genes' as y_axis,
       20 as order_num,
       'FALSE' as mainOpen,
       'FALSE' as dataOpen,
       'rma,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION
select 'DeRisi 3D7 Smoothed' as profile_name,
       'OverlayIRBC::Ver2' as module,
       'Overlay of Intraerythrocytic Expression Profiles' as display_name,
       '1. Studies by the Derisi Lab of P. falciparum strains HB3, 3D7, and Dd2 used glass slide arrays. 2. Studies by the Winzeler Lab of Sorbitol- and Temperature-synchronized 3D7 strain parasites used Affymetrix oligonucleotide arrays.' as description,
       'Hours Post-Erythrocytic Invasion' as x_axis,
       '(derisi,winzeler) Expression Values - log(ratio);<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
       1 as order_num,
       'TRUE' as mainOpen,
       'FALSE' as dataOpen,
       'derisi,winzeler,percentile' as visible_parts,
       '' as dataTable,
       'expression' as type,
       '' as attribution
from dual
UNION
--select 'Profiles of transcriptional variation in Plasmodium falciparum 3d7a' as profile_name,
--       'CortesTransVar::TimeSeries' as module,
--       'Transcriptional Variation Time Series ' as display_name,
--       'To characterize transcriptional variation in P. falciparum, and to identify genes under clonally variant gene expression, the transcriptome of 21 P. falciparum lines was characterized over a 43 Hour time course. The analysis was based on four independent comparisons, with all parasite lines within a comparison sharing a clonal origin. a fifth comparison including genetically-different parasite lines was also performed. <br>
--            The 5 groups of <i>P. falciparum strains were: <br>
--            Parental    : 3D7; 7G8; D10; HB3A<br>
--            3D7-derived : 10G; 1,2B; 3D7A; 3D7B;  W41<br>
--            7G8-derived : 7G8; KG7; LD10; WE5; ZF8<br>
--            D10-derived : D10; E3; F1; F2; G4<br>
--            HB3-derived : AB10; AB6; BB8; BC4; HB3A; HB3B' as description,
--       'Hours Post-Infection' as x_axis,
--       '(exprn_val) Expression Values - log(ratio);<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
--       22 as order_num,
--       'TRUE' as mainOpen,
--       'FALSE' as dataOpen,
--       'exprn_val_Parental,percentile_Parental,exprn_val_3D7_derived,percentile_3D7_derived,exprn_val_7G8_derived,percentile_7G8_derived,exprn_val_D10_derived,percentile_D10_derived,exprn_val_HB3_derived,percentile_HB3_derived' as visible_parts,
--       '' as dataTable,
--       'expression' as type,
--       '' as attribution
--from dual
--UNION
--select 'Profiles of transcriptional variation in Plasmodium falciparum all_strains' as profile_name,
--       'CortesTransVar::CrossStrain' as module,
--       'Transcriptional Variation Across Strains' as display_name,
--       'Transcriptional analysis based on gDNA from 20 P. falciparum lines were hybridized against a reference pool (gDNA from3D7-A parasite line)<br>
--        The 20 <i>P. falciparum strains, (grouped by clonal origin) were: <br>
--            3D7-derived : 10G; 1,2B; 3D7B;  W41<br>
--            7G8 derived : 7G8; KG7; LD10; WE5; ZF8<br>
--            D10 derived : D10; E3; F1; F2; G4<br>
--            HB3 derived : AB10; AB6; BB8; BC4; HB3A; HB3B' as description,
--       'Hours Post-Infection' as x_axis,
--       '(exprn_val) Expression Values - log(ratio);<br> (percentile) Ranking percentile of intensity, relative to all other genes' as y_axis,
--       21 as order_num,
--       'TRUE' as mainOpen,
--       'FALSE' as dataOpen,
--       'exprn_val,percentile' as visible_parts,
--       '' as dataTable,
--       'expression' as type,
--       '' as attribution
--from dual
--UNION

-- AmoebaDB --
select 'EhistolyticaAffyProfiles' as profile_name,
       'Singh::SinghEhTimeSeries' as module,
       '<i>E. histolytica</i> Microarray Profiles (Gene expression in <i>E. histolytica</i> cysts and trophozoites)' as display_name,
       '<br><u>RMA normalized</u> (log base 2) values are plotted for each stage/strain in the top graph.<br><br>The <u>Percentile graph</u> (bottom graph) shows the level of expression of each gene relative to other genes in the same strain/stage/media.<br><br><b>Gene expression in Entamoeba histolytica cysts and trophozoites:</b><br>RNA was isolated from <i>E. histolytica</i> parasites recently derived from human patients and grown in xenic culture (Robinson''s media) for 1-8 weeks. These cultures contained a mixture of trophozoites and cysts (as assayed by staining with calcofluor). Two different strains, isolated from different patients, were used. Gene expression in these strains was compared to gene expression in multiple <i>E. histolytica</i> strains (HMI:IMSS, Rahman and 200:NIH)  of pure trophozoites, which had been grown in axenic culture (TYI-S-33)for > 10 years, using a full genome Affymetrix-platform microarray. Multiple lines of evidence suggest that many genes differentially expressed between these two conditions (recent isolates vs. long term lab growth) are developmentally regulated.<br><br>All samples were isolated using Trizol and all except the clinical/cyst samples were cleaned up with the Qiagen RNAeasy kit (those samples had very low RNA levels). Samples GSM154008 (HM1-rep 3) and GSM154011 (Rahman Rep 3) were amplified using the SPIA protocol (these were also hybed and scanned at VBI- other samples were processed entirely by Stanford PAN facility). Samples GSM154022, GSM154023, and GSM154024 (the clinical/cyst samples) were amplified 2 rounds using the standard affy T7 procedure. All others had sufficient RNA and only underwent the standard affy in vitro transcription labeling protocol.' as description,
       'Strain and lifecycle stage' as x_axis,
       'RMA Normalized Values (log base 2) or expression percentile value.' as y_axis,
        160 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'E.histolytica_Intestinal-Colonization_Stage-Conversion_Array_Profiles' as attribution
from dual
UNION
select 'EhistolyticaNugenProfiles' as profile_name,
       'Gilchrist::GilchristEhTimeSeries' as module,
       '<i>E. histolytica</i> Microarray Profiles (Impact of intestinal colonization and invasion on the <i>E. histolytica</i>  transcriptome)' as display_name, 
       '<br><u>RMA normalized</u> (log base 2) values are plotted for each stage/strain in the top graph.<br><br>The <u>Percentile graph</u> (bottom graph) shows the level of expression of each gene relative to other genes in the same strain/stage/media.<br><br><b>Impact of intestinal colonization and invasion on the Entamoeba histolytica  transcriptome:</b><br>An Affymetrix platform gene expression array was designed for this analysis that included probe sets for 9435 open reading frames (ORFs) and 9066 5'' and 3'' flanking regions. Transcripts were detected for > 80% of all ORFs. A total of 523 transcripts (5.2% of all <i>E. histolytica</i> genes) were significantly changed in amebae isolated from the intestine on Days 1 and 29 after infection: 326 and 109 solely on Days 1 and 29, and 88 on both days. Quantitative real-time reverse transcriptase PCR confirmed these changes in 11/12 genes tested using mRNA isolated from an additional six mice.<br><br>HM-1:IMSS and Rahman were not part of this study but have been inlcuded here for comparison' as description,
       'Strain and lifecycle stage' as x_axis,
       'RMA Normalized Values (log base 2) or expression percentile value.' as y_axis,
        170 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'E.histolytica_Intestinal-Colonization_Stage-Conversion_Array_Profiles' as attribution
from dual
UNION
select 'Ehist_Gilchrist_G3_V_HM1:IMSS' as profile_name,
       'Gilchrist::EhG3Hm1Imss' as module,
       '<i>E. histolytica</i> G3  versus  HM1:IMSS Transcript Expression' as display_name, 
       'Comparison of the transcriptomes of the amoebapore (Ehap-a) gene silenced G3 trophozoites with those of the parent HM-1:IMSS strain' as description,
       'Sample Type
            1. G3 (Ehap-a silenced strain) 
            2. HM1:IMSS (Parent strain)' as x_axis,
       'RMA Normalized Values (log base 2) or expression percentile value.' as y_axis,
       180 as order_num,
       'TRUE' as mainOpen,
       'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
       '' as dataTable,
       'expression' as type,
       'Ehistolytica_Gilchrist_GSE28883_RSRC' as attribution
from dual
UNION

--TriTrypDB --
select 'T.brucei Horn RNAi Sequence minProfiles' as profile_name,
       'Horn::TbRNAiRNASeq' as module,
       'RNAi Target Sequencing - Induced vs Uninduced' as display_name,
       'RNAi target sequencing coverage at different life cycle stages. <br><br>In this experiment RNAi plasmid library, containing randomly sheared genomic fragments was used to create an inducible library in bloodstream form T. brucei . After transfection, the library was grown under non-inducing and inducing conditions and genomic DNA was isolated from surviving populations.<br><br>Cells carrying RNAi target fragments that negatively impact fitness through dsRNA expression and RNAi-mediated ablation are relatively depleted as the population expands and these changes are reported by the depth of sequence coverage relative to the uninduced control (No Tet).' as description,
       'Stage/Sample' as x_axis,
       'Coverage - log 2 (RPKM)' as y_axis,
        179 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'cds_rpkm,transcript_rpkm' as visible_parts,
        'RNAiPhenotypingCoverage' as dataTable,
      'phenotype' as type,
        'Tbrucei_RNAiSeq_Horn_RSRC' as attribution
from dual
UNION
select 'Linfantum promastigote time-course biorep01' as profile_name,
       'MylerLinfantum::Ver1' as module,
       'Differentiation Time Series: Promastigote to Amastigote' as display_name,
       'Time series data are shown as Fold Induction compared to the 0 hr.  Positive values are upregulated relative to the 0 hour and negative values are downregulated relative to the 0 hour.  The Percentile graph (below) shows the level of expression relative to other genes for the same experiment.  Values in the data table are log2(R/G)' as description,
       'Time point in hours' as x_axis,
       'Fold Induction (vs. 0 hour) or expression percentile value for raw red and green values.' as y_axis,
        180 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Linfantum_promastigote_ExpressionData' as attribution
from dual
UNION
select 'Profiles of Linfantum axenic and intracellular amastigote array data' as profile_name,
       'Papadopoulou::LiAxenicVsIntracellular' as module,
       'Comparison of Axenic and Intracellular Amastigotes (with Promastigotes) using transcription profiling' as display_name,
       'Comparison of Axenic and Intracellular Amastigotes (with Promastigotes) using transcription profiling' as description,
       'The bars represent a direct comparison of <i>Intercellular Amastigotes vs. Promastigotes (IC.A vs P)</i> <b>AND</b> <i>Axenic Amastigotes vs. Promastigotes (Ax.A vs P)</i>' as x_axis,
       'Fold Induction or percentile.  The percentile was calculated for each channel/sample to give an indication of the expression level of this gene compared to all others on that array.' as y_axis,
        330 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'L.infantum_Papadoupou_Amastigote_Array_PaGE_Analysis' as attribution
from dual
UNION
select 'Expression profiling of T. brucei microarray data from Christine Clayton' as profile_name,
       'Clayton::TbTimeSeries' as module,
       'Transcriptome of in vitro cultured <i>T. brucei</i> during bloodstream form to procyclic differentiation' as display_name,
       'Gene Expression during in vitro differentiation from slender bloodstream forms to stumpy and procyclic forms (click on data sources for additional information about this study).  <br>
				Time series data are shown as <u>Fold Induction</u> compared to established procyclic parasites as the common reference (upper graph).  Positive values are upregulated relative to the reference and negative values are downregulated relative to the reference.  <br>
				The <u>Percentile graph</u> (bottom graph) shows the level of expression of each gene relative to other genes in the same time point.  <br>
				Values in the data table (above) are log2(sample/reference) and were used to generate the values in the fold change graph' as description,
       'High and low density blood forms (hd-bf represents the 0 hour in the time series); Time points are in hours' as x_axis,
       'Fold Induction in upper graph or percentile in lower graph.' as y_axis,
        190 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Tbrucei_Expression_Profiles_From_Christine_Clayton' as attribution
from dual
UNION
select 'Expression profiling of T. brucei differentiation series' as profile_name,
       'Matthews::TbDifferentiationSeries' as module,
       'Dynamic mRNA Expression analysis of cells undergoing synchronous life-cycle differentiation in <i>T. brucei</i>' as display_name,
       'mRNA expression profiles of <i>T. brucei</i> slender and stumpy bloodstream stages, as well as during the transition of the stumpy population to the procyclic life-cycle stage. Data
				represents values derived from 5 parallel biological replicates. (click on data sources for additional information about this study).<br>
				Data is plotted as <u>Fold Induction</u> as compared to the 0hr (stumpy form) time point (upper graph).<br>
				The <u>Percentile graph</u> (bottom graph) shows the level of expression of each gene relative to other genes in the same time point.<br>
				The data table above contains RMA values in log2 scale.' as description,
       'Time points are in hours (sl = slender forms)' as x_axis,
       'Fold Induction in upper graph or percentile in lower graph.' as y_axis,
        200 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Tbrucei_Matthews_differentiation_series' as attribution
from dual
UNION
select 'Expression profiling of Tbrucei five life cycle stages' as profile_name,
       'Parsons::TbDevelopmentalStages' as module,
       'Widespread variation in transcript abundance within and across developmental stages of <i>T. brucei</i>' as display_name,
       'Whole genome comparison of RNA levels for both protein coding genes and structural RNAs in five different life-cycle stages: cultured bloodstream form (bf), in vivo slender bloodstream form (sl), in vivo stumpy bloodstream form (st), log-phase procyclic culture form (pf_log) and stationary-phase procyclic culture form (pf_stat).  Data is averaged from three biological replicas (click on data sources for additional information about this study).<br>
<u>RMA normalized</u> (log base 2) values are plotted for each stage in the top graph.<br>
The <u>Percentile graph </u> (bottom graph) shows the level of expression of each gene relative to other genes in the same life-cycle stage.<br>
The data table above contains the actual expression values.  <b>For this experiment, in the cases where the probe set mapped to near-identical genes, data was assigned to a single representative gene. (see Jensen et al.  PMID: 19840382)</b>
' as description,
       'Average value from three independent biological replicates from five different life cycle stages.' as x_axis,
       'RMA Normalized Values (log base 2) or expression percentile value.' as y_axis,
        210 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rma,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Tbrucei_Parsons_Five_Life_Cycle_Stages_Expression_Profiles' as attribution
from dual
UNION
select 'Profiles of T.cruzi Tarleton Rick array data' as profile_name,
       'Tarleton::TcTranscriptome' as module,
       'Transcriptome analysis of the <i>T. cruzi</i> life-cycle' as display_name,
       'RNA from 3 biological replicates from a single time point in each stage were subjected to DNA microarrays containing probes for the complete, annotated <i>T. cruzi</i> genome (click on data sources for additional information about this study). <br>
				Data is plotted as <u>Fold Induction</u> as compared to a control sample consisting of an equal mixture of all four life-cycle stages (Upper graph). <br>
				The <u>Percentile graph</u> (bottom graph) shows the level of expression of each gene relative to other genes in the same lifecycle stage.<br>
				The data table above contains are log2(Red/green) expression values' as description,
       'Average of 3 biological replicates from each Life cycle stage: trypomastigotes(TRP), amastigotes (AMA), epimastigotes (EPI), and metacyclic trypomastigotes (MET).' as x_axis,
       'Fold Induction or percentile.' as y_axis,
        220 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Tcruzi_Tarleton_Rick_Array_Profiles' as attribution
from dual
UNION
select 'Profiles of L.major Beverly Steve array data' as profile_name,
       'Beverley::LmThreeDevStages' as module,
       'Transcription profiling of three developmental stages of Leishmania major - earlylLog, PNA- metacyclics and mouse lesion derived amastigotes' as display_name,
       'Comparison of three developmental stages (Early Log, PNA- metacyclics and Mouse lesion Derived Amastigotes) of L.major FV1.' as description,
       'The bars represent a direct comparison of <i>Mouse Lesion Derived Amastigotes vs. Early Log Procyclic Promastigotes (A v P)</i> <b>OR</b> <i>PNA - Metacyclic Promastigotes vs. Early Log Procyclic Promastigotes (M v P)</i>.  Data for each biologial replicate (3) for each comparison are shown.  The expression values provided in the data table are log2(A/P) and log2(M/P) for each of the replicates.' as x_axis,
       'Fold Induction or percentile.  The percentile was calculated for each channel/sample to give an indication of the expression level of this gene compared to all others on that array.' as y_axis,
        230 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'L.major_Beverley_Steve_Array_Profiles' as attribution
from dual
UNION
select 'Expression profiling of Tbrucei Procyclic TbDRBD3 depletion' as profile_name,
       'Estevez::Drbd3Depletion' as module,
       'Effect of TbDRBD3 depletion on procyclic <i>T. brucei</i> transcriptome' as display_name,
       'In order to analyze whether TbDRBD3 has a role in the regulation of mRNA turnover, the transcriptome of procyclic trypanosomes depleted of TbDRBD3 was compared to that of uninduced cells using hybridizations of genomic microarrays. RNA samples were isolated from cells harvested after 48 hours of induction with tetracycline. At this point, cell growth was barely affected and trypanosomes remained highly motile. 15 microg of RNA were reverse-transcribed in the presence of 100 ng of oligo(dT)12-18, 0.25 mM dATP, 0.25 mM dTTP, 0.25 mM dGTP, 0.05 mM dCTP, 0.05 mM Cy3- or Cy5-dCTP, 50 mM Tris-HCl, pH 8.3, 75 mM KCl, 3 mM MgCl2, 5 mM DTT, 40 U of RNaseOUT (Invitrogen) and 400 U of Superscript III reverse transcriptase (Invitrogen). Reactions were incubated for 3 hours at 50 degrees C, stopped by heating at 70 degrees C for 15 min and treated with 5 U of RNase H for 20 min at 37 degrees C. cDNA was purified using the MinElute kit (Qiagen), ethanol precipitated and resuspended in hybridization buffer. Genomic T. brucei microarray glass slides containing ca. 24,000 independent random genomic clones (Brems et al., 2005) were pre-hybridized and hybridized as described (Diehl et al., 2002). Four hybridizations (two biological replicates with a dye swap each) were analyzed.' as description,
        'Direct comparison; 2 biological replicates' as x_axis,
        'Fold Induction or percentile.' as y_axis,
        240 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'expr_val' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'Tbrucei_Procyclic_TbDRBD3_Depletion_Profiles' as attribution
from dual
UNION
select 'T.brucei Clayton RNA Sequence of transcriptome-wide mRNA degradation minProfiles' as profile_name,
       'ClaytonDegradation::TbmRnaDegrd' as module,
       '<i>T. brucei</i> RNA Sequence of transcriptome-wide mRNA degradation' as display_name,
       'The values in the graph are displayed in log2 scale' as description,
       'Samples: WT polyA Tet 0 min, WT polyA Tet 30 min, WT polyA NoTet 0 min, WT polyA NoTet 30 min, WT ribob- Tet 0 min, WT ribo- Tet 30 min, WT ribo- NoTet 0 min, WT ribo- NoTet 30 min, XRNA ribo- Tet 0 min, XRNA ribo- Tet 30 min, XRNA ribo- NoTet 0 min, XRNA ribo- NoTet 30 min' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        250 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rpkm,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        '' as attribution
from dual
UNION
select 'T.brucei Archer Stuart Cell Cycle RNA Sequence min-Profiles' as profile_name,
       'Archer::TbRnaCellCyc' as module,
       '<i>T. brucei</i> Cell Cycle Stages RNA Sequence' as display_name,
       'The values in the graph are displayed in log2 scale' as description,
       'Cell Cycle Stages: Early G1 (0.5 hrs), Late G1 (3 hrs), S (5.5 hrs) and G2 (7.25 hrs)' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        250 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'rpkm,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Tbrucei_RNASeq_ArcherStuart_CellCycle_RSRC' as attribution
from dual
UNION
select 'T.brucei George Cross RNA Sequence min-Profiles' as profile_name,
       'Cross::TbRnaSeqBfPf' as module,
       '<i>T. brucei</i> blood and procyclic forms RNA Sequence' as display_name,
       'The values in the graph are displayed in log2 scale' as description,
       'Cultured Procyclic T. brucei Lister 427 and Cultured Bloodstream T. brucei Lister 427' as x_axis,
       'log2 of the transcript levels of reads per kilobase of exon model per million mapped reads (RPKM).  Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        250 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'rpkm,pct' as visible_parts,
        '' as dataTable,
        'expression' as type,
        'George_Cross_RNA_Seq_Profiles' as attribution
from dual
UNION
select 'T. brucei under heat shock array data' as profile_name,
       'Carrington::TbHeatShock' as module,
       '<i>T. brucei</i> heat shock array data' as display_name,
       'Procyclic trypanosomes (strain 427 lister) were grown in culture under standard conditions at 27&deg;C in SDM79 medium with 10% foetal bovine serume (Brun and Schnenberger, 1979), in a gazed incubator (5% CO2). Logarithmically growing procyclic cells (at about 5*10^6 cells/ml, at 27&deg;C) were added to one volume medium that had been heated to 53&deg;C and incubated at 41&deg;C for 60 minutes in a waterbath in a closed tube (41&deg;C sample). The control cells were added to one volume medium at 27&deg;C and also incubated for 60 minutes in a closed tube at 27&deg;C. Cells were harvested and washed once in PBS. The harvesting was done within 8 minutes.' as description,
       'The bar represent the heat shock data versus the control' as x_axis,
       'Fold Induction or percentile.' as y_axis,
        260 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'T.brucei_Carrington_HeatShock_Array_PaGE_Analysis' as attribution
from dual
UNION
select 'T. brucei DHH1 wild type array data' as profile_name,
       'Carrington::TbCombined' as module,
       '<i>T. brucei</i> DHH1 wild type and DHH1 DEAD-DQAD mutant array data' as display_name,
       'Induction of the expression of the DHH1 wild type and the DHH1 DEAD:DQAD mutant from pLEW100 for 24 hours (thus, &plusmn; 24 hours Tetracycline). Non-induced cells were used as control.' as description,
       'The bars represent the DHH1 wild type and DHH1 DEAD-DQAD mutant data versus the control' as x_axis,
       'Fold Induction or percentile.' as y_axis,
        270 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
        'expr_val,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'T.brucei_Carrington_DHH1_induction_wildType_Array_PaGE_Analysis,T.brucei_Carrington_DHH1_induction_Mutant_Array_PaGE_Analysis' as attribution
from dual
--UNION
--select 'Lmajor RNASeq Spliced Leader And Poly A Sites from Myler uniqProfile' as profile_name,
--       'Myler::LmSpliceSites' as module,
--       'Splice Leader mapping of <i>L. major</i> Friedlin promastigotes by RNASeq' as display_name,
--       'The coverage values in the graph are displayed in log2 scale' as description,
--       '<i>L. major</i> Random and Not so random (NSR)' as x_axis,
--       'log2 of (number of aligned tags / million aligned tags). Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
--' as y_axis,
--        280 as order_num,
--        'TRUE' as mainOpen,
--        'FALSE' as dataOpen,
--       'coverage,pct' as visible_parts,
--        '' as dataTable,
--      'expression' as type,
--        'Lmajor_RNASeq_Spliced_Leader_And_Poly_A_Sites_Myler_RSRC' as attribution
--from dual
UNION
select 'T.brucei RNASeq Spliced Leader And Poly A Sites from Nilsson uniqProfile' as profile_name,
       'Nilsson::TbSpliceSites' as module,
       'Splice Leader mapping of <i>T. brucei</i>' as display_name,
       'The coverage values in the graph are displayed in log2 scale' as description,
       '<i>T.brucei</i> bloodstream long slender (Antat1.1), bloodstream short stumpy (Antat1.1), bloodstream (Lister 427), bloodstream procyclic (Antat1.1), and in procyclic forms: Alba 1- (29-13, RNAi), Alba 1+ (29-13, RNAi), Alba 3_4- (29-13, RNAi), Alba 3_4+ (29-13, RNAi)' as x_axis,
       'log2 of (number of aligned tags / million aligned tags). Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
' as y_axis,
        290 as order_num,
        'TRUE' as mainOpen,
        'FALSE' as dataOpen,
       'coverage,pct' as visible_parts,
        '' as dataTable,
      'expression' as type,
        'Tbrucei_RNASeq_Spliced_Leader_And_Poly_A_Sites_Nilsson_RSRC' as attribution
from dual
--UNION
--select 'T.brucei Tschudi RNA Seq data' as profile_name,
--       'Tschudi::TbSimpleRNASeq' as module,
--       'Transcriptome mapping of <i>T. brucei</i>' as display_name,
--       'The coverage values in the graph are displayed in log2 scale' as description,
--       '<i>T.brucei</i> transcriptome mapping 3prime-end-enriched oligo(dT) primed cDNA, 3prime-end-enriched random primed cDNA, 5prime-SL-end-enriched cDNA, 5prime-triphosphate-end-enriched cDNA' as x_axis,
--       'log2 of (number of aligned tags / million aligned tags). Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
--' as y_axis,
--        380 as order_num,
--        'TRUE' as mainOpen,
--        'FALSE' as dataOpen,
--       'coverage,pct' as visible_parts,
--        '' as dataTable,
--      'expression' as type,
--        'tbrucei927_Tschudi_Transcriptome_rnaSeq_RSRC' as attribution
--from dual
-- UNION
-- select 'Tcruzi RNASeq Spliced Leader And Poly A Sites from Nilsson uniqProfile' as profile_name,
--        'Nilsson::TcSpliceSites' as module, 
--        'Splice Leader mapping of <i>T. cruzi</i>' as display_name,
--        'The coverage values in the graph are displayed in log2 scale' as description,
--        '<i>T.cruzi</i> Amastigote JBP1 knockout, Amastigote wild type, Epimastigote JBP1 knockout, Epimastigote wild type, Metacyclic JBP1 knockout, Metacyclic wild type, Trypomastigote JBP1 knockout, Trypomastigote wild type' as x_axis,
--        'log2 of (number of aligned tags / million aligned tags). Stacked bars indicate unique and non-uniquely mapped sequences.  Non-Unique sequences are plotted to indicate the maximum expression potential of this gene.
-- ' as y_axis,
--         290 as order_num,
--         'TRUE' as mainOpen,
--         'FALSE' as dataOpen,
--        'coverage,pct' as visible_parts,
--         '' as dataTable,
--       'expression' as type,
--         'Tcruzi_RNASeq_Spliced_Leader_And_Poly_A_Sites_Nilsson_RSRC' as attribution
-- from dual
) d,   (select distinct ps.name, ga.organism, ga.species
    from apidb.profile p, apidb.profileset ps, geneattributes ga
    where p.profile_set_id = ps.profile_set_id and ga.source_id = p.source_id
    ) psorg
where d.profile_name = psorg.name
      ]]>
    </sql>
  </tuningTable>

<!--
  <tuningTable name="MassSpecTerms">
    <sql>
      <![CDATA[
CREATE TABLE MassSpecTerms&1 NOLOGGING AS
SELECT project_id, extDB_name, display_term FROM (
select 'CryptoDB' as project_id,
       '1D Gel LC-MS/MS ' as display_term,
       'Wastling MassSpec 1D Gel LC-MS/MS' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       '2D Gel LC-MS/MS ' as display_term,
       'Wastling MassSpec 2D Gel LC-MS/MS' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'MudPit Soluble fractions ' as display_term,
       'Wastling MassSpec MudPit Soluble' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'MudPit Insoluble fractions ' as display_term,
       'Wastling MassSpec MudPit Insoluble' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Insoluble Excysted Fraction LC-MS/MS ' as display_term,
       'Lowery MassSpec LC-MS/MS Insoluble Excysted Fraction' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Insoluble Non-excysted Fraction LC-MS/MS ' as display_term,
       'Lowery MassSpec LC-MS/MS Insoluble Non-excysted fraction' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Soluble Excysted and Non-excysted Fraction LC-MS/MS ' as display_term,
       'Lowery MassSpec LC-MS/MS Soluble Excysted and Non-excysted fractions' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       '1D Gel 14Aug2006 ' as display_term,
       'Fiser_Proteomics_14Aug2006_1D_gel' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       '1D Gel 16May2006 ' as display_term,
       'Fiser_Proteomics_16May2006_1D_gel' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       '1D Gel 24Jun2006 ' as display_term,
       'Fiser_Proteomics_24Jun2006_1D_gel' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Oocyst walls ' as display_term,
       'Ferrari_Proteomics_LTQ_Oocyst_walls' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Intact Oocysts ' as display_term,
       'Ferrari_Proteomics_LTQ_intact_oocysts_merged' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Sporozoites ' as display_term,
       'Ferrari_Proteomics_LTQ_Sporozoites_merged' as extDB_name
from dual
UNION
select 'CryptoDB' as project_id,
       'Mitochondrial Fraction' as display_term,
       'C. parvum mass spec data from Lorenza Putignani' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Merozoite ' as display_term,
       'Florens_Life_Cycle_MassSpec_Mrz_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Merozoite ' as display_term,
       'Florens Life Cycle MassSpec-Merozoites' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Trophozoite ' as display_term,
       'Florens Life Cycle MassSpec-Trophozoites ' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Trophozoite ' as display_term,
       'Florens_Life_Cycle_MassSpec_Tpz_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Gametocyte ' as display_term,
       'Florens_Life_Cycle_MassSpec_Gmt_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Gametocyte ' as display_term,
       'Florens Life Cycle MassSpec-Gametocytes' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Sporozoite ' as display_term,
       'Florens_Life_Cycle_MassSpec_Spz_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Sporozoite ' as display_term,
       'Florens Life Cycle MassSpec-Sporozoite' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Merozoite Peptides ' as display_term,
       'Pf_Merozoite_Peptides_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Merozoite Peptides ' as display_term,
       'Kahn Pfalciparum merozoite peptides' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mosquito Oocyst Peptides ' as display_term,
       'Lasonder_Mosquito_Oocysts_Mass_Spec_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mosquito Oocyst Peptides ' as display_term,
       'Lasonder Mosquito oocyst peptides' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mosquito Oocyst-derived Sporozoite Peptides ' as display_term,
       'Lasonder_Mosquito_oocyst_derived_sporozoites_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mosquito Oocyst-derived Sporozoite Peptides ' as display_term,
       'Lasonder Mosquito oocyst-derived sporozoite peptides' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mosquito Salivary Gland Sporozoite Peptides ' as display_term,
       'Lasonder_Mosquito_salivary_gland_sporozoites_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mosquito Salivary Gland Sporozoite Peptides ' as display_term,
       'Lasonder Mosquito salivary gland sporozoite peptides' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Blood Stages - Trophozoites' as display_term,
       'Pf_Lasonder_Proteomics_Blood_Stages_trophozoites_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Blood Stages - Early Gametocytes' as display_term,
       'Pf_Lasonder_Proteomics_Blood_Stages_early_gametocytes_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Blood Stages - Late Gametocytes' as display_term,
       'Pf_Lasonder_Proteomics_Blood_Stages_late_gametocytes_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'iRBC Membrane (PIESPs) / Schizont  ' as display_term,
       'Florens_PIESPs_MassSpec_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'iRBC Membrane (PIESPs) / Schizont  ' as display_term,
       'Florens PIESPs MassSpec' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.falciparum Clinical Proteomics ' as display_term,
       'P.falciparum Clinical Proteomics' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.falciparum Clinical Proteomics ' as display_term,
       'Pfalciparum_Tatu_Clinical_Proteomics_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.falciparum Proteome 42 hrs Post Infection' as display_term,
       'Pfalciparum_Bowyer_Proteomics_42hrs_Post_Infection' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.falciparum Proteome 42 hrs Post Infection' as display_term,
       'Pf_Bowyer_Proteomics_42hrs_Post_Infection_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.falciparum Proteome 48 hrs Post Infection' as display_term,
       'Pfalciparum_Bowyer_Proteomics_48hrs_Post_Infection' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.falciparum Proteome 48 hrs Post Infection' as display_term,
       'Pf_Bowyer_Proteomics_48hrs_Post_Infection_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Female Gametocytes ' as display_term,
       'Waters Female Gametes' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Female Gametocytes ' as display_term,
       'Waters_female_gametes_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Male Gametocytes ' as display_term,
       'Waters Male Gametes' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Male Gametocytes ' as display_term,
       'Waters_male_gametes_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mixed Gametocytes ' as display_term,
       'Waters Mixed Gametes' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Mixed Gametocytes ' as display_term,
       'Waters_mixed_gametes_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.vivax Clinical Proteomics' as display_term,
       'P.vivax Clinical Proteomics' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'P.vivax Clinical Proteomics' as display_term,
       'Pvivax_Tatu_Clinical_Proteomics_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Liver Stage LS40 ' as display_term,
       'Pyoelii LiverStage LS40' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Liver Stage LS40 ' as display_term,
       'Pyoelii_LiverStage_LS40_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Liver Stage LS50 ' as display_term,
       'Pyoelii LiverStage LS50' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       'Liver Stage LS50 ' as display_term,
       'Pyoelii_LiverStage_LS50_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       '<i>P. falciparum</i> 3D7 blood stage (Phospho) peptides (40hours post infection +/-8h, Treeck & Sanders et al)' as display_term,
       'Pf_Boothroyd_Elias_Moritz_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'PlasmoDB' as project_id,
       '<i>P. falciparum</i> 3D7 blood stage peptides (40hours post infection +/-8h, Treeck & Sanders et al)' as display_term,
       'Pf_Boothroyd_Elias_Moritz_Totalproteome_RSRC' as extDB_name
from dual 
UNION
select 'TrichDB' as project_id,
       'T. vaginalis subcellular fraction' as display_term,
       'Hayes-Johnson_Tvag_Proteomics' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       '1-D SDS PAGE' as display_term,
       'Wastling 1-D SDS PAGE' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       '1-D SDS PAGE Soluble Fraction' as display_term,
       'Wastling 1-D SDS PAGE Soluble' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       '1-D SDS PAGE Insoluble Fraction' as display_term,
       'Wastling 1-D SDS PAGE Insoluble' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MudPIT Soluble Fraction' as display_term,
       'Wastling MudPIT Soluble' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MudPIT Insoluble Fraction' as display_term,
       'Wastling MudPIT Insoluble' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Rhoptry Fraction' as display_term,
       'Wastling Rhoptry' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Conoid-enriched Fraction' as display_term,
       'Murray Conoid-enriched Fraction' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Conoid-depleted Fraction' as display_term,
       'Murray Conoid-depleted Fraction' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       '1D Gel Tachyzoite Membrane fraction 12-2006' as display_term,
       '1D Gel Tachyzoite Membrane fraction 12-2006' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       '1D Gel Tachyzoite Membrane fraction 10-2006' as display_term,
       '1D Gel Tachyzoite Membrane fraction 10-2006' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       '2DLC MS/MS Tachyzoite Membrane fraction' as display_term,
       '2DLC MS/MS Tachyzoite Membrane fraction' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS Tachyzoite Cytosolic fraction 05-2007' as display_term,
       'MS Tachyzoite Cytosolic Protein Fractions 05-2007' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS Tachyzoite Membrane fraction 05-02-2006' as display_term,
       'MS Tachyzoite Membrane fraction 05-02-2006' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS Tachyzoite Membrane fraction 06-2006' as display_term,
       'MS Tachyzoite Membrane fraction 06-2006' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS Tachyzoite Membrane fraction 05-10-2006' as display_term,
       'MS Tachyzoite Membrane fraction 05-10-2006' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS Tachyzoite Membrane fraction 02-03-2006' as display_term,
       'MS Tachyzoite Membrane fraction 02-03-2006' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS Tachyzoite Membrane Protein with  Biotinlyation Purification 05-22-2007' as display_term,
       'MS Tachyzoite Membrane Protein with  Biotinlyation Purification 05-22-2007' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS RH Secretome fraction 2destinct peptides' as display_term,
       'MS Carruthers 2destinct peptides' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'MS RH Secretome fraction MudPIT Twinscan hits' as display_term,
       'MS Carruthers MudPIT Twinscan hits' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'RH Mass Spec Data (sample A)' as display_term,
       'Moreno DTASelect filter sample A' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'RH Mass Spec Data (sample G)' as display_term,
       'Moreno DTASelect filter sample G' as extDB_name
from dual 
UNION
select 'ToxoDB' as project_id,
       'Phosphoproteome of intracellular RH tachys' as display_term,
       'Tg_Boothroyd_Elias_Moritz_Intracellular_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Phosphoproteome of intracellular RH tachys' as display_term,
       'TgGT1_Boothroyd_Elias_Moritz_Intracellular_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Proteome of intracellular RH tachys' as display_term,
       'Tg_Boothroyd_Elias_Moritz_Intracellular_Totalproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Proteome of intracellular RH tachys' as display_term,
       'TgGT1_Boothroyd_Elias_Moritz_Intracellular_Totalproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Phosphoproteome of purified RH tachys' as display_term,
       'Tg_Boothroyd_Elias_Moritz_Purified_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Phosphoproteome of purified RH tachys' as display_term,
       'TgGT1_Boothroyd_Elias_Moritz_Purified_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Proteome of purified RH tachys' as display_term,
       'Tg_Boothroyd_Elias_Moritz_Purified_Totalproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Proteome of purified RH tachys' as display_term,
       'TgGT1_Boothroyd_Elias_Moritz_Purified_Totalproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Tg TiO2 Bound Mascot-based Phosphoproteome' as display_term,
       'Tg_Tonkin_TiO2_Bound_Mascot-based_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Tg TiO2 Bound Sequest-based Phosphoproteome' as display_term,
       'Tg_Tonkin_TiO2_Bound_Sequest-based_Phosphoproteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'Tg TiO2 Unbound Phosphoproteome' as display_term,
       'Tg_Tonkin_TiO2_Unbound_Phosphoproteome_RSRC' as extDB_name
from dual 
UNION
select 'ToxoDB' as project_id,
       'M4 Oocyst Walls, bleach-treated' as display_term,
       'TgonME49_BoothroydBowyerOocystMembrane_Proteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'M4 Oocyst Walls, not-treated' as display_term,
       'TgonME49_BoothroydBowyerOocystCytosol_Proteome_RSRC' as extDB_name
from dual
UNION
select 'ToxoDB' as project_id,
       'M4 sporocysts/sporozoites' as display_term,
       'TgonME49_BoothroydBowyerOocystWalls_Proteome_RSRC' as extDB_name
from dual 
UNION
select 'GiardiaDB' as project_id,
       'DTA-Select Filter ' as display_term,
       'DTASelect-filter_032108_Proteomics' as extDB_name
from dual
UNION
select 'GiardiaDB' as project_id,
       'G. intestinalis mitosome enriched fraction - nanoLC/MALDI TOF/TOF ' as display_term,
       'Giardia proteomics data from Tachezy lab' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>Trypanosoma cruzi</i> Esmeraldo-like Amastigote ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Brent_Amastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>Trypanosoma cruzi</i> Non-Esmeraldo-like Amastigote ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Brent_Amastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like Epimastigote ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Brent_Epimastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like Epimastigote ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Brent_Epimastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like Metacyclic ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Brent_Metacyclic_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like Metacyclic ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Brent_Metacyclic_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like Trypomastigote ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Brent_Trypomastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like Trypomastigote ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Brent_Trypomastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like reservosomes-B1 fraction digested with trypsin and endoproteinase Glu-C ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Reservosomes_B1TG_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like reservosomes-B1 fraction digested with trypsin and endoproteinase Glu-C ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Reservosomes_B1TG_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like reservosomes-B1 fraction digested with trypsin' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Reservosomes_B1TU_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like reservosomes-B1 fraction digested with trypsin' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Reservosomes_B1TU_RSRC' as extDB_name
from dual
  UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like reservosomes-B1M fraction digested with trypsin ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Reservosomes_B1MTU_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like reservosomes-B1M fraction digested with trypsin ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Reservosomes_B1MTU_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Esmeraldo-like Proteomic Analysis of Detergent-Solubilized Membrane Proteins from Insect-Developmental Forms ' as display_term,
       'TcruziEsmeraldoLike_Proteomics_Membrane_Protein_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. cruzi</i> Non-Esmeraldo-like Proteomic Analysis of Detergent-Solubilized Membrane Proteins from Insect-Developmental Forms ' as display_term,
       'TcruziNonEsmeraldoLike_Proteomics_Membrane_Protein_RSRC;' as extDB_name
from dual
UNION

select 'TriTrypDB' as project_id,
       '<i>T. brucei</i> Procyclic Form ' as display_term,
       'Tbrucei_Proteomics_PF_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       'Amastigote' as display_term,
       'Amastigote' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       'Promastigote' as display_term,
       'Promastigote' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       'Post translational modification' as display_term,
       'ptl' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> - glycosylated ' as display_term,
       'Linfantum_Proteomics_PTM_glycosylation_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> - acetylated ' as display_term,
       'Linfantum_Proteomics_PTM_acetylation_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> - methylated ' as display_term,
       'Linfantum_Proteomics_PTM_methylation_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> - phosphorylated' as display_term,
       'Linfantum_Proteomics_PTM_phosphorylation_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> Amastigote (1DGel) ' as display_term,
       'Linfantum_Proteomics_Brotherton_SDS_Amastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> Amastigote (2DGel pH6-9) ' as display_term,
       'Linfantum_Proteomics_Brotherton_2DGel_6_9_Amastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i>  Amastigote (2DGel pH6-11) ' as display_term,
       'Linfantum_Proteomics_Brotherton_2DGel_6_11_Amastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> Promastigote (2DGel pH6-9) ' as display_term,
       'Linfantum_Proteomics_Brotherton_2DGel_6_9_Promastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> Promastigote (2DGel pH6-11) ' as display_term,
       'Linfantum_Proteomics_Brotherton_2DGel_6_11_Promastigote_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       'Metacyclogenesis (pH 5-6)' as display_term,
       'Linfantum_Proteomics_OuelletteM_Metacyclic_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i>  Promastigote temperature and pH Control ' as display_term,
       'Linfantum_Proteomics_Brotherton_Promastigote_temperature_and_pH_non_stressed_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i>  Promastigote temperature and pH stressed ' as display_term,
       'Linfantum_Proteomics_Brotherton_Promastigote_temperature_and_pH_stressed_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> Amastigote (Secreted) ' as display_term,
       'Linfantum_Proteomics_Brotherton_Amastigote_Secreted_Protein_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. infantum</i> Promastigote (Secreted) ' as display_term,
       'Linfantum_Proteomics_Brotherton_Promastigote_Secreted_Protein_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. braziliensis</i> Promastigotes ' as display_term,
       'Lbraziliensis_Proteomics_Promastigotes_Secreted_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>L. major</i> Exosomes' as display_term,
       'Lmajor_Proteomics_Exosomes_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. brucei</i> Palmitoylated Proteome' as display_term,
       'Tbrucei_Almeida_Palmitoylated_Proteome_RSRC' as extDB_name
from dual
UNION
select 'TriTrypDB' as project_id,
       '<i>T. brucei</i> Proteomics Bloodstream Form Cytosolic Phosphoproteome' as display_term,
       'Tbrucei_Ferguson_Phospho_Proteome_RSRC' as extDB_name
from dual
)
      ]]>
    </sql>
  </tuningTable>
-->

  <tuningTable name="NaSynteny">
    <externalDependency name="core.TableInfo"/>
    <externalDependency name="dots.NaSequenceImp"/>
    <externalDependency name="dots.Similarity"/>
    <sql>
      <![CDATA[
CREATE TABLE NaSynteny&1 NOLOGGING AS
SELECT
    sim.similarity_id,
    extq.na_sequence_id query_na_sequence_id,
    extt.na_sequence_id target_na_sequence_id,
    extq.source_id query_source_id,
    extt.source_id target_source_id,
    sim.min_subject_start ,
    sim.max_subject_end ,
    sim.min_query_start ,
    sim.max_query_end,
    sim.is_reversed,
    sim.score,
    sim.pvalue_mant,
    sim.pvalue_exp
FROM
    dots.Similarity sim,
    dots.ExternalNaSequence extt,
    dots.ExternalNaSequence extq,
    core.TableInfo qtab,
    core.TableInfo stab
WHERE
    sim.query_id = extq.na_sequence_id and
    sim.subject_id = extt.na_sequence_id and
    sim.subject_table_id = stab.table_id and
    stab.name = 'ExternalNASequence'and
    sim.query_table_id  = qtab.table_id and
    qtab.name = 'ExternalNASequence'
UNION
SELECT
    sim.similarity_id,
    extt.na_sequence_id query_na_sequence_id,
    extq.na_sequence_id target_na_sequence_id,
    extt.source_id query_source_id,
    extq.source_id target_source_id,
    sim.min_query_start min_subject_start,
    sim.max_query_end max_subject_end,
    sim.min_subject_start min_query_start,
    sim.max_subject_end max_query_end,
    sim.is_reversed,
    sim.score,
    sim.pvalue_mant,
    sim.pvalue_exp
FROM
    dots.Similarity sim,
    dots.ExternalNaSequence extt,
    dots.ExternalNaSequence extq,
    core.TableInfo qtab,
    core.TableInfo stab
WHERE
    sim.query_id = extq.na_sequence_id and
    sim.subject_id = extt.na_sequence_id and
    sim.subject_table_id = stab.table_id and
    stab.name = 'ExternalNASequence'and
    sim.query_table_id  = qtab.table_id and
    qtab.name = 'ExternalNASequence'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create bitmap index syn_query_ix&1 ON NaSynteny&1(query_na_sequence_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create bitmap index syn_target_ix&1 ON NaSynteny&1(target_na_sequence_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Subcellular">
    <internalDependency name="GeneId"/>
    <externalDependency name="dots.AaFeatureImp"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <sql>
      <![CDATA[
CREATE TABLE Subcellular&1 NOLOGGING AS
select distinct gi.gene as source_id, targetting_domain
from (
select paf.source_id, 'ht' as targetting_domain
from sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr, dots.PredictedAaFeature paf
where ed.name in ('subcellular motif from Haldar','pfal3D7_cellularLocation_Haldar_RSRC')
  and ed.external_database_id = edr.external_database_id
  and edr.external_database_release_id = paf.external_database_release_id
union
select paf.source_id, 'pexel' as targetting_domain
from sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr, dots.PredictedAaFeature paf
where ed.name in ('subcellular motif from Cowman','pfal3D7_cellularLocation_Cowman_RSRC')
  and ed.external_database_id = edr.external_database_id
  and edr.external_database_release_id = paf.external_database_release_id
union
select paf.source_id, 'apicoplast' as targetting_domain
from sres.ExternalDatabase ed, sres.ExternalDatabaseRelease edr, dots.PredictedAaFeature paf
where ed.name in ('apicoplast targeting data from 4.4','pfal3D7_cellularLocation_ApicoplastTargeting_RSRC')
  and ed.external_database_id = edr.external_database_id
  and edr.external_database_release_id = paf.external_database_release_id
) sc, GeneId gi
where gi.id = sc.source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index subc_ix&1 ON Subcellular&1(source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Expression">
    <externalDependency name="apidb.Profile"/>
    <externalDependency name="apidb.ProfileElement"/>
    <externalDependency name="apidb.ProfileElementName"/>
    <externalDependency name="apidb.ProfileSet"/>
    <sql>
      <![CDATA[
CREATE TABLE Expression&1 NOLOGGING AS
  SELECT pct_p.source_id, pct_pe.value, pct_ps.name AS profile_set_name,
       pct_pe.element_order, pen.name AS element_name
  FROM apidb.ProfileSet pct_ps,
     apidb.Profile pct_p, apidb.ProfileElement pct_pe,apidb.ProfileElementName pen,
     apidb.ProfileSet exp_ps,
     apidb.Profile exp_p, apidb.ProfileElement exp_pe
  WHERE pct_ps.profile_set_id = pct_p.profile_set_id
  AND pct_p.profile_id = pct_pe.profile_id
  AND pct_ps.name like '%Pct'
  AND exp_ps.profile_set_id = exp_p.profile_set_id
  AND exp_p.profile_id = exp_pe.profile_id
  AND exp_pe.element_order = pct_pe.element_order
  AND exp_p.source_id = pct_p.source_id
  AND exp_ps.name = REPLACE(pct_ps.name, 'Pct', 'Exp')
  AND pct_ps.profile_set_id = pen.profile_set_id
  AND exp_pe.element_order = pen.element_order
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Exp_value_ix&1 ON Expression&1 (value, element_order, source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Exp_element_ix&1 ON Expression&1 (element_order, source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SnpSummary">
    <internalDependency name="SnpAttributes"/>
    <externalDependency name="dots.TranslatedAAFeature"/>
    <externalDependency name="dots.GeneFeature"/>
    <externalDependency name="dots.Transcript"/>
    <externalDependency name="dots.SeqVariation"/>
    <sql>
      <![CDATA[
CREATE TABLE SnpSummary&1 NOLOGGING AS
SELECT type,cds_length, na_feature_id, source_id,
       strain_a, strain_b,
       sum(synonymous) as synonymous,
       sum(non_synonymous) as non_synonymous,
       sum(non_coding) as non_coding,
       sum(stop) as stop,
       sum(non_coding) + sum(synonymous) + sum(non_synonymous) as total
FROM  (SELECT greatest(taf.translation_start, taf.translation_stop)
              - least(taf.translation_start, taf.translation_stop) + 1 AS cds_length,
              gf.na_feature_id, gf.source_id,
           --   edr.external_database_release_id,
              SUBSTR(sva.strain, 1, 100) AS strain_a,
              SUBSTR(svb.strain, 1, 100) AS strain_b,
              CASE WHEN sva.product IS NULL THEN 1 ELSE 0 END AS non_coding,
              CASE WHEN sva.product = svb.product THEN 1 ELSE 0 END AS synonymous,
              CASE WHEN sva.product != svb.product THEN 1 ELSE 0 END AS non_synonymous,
              CASE WHEN sva.product = '*' OR  svb.product = '*' THEN 1 ELSE 0 END AS stop,
              sa.type
       FROM dots.SeqVariation sva, dots.SeqVariation svb, SnpAttributes sa,
            dots.Transcript, dots.GeneFeature gf, dots.TranslatedAaFeature taf
       WHERE sa.dataset not in ('pfal3D7_SNP_Broad_gff_RSRC','Broad SNPs','Sanger falciparum SNPs', 'pfal3D7_SNP_sanger_ItGhana_gff_RSRC', 'Winzeler Array - Plasmodium Genetic Variation','pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC','X.Su SNPs','Pf_XSuSnps_RSRC','Sanger reichenowi SNPs','pfal3D7_SNP_sanger_PReichenowi_gff_RSRC')
         AND sva.parent_id = sa.na_feature_id
         AND sva.parent_id = svb.parent_id
         AND sva.strain  < svb.strain
         AND sva.allele != svb.allele
         AND (sa.project_id in ('ToxoDB','PlasmoDB','CryptoDB')
              OR (NVL(sva.allele_percent,100) >= 40
                  AND NVL(svb.allele_percent,100) >= 40))
         AND (sa.project_id in ('TriTrypDB','AmoebaDB')
              OR (NVL(sva.allele_percent,100) >= 80
                  AND NVL(svb.allele_percent,100) >= 80))
         AND gf.source_id = sa.gene_source_id
         AND gf.na_feature_id = transcript.parent_id
         AND transcript.na_feature_id = taf.na_feature_id
)
GROUP BY cds_length, na_feature_id, source_id,
         strain_a, strain_b,type
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SnpSummary_idx&1
       ON SnpSummary&1(na_feature_id, source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SnpSummary_strain_idx&1
       ON SnpSummary&1(strain_a, strain_b, source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SnpSummary_strainb_idx&1
       ON SnpSummary&1(strain_b, strain_a, source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX SnpSummary_srcId_idx&1
       ON SnpSummary&1(source_id, na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="DistinctLowerProduct">
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE DistinctLowerProduct&1 NOLOGGING AS
select rownum as dlp_id, dlp
from (select distinct lower(product) as dlp
      from GeneAttributes)
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="GeneProduct">
    <internalDependency name="DistinctLowerProduct"/>
    <sql>
      <![CDATA[
CREATE TABLE GeneProduct&1 NOLOGGING AS
select dlp_id, na_feature_id
from DistinctLowerProduct, dots.GeneFeature
where lower(product) = dlp
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX geneProduct_ix&1 ON GeneProduct&1(dlp_id, na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SimilaritySpanLocation">
    <externalDependency name="dots.Similarity"/>
    <externalDependency name="dots.SimilaritySpan"/>
    <externalDependency name="core.TableInfo"/>
    <externalDependency name="dots.NaSequence"/>
    <internalDependency name="SequencePieceClosure"/>
    <sql>
      <![CDATA[
create table SimilaritySpanLocation&1 NOLOGGING as
select sim.similarity_id, sim.query_id, sim.subject_id, sim.query_table_id,
       sim.subject_table_id, sim.score as similarity_score, sim.min_query_start,
       sim.max_query_end, sim.is_reversed as similarity_is_reversed,
       sim.pvalue_mant, sim.pvalue_exp,
       round(100 * sim.number_identical / sim.total_match_length,1) as percent_identical,
       round(100 * sim.number_positive / sim.total_match_length,1) as percent_positive,
       sim.min_subject_start, sim.max_subject_end, sim.total_match_length,
       simp.similarity_span_id, simp.score as span_score, simp.query_start, simp.query_end,
       simp.subject_start, simp.subject_end,
       simp.is_reversed as span_is_reversed,
       'direct' as location_mapping
from dots.similarity sim, dots.similarityspan simp, core.TableInfo ti
where sim.similarity_id = simp.similarity_id
  and sim.query_table_id = ti.table_id
  and ti.name = 'ExternalNASequence'
union
select sim.similarity_id, scaffold.na_sequence_id as query_id, sim.subject_id,
       sim.query_table_id,
       sim.subject_table_id, sim.score as similarity_score,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - greatest(sim.min_query_start, sim.max_query_end) + 1
           else sp.distance_from_left + least(sim.min_query_start, sim.max_query_end) - sp.start_position + 1
       end as min_query_start,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - least(sim.min_query_start, sim.max_query_end) + 1
           else sp.distance_from_left + greatest(sim.min_query_start, sim.max_query_end) - sp.start_position + 1
       end as max_query_end,
       sim.is_reversed, sim.pvalue_mant, sim.pvalue_exp,
       round(100 * sim.number_identical / sim.total_match_length,1) as percent_identical,
       round(100 * sim.number_positive / sim.total_match_length,1) as percent_positive,
       sim.min_subject_start, sim.max_subject_end, sim.total_match_length, 
       simp.similarity_span_id, simp.score as span_score,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - greatest(simp.query_start, simp.query_end) + 1
           else sp.distance_from_left + least(simp.query_start, simp.query_end) - sp.start_position + 1
       end as query_start,
       case
         when sp.strand_orientation in ('-', '-1')
           then sp.distance_from_left + sp.end_position - least(simp.query_start, simp.query_end) + 1
           else sp.distance_from_left + greatest(simp.query_start, simp.query_end) - sp.start_position + 1
       end as query_end,
       simp.subject_start, simp.subject_end,
       simp.is_reversed as span_is_reversed,
       'virtual' as location_mapping
from dots.similarity sim, dots.similarityspan simp, core.TableInfo ti,
     dots.NaSequence contig, &prefixSequencePieceClosure sp, dots.NaSequence scaffold
where sim.similarity_id = simp.similarity_id
  and sim.query_table_id = ti.table_id
  and ti.name = 'ExternalNASequence'
  and sim.query_id = sp.piece_na_sequence_id
  and sp.start_position <= sim.min_query_start
  and sp.end_position >= sim.max_query_end
  and sim.query_id = contig.na_sequence_id
  and sp.virtual_na_sequence_id = scaffold.na_sequence_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
update SimilaritySpanLocation&1
set pvalue_exp = (select min(pvalue_exp) from SimilaritySpanLocation&1)
where pvalue_mant = 0
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index spanloc_query_ix&1
        on SimilaritySpanLocation&1 (query_id, min_query_start, max_query_end, query_table_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="IsolateSNPs">
    <externalDependency name="dots.NaFeatureImp"/>
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="IsolateAttributes"/>
    <internalDependency name="SnpAttributes"/>
    <sql>
      <![CDATA[
create table IsolateSNPs&1 NOLOGGING as
select atr.na_sequence_id as is_na_sequence_id,
       atr.source_id as is_source_id,
       isof.allele,
       sa.source_id as snp_source_id,
       sa.dataset as snp_db_name,
       sa.na_sequence_id as snp_na_sequence_id,
       sa.start_min as snp_start_min
from dots.ISOLATEFEATURE isof,  FeatureLocation isol, 
     SnpAttributes sa, IsolateAttributes atr
where atr.na_feature_id = isof.parent_id
and isof.na_feature_id = isol.na_feature_id
and sa.na_sequence_id = isol.na_sequence_id
and sa.start_min = isol.start_min
and sa.dataset in ('pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC','PlasmoDB combined SNPs','Broad SNPs','pfal3D7_SNP_Broad_gff_RSRC')
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index IsolateSNPs_is_sid_idx&1 on IsolateSNPs&1 (is_source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index IsolateSNPs_snp_db_id_idx&1 on IsolateSNPs&1 (snp_db_name,snp_source_id,allele)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index IsolateSNPs_snp_id_idx&1 on IsolateSNPs&1 (snp_source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index isnps_snp_sq_strt_idx&1 on IsolateSNPs&1 (snp_na_sequence_id,snp_start_min)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SnpsWithIsolates">
    <internalDependency name="IsolateAttributes"/>
    <internalDependency name="IsolateSNPs"/>
    <sql>
      <![CDATA[
create table SnpsWithIsolates&1 NOLOGGING as
select iso_ext_db_name,snp_source_id, 
 apidb.tab_to_string(set(cast(COLLECT(CASE WHEN frequency < 0.5 THEN allele END order by allele) as apidb.varchartab)), ', ') as minor_allele,
 apidb.tab_to_string(set(cast(COLLECT(CASE WHEN frequency > 0.5 THEN allele END order by allele) as apidb.varchartab)), ', ') as major_allele,
 to_char(min(frequency), '0.99') as minor_allele_frequency,
 min(number_isolates) as number_isolates
from (
 select s.snp_source_id as snp_source_id, s.external_db_name as iso_ext_db_name, s.allele, s.ct/t.tot as frequency, s.ct as allele_count, t.tot as number_isolates
                 from (
                       select ia.external_db_name, isos.snp_source_id,isos.allele,count(*) as ct
                       from IsolateSNPs isos,IsolateAttributes ia
                       where  isos.allele in ('A','C','G','T')
                       and isos.is_source_id = ia.source_id
                       group by ia.external_db_name, isos.snp_source_id,isos.allele
                       ) s,
                       (
                       select ia.external_db_name, isos.snp_source_id, count(*) as tot
                       from IsolateSNPs isos,IsolateAttributes ia
                       where  isos.allele in ('A','C','G','T')
                       and isos.is_source_id = ia.source_id
                       group by ia.external_db_name, isos.snp_source_id
                       ) t
                       where s.snp_source_id = t.snp_source_id
                       and s.external_db_name = t.external_db_name
                       )
                 group by iso_ext_db_name,snp_source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index snpswiso_id_db_idx&1 on SnpsWithIsolates&1 (snp_source_id,iso_ext_db_name)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
update SnpsWithIsolates&1 swa
set swa.major_allele = (select max(allele) from IsolateAttributes ia, IsolateSNPs isnp 
                    where isnp.snp_source_id = swa.snp_source_id and ia.EXTERNAL_DB_NAME = swa.iso_ext_db_name
                    group by isnp.snp_source_id,ia.EXTERNAL_DB_NAME),
swa.minor_allele = (select min(allele) from IsolateAttributes ia, IsolateSNPs isnp 
                    where isnp.snp_source_id = swa.snp_source_id and ia.EXTERNAL_DB_NAME = swa.iso_ext_db_name
                    group by isnp.snp_source_id,ia.EXTERNAL_DB_NAME)
where swa.major_allele is null
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Blastp">
    <externalDependency name="dots.Similarity"/>
    <externalDependency name="dots.ExternalAaSequence"/>
    <externalDependency name="dots.GeneFeature"/>
    <externalDependency name="dots.Transcript"/>
    <externalDependency name="dots.TranslatedAaFeature"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="core.TableInfo"/>
    <internalDependency name="GeneAttributes"/>
    <internalDependency name="TaxonSpecies"/>
    <sql>
      <![CDATA[
create table Blastp&1 as
select rownum as blastp_id, gf.source_id, ga.project_id, sim.similarity_id,
       subject.source_id as subject_source_id, sim.score score, sim.query_id, 
       sim.min_query_start, sim.max_query_end, sim.pvalue_mant, sim.pvalue_exp,
       sim.number_identical, sim.total_match_length,
       substr(replace(subject.description, chr(1), ''), 1, 300) as description,
       sim.number_positive, ed.name as external_database_name,
       substr(tn.name, 1, 50) AS query_organism, ns.taxon_id as query_taxon_id
from dots.Similarity sim, core.TableInfo qti, core.TableInfo sti, dots.ExternalAaSequence subject,
     dots.GeneFeature gf, dots.Transcript t, dots.TranslatedAaFeature taf,
     sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed,
     dots.NaSequence ns, -- TaxonSpecies st,
     sres.TaxonName tn, GeneAttributes ga
where qti.table_id = sim.query_table_id
  and qti.name = 'TranslatedAASequence'
  and sti.table_id = sim.subject_table_id
  and sti.name = 'ExternalAASequence'
  and subject.aa_sequence_id = sim.subject_id
  and ga.source_id = gf.source_id
  and gf.na_feature_id = t.parent_id
  and t.na_feature_id = taf.na_feature_id
  and taf.aa_sequence_id = sim.query_id
  and subject.external_database_release_id = edr.external_database_release_id
  and edr.external_database_id = ed.external_database_id
  and gf.na_sequence_id = ns.na_sequence_id
  and ns.taxon_id =
--    st.taxon_id and st.species_taxon_id = # TaxonSpecies mapping commented out
                     tn.taxon_id
  and tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
update Blastp&1
set pvalue_exp = (select min(pvalue_exp) from Blastp&1)
where pvalue_mant = 0
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Blastp_src_ix&1 on Blastp&1 (source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Blastp_query_ix&1 on Blastp&1 (query_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
drop index Blastp_text_ix
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index Blastp_text_ix on Blastp&1(description) indextype is ctxsys.context
             parameters('DATASTORE CTXSYS.DEFAULT_DATASTORE')
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="GeneIsolateOverlap">
    <internalDependency name="IsolateAttributes"/>
    <internalDependency name="FeatureLocation"/>
    <externalDependency name="dots.Similarity"/>
    <sql>
      <![CDATA[
create table GeneIsolateOverlap&1 as
select substr(ia.source_id, 1, 30) as isolate_source_id,
       fl.feature_source_id as gene_source_id,
       min(pvalue_exp) as min_pvalue_exp
from IsolateAttributes ia, dots.Similarity sim, FeatureLocation fl
where fl.feature_type = 'GeneFeature'
  and fl.na_sequence_id = sim.subject_id
  and fl.start_min < sim.max_subject_end
  and fl.end_max > sim.min_subject_start
  and sim.query_id = ia.na_sequence_id
group by ia.source_id, fl.feature_source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index gi_i_ix&1 on GeneIsolateOverlap&1 (isolate_source_id)
tablespace indx
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index gi_g_ix&1 on GeneIsolateOverlap&1 (gene_source_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="TableWeight">
    <sql>
      <![CDATA[
create table TableWeight&1 as
-- genes
  select cast ('GoTerms' as varchar2(80)) as table_name, 1 as weight from dual
union
  select cast ('Product' as varchar2(80)) as table_name, 5 as weight from dual
union
  select cast ('Notes' as varchar2(80)) as table_name, 2 as weight from dual
union
  select cast ('Comments' as varchar2(80)) as table_name, 2 as weight from dual
union
  select cast ('InterPro' as varchar2(80)) as table_name, 1 as weight from dual
union
  select cast ('BlastP' as varchar2(80)) as table_name, 1 as weight from dual
union
  select cast ('EcNumber' as varchar2(80)) as table_name, 1 as weight from dual
-- isolates
union
  select cast ('Reference' as varchar2(80)) as table_name, 1 as weight from dual
union
  select cast ('ProteinSequence' as varchar2(80)) as table_name, 1 as weight from dual
union
  select cast ('GeneOverlap' as varchar2(80)) as table_name, 1 as weight from dual
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create unique index weight_ix&1 on TableWeight&1(table_name)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="TaxonSpecies" prefixEnabled="true">
    <internalDependency name="SequenceAttributes"/>
    <externalDependency name="sres.Taxon"/>
    <sql>
      <![CDATA[
create table &prefixTaxonSpecies&1 as    
select t.taxon_id, species.taxon_id as species_taxon_id
from sres.Taxon species, (select distinct sa.taxon_id
      from &prefixSequenceAttributes sa) t
where species.taxon_id in (select taxon_id from sres.taxon
                           connect by taxon_id = prior parent_id and prior rank != 'species'
                           start with taxon_id = t.taxon_id)
  and species.rank = 'species'
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Blastx">
    <externalDependency name="dots.ExternalAaSequence"/>
    <externalDependency name="dots.NaSequence"/>
    <internalDependency name="SimilaritySpanLocation"/>
    <sql>
      <![CDATA[
create table Blastx&1
      (similarity_id, name, score, pvalue, na_sequence_id, startm, end, strand, atts,
       constraint blastx&1_pk primary key(na_sequence_id, startm, pvalue, end, similarity_id))
organization index
nologging
as
select distinct sim.similarity_id,
       extt.source_id name, 
       substr(sim.similarity_score || '', 1, 6) score, 
       to_number(sim.pvalue_mant || 'e' || sim.pvalue_exp) pvalue,
       extq.na_sequence_id,
       sim.min_query_start startm, 
       sim.max_query_end end, 
       decode (sim.similarity_is_reversed, 0, '+1', 1, '-1', '.') strand, 
       substr('Score=' || sim.similarity_score || ';;' || 
              'Expect=' || (sim.pvalue_mant || 'e' ||sim.pvalue_exp)||';;'|| 
              'Defline=' || extt.description || ';;' || 
              'PercentIdentity=' || sim.percent_identical || ';;' ||
              'PercentPositive=' || sim.percent_positive || ';;' ||
              'TStart=' || sim.min_query_start || ';;' || 
              'TStop=' || sim.max_query_end, 1, 400) atts 
from SimilaritySpanLocation sim, dots.ExternalAaSequence extt, 
     dots.NaSequence extq
where sim.query_id = extq.na_sequence_id
  and sim.subject_id = extt.aa_sequence_id
  and (sim.max_query_end - sim.min_query_start) < 5000
  and sim.pvalue_exp < -10
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="TranscriptSequence">
    <externalDependency name="dots.Transcript"/>
    <externalDependency name="dots.SplicedNaSequence"/>
    <externalDependency name="sres.TaxonName"/>
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
create table TranscriptSequence&1 nologging as
select gf.source_id, cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       sns.sequence
from GeneAttributes gf, dots.Transcript t, dots.SplicedNaSequence sns, sres.TaxonName tn
where t.parent_id = gf.na_feature_id
  and sns.na_sequence_id = t.na_sequence_id
  and sns.taxon_id = tn.taxon_id
  and tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index XScriptSeq_ix&1 on TranscriptSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="CodingSequence">
    <externalDependency name="dots.Transcript"/>
    <externalDependency name="dots.SplicedNaSequence"/>
    <externalDependency name="dots.TranslatedAaFeature"/>
    <externalDependency name="sres.TaxonName"/>
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE CodingSequence&1 NOLOGGING AS
SELECT gf.source_id, cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       SUBSTR(sns.sequence, tf.translation_start,                            
              tf.translation_stop - tf.translation_start + 1) as sequence
FROM GeneAttributes gf, dots.Transcript t, dots.SplicedNaSequence sns,
     dots.TranslatedAaFeature tf, sres.TaxonName tn
WHERE t.parent_id = gf.na_feature_id
  AND sns.na_sequence_id = t.na_sequence_id
  AND t.na_feature_id = tf.na_feature_id
  AND sns.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index CodSeq_ix&1 on CodingSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="ProteinSequence">
    <externalDependency name="dots.Transcript"/>
    <externalDependency name="dots.TranslatedAaSequence"/>
    <externalDependency name="dots.TranslatedAaFeature"/>
    <externalDependency name="sres.TaxonName"/>
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE ProteinSequence&1 NOLOGGING AS
SELECT ga.source_id, cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       tas.sequence
FROM GeneAttributes ga, dots.Transcript t, dots.TranslatedAaFeature taf,
     dots.TranslatedAaSequence tas, sres.TaxonName tn
WHERE t.parent_id = ga.na_feature_id
  AND t.na_feature_id = taf.na_feature_id
  AND taf.aa_sequence_id = tas.aa_sequence_id
  AND tas.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index ProtSeq_ix&1 on ProteinSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="NaSequence">
    <externalDependency name="dots.NaSequence"/>
    <externalDependency name="sres.TaxonName"/>
    <internalDependency name="SequenceAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE NaSequence&1 NOLOGGING AS
SELECT sa.source_id, cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       ns.sequence
FROM SequenceAttributes sa, dots.NaSequence ns, sres.TaxonName tn
WHERE sa.na_sequence_id = ns.na_sequence_id
  AND ns.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index GenomicSeq_ix&1 on NaSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="OrfSequence">
    <externalDependency name="dots.TranslatedAaSequence"/>
    <externalDependency name="dots.TranslatedAaFeature"/>
    <externalDependency name="dots.NaFeature"/>
    <externalDependency name="sres.SequenceOntology"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE OrfSequence&1 NOLOGGING AS
SELECT nf.source_id,
       cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       ts.sequence
FROM dots.TranslatedAaSequence ts, dots.TranslatedAaFeature tf,
      dots.NaFeature nf, sres.SequenceOntology so, sres.TaxonName tn
 WHERE nf.na_feature_id = tf.na_feature_id
   AND ts.aa_sequence_id = tf.aa_sequence_id
   AND so.term_name = 'ORF'
   AND nf.sequence_ontology_id = so.sequence_ontology_id
   AND ts.taxon_id = tn.taxon_id
   AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index OrfSeq_ix&1 on OrfSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="EstSequence">
    <externalDependency name="dots.ExternalNaSequence"/>
    <externalDependency name="sres.SequenceOntology"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE EstSequence&1 NOLOGGING AS
SELECT ens.source_id,
       cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       ens.sequence
FROM dots.ExternalNaSequence ens, sres.SequenceOntology so, sres.TaxonName tn
WHERE so.term_name = 'EST'
  AND so.sequence_ontology_id = ens.sequence_ontology_id
  AND ens.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index EstSeq_ix&1 on EstSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="AssemblySequence">
    <externalDependency name="dots.Assembly"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE AssemblySequence&1 NOLOGGING AS
SELECT a.source_id,
       cast(apidb.project_id(tn.name) as varchar2(20)) as project_id,
       a.sequence 
FROM dots.Assembly a, sres.TaxonName tn
WHERE a.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index AssemblySeq_ix&1 on AssemblySequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Intron">
    <internalDependency name="FeatureLocation"/>
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
CREATE TABLE Intron&1 NOLOGGING AS
  (SELECT exon_loc.na_feature_id,
          exon_loc.parent_id,
          exon_loc.na_sequence_id,
          exon_loc.start_min as start_min,
          CASE WHEN exon_loc.is_reversed = 0 THEN exon_loc.coding_start - 1 
               ELSE exon_loc.coding_end - 1 
               END end_max,
          exon_loc.is_reversed,
          ga.is_deprecated
   FROM   FeatureLocation exon_loc, GeneAttributes ga
   WHERE  exon_loc.feature_type = 'ExonFeature'
      AND ga.na_feature_id = exon_loc.parent_id
      AND ((exon_loc.is_reversed = 0 AND exon_loc.coding_start - exon_loc.start_min  != 0)
       OR (exon_loc.is_reversed = 1 AND exon_loc.coding_end - exon_loc.start_min  != 0)))
  UNION
  (SELECT exon_loc.na_feature_id, 
          exon_loc.parent_id,
          exon_loc.na_sequence_id,
          CASE WHEN exon_loc.is_reversed = 0 THEN exon_loc.coding_end + 1 ELSE exon_loc.coding_start + 1 END start_min,
          exon_loc.end_max,
          exon_loc.is_reversed, 
          ga.is_deprecated 
   FROM   FeatureLocation exon_loc, GeneAttributes ga
   WHERE  exon_loc.feature_type = 'ExonFeature'
      AND ga.na_feature_id = exon_loc.parent_id
      AND ((exon_loc.is_reversed = 0 AND exon_loc.end_max - exon_loc.coding_end  != 0)
       OR (exon_loc.is_reversed = 1 AND exon_loc.end_max - exon_loc.coding_start  != 0))  )
   UNION
   (SELECT exon_loc.na_feature_id,
           exon_loc.parent_id,
           exon_loc.na_sequence_id,
           exon_loc.start_min,
           exon_loc.end_max,
           exon_loc.is_reversed, 
           ga.is_deprecated 
    FROM   FeatureLocation exon_loc, GeneAttributes ga
    WHERE  exon_loc.feature_type = 'ExonFeature'
       AND ga.na_feature_id = exon_loc.parent_id
       AND exon_loc.coding_start is null)
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index IntronSeq_ix&1 on Intron&1 (na_feature_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="IsolateSequence">
    <internalDependency name="IsolateAttributes"/>
    <externalDependency name="dots.NaSequence"/>
    <externalDependency name="sres.TaxonName"/>
    <sql>
      <![CDATA[
CREATE TABLE IsolateSequence&1 NOLOGGING AS
SELECT ia.source_id,
       ia.project_id,
       ns.sequence
FROM IsolateAttributes ia, dots.NaSequence ns, sres.TaxonName tn
WHERE ia.na_sequence_id = ns.na_sequence_id
  AND ns.taxon_id = tn.taxon_id
  AND tn.name_class = 'scientific name'
      ]]>
    </sql>
    <sql>
      <![CDATA[
create index IsolateSeq_ix&1 on IsolateSequence&1 (source_id, project_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="TypeAheadCounts">
    <internalDependency name="GeneAttributes"/>
    <externalDependency name="dots.DbRefAaFeature"/>
    <externalDependency name="sres.DbRef"/>
    <externalDependency name="dots.AaFeature"/>
    <externalDependency name="dots.TranslatedAaFeature"/>
    <externalDependency name="dots.Transcript"/>
    <externalDependency name="sres.ExternalDatabase"/>
    <externalDependency name="sres.ExternalDatabaseRelease"/>
    <externalDependency name="sres.EnzymeClass"/>
    <externalDependency name="dots.AaSequenceEnzymeClass"/>
    <externalDependency name="dots.GoAssociation"/>
    <externalDependency name="sres.GoTerm"/>
    <externalDependency name="sres.GoRelationship"/>
    <externalDependency name="sres.GoRelationshipType"/>
    <externalDependency name="core.TableInfo"/>
    <sql>
      <![CDATA[
CREATE TABLE TypeAheadCounts&1 NOLOGGING AS
   (SELECT DISTINCT dr.primary_identifier as option_id,
                   count(distinct aaf.aa_sequence_id) AS gene_count,
                   gf.project_id
   FROM dots.DbRefAaFeature draf, sres.DbRef dr, dots.aafeature aaf,
        sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed,
        dots.TranslatedAAFeature taf,GeneAttributes gf, dots.transcript t
   WHERE draf.db_ref_id = dr.db_ref_id
   AND dr.external_database_release_id
       = edr.external_database_release_id
   AND edr.external_database_id = ed.external_database_id
   AND aaf.aa_feature_id = draf.aa_feature_id
   AND aaf.aa_sequence_id = taf.aa_sequence_id
   AND taf.na_feature_id = t.na_feature_id
   AND gf.na_feature_id = t.parent_id
   GROUP BY gf.project_id,
            dr.primary_identifier)
   UNION
   (SELECT DISTINCT ec.ec_number AS option_id,
          COUNT(DISTINCT aaf.aa_sequence_id) AS gene_count,
          gf.project_id
   FROM sres.enzymeClass ec, GeneAttributes gf,
        dots.aaSequenceEnzymeClass asec,
        dots.translatedAaFeature taf,
        dots.aafeature aaf, dots.transcript t
   WHERE gf.na_feature_id = t.parent_id
   AND t.na_feature_id = taf.na_feature_id
   AND taf.aa_sequence_id = asec.aa_sequence_id
   AND aaf.aa_sequence_id = taf.aa_sequence_id
   AND asec.enzyme_class_id = ec.enzyme_class_id
   GROUP BY gf.project_id,
            ec.ec_number)
   UNION                
   (SELECT DISTINCT gp.go_id AS option_id,
           COUNT(DISTINCT aaf.aa_sequence_id) AS gene_count,
           gf.project_id
    FROM GeneAttributes gf, dots.Transcript t,
         dots.TranslatedAaFeature taf, dots.AaFeature aaf,
         dots.GoAssociation ga, sres.GoTerm gp,
         sres.GoRelationship gr, core.TableInfo ti,
         sres.GoRelationshipType grt
    WHERE gf.na_feature_id = t.parent_id
    AND t.na_feature_id = taf.na_feature_id
    AND taf.aa_sequence_id = ga.row_id
    AND aaf.aa_sequence_id = taf.aa_sequence_id
    AND ga.table_id = ti.table_id
    AND ti.name = 'TranslatedAASequence'
    AND ga.go_term_id = gr.child_term_id
    AND gr.parent_term_id = gp.go_term_id
    AND gr.go_relationship_type_id = grt.go_relationship_type_id
    AND grt.name = 'closure'
    GROUP BY gf.project_id,
             gp.go_id)
      ]]>
    </sql>
    <sql>
      <![CDATA[
CREATE INDEX TypeAheadCounts_idx&1 ON TypeAheadCounts&1 (option_id)
tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="ExpressionElement">
    <internalDependency name="FeatureLocation"/>
    <externalDependency name="rad.DataTransformationResult"/>
    <sql>
      <![CDATA[
      create table ExpressionElement&1 nologging as
      select fl.na_feature_id, fl.na_sequence_id, fl.start_min, fl.end_max,
             fl.feature_source_id, dtr.analysis_id, dtr.float_value as score
      from rad.DataTransformationResult dtr, FeatureLocation fl
      where dtr.row_id = fl.na_feature_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
      create index ee_track_ix&1
      on ExpressionElement&1 (na_sequence_id, analysis_id, start_min, end_max, na_feature_id, score)
      tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="OrthologousPair">
    <!-- each record contains a pair of genes that are orthologous to each other -->
    <internalDependency name="GeneAttributes"/>
    <sql>
      <![CDATA[
       create table OrthologousPair&1 nologging as
       select /*+ ordered_predicates */
              ga2.source_id AS ortho_source_id, ga2.na_sequence_id as ortho_na_sequence_id, ga2.start_min as ortho_start_min,
              case when ga1.project_id = 'GiardiaDB' then ga2.species
              else ga2.organism end as organism, 
              ga2.product, ga1.source_id, ga1.project_id, ga1.na_sequence_id, ga1.start_min,
              nvl(comments.comment_count, 'no') as comment_count
             from GeneAttributes ga1, GeneAttributes ga2,
                  (select distinct 'yes' as comment_count, stable_id as source_id, project_name
                   from comments2.comments@apidb.login_comment
                   where comment_target_id = 'gene'
                     and review_status_id != 'rejected'
                     and is_visible = 1) comments
             where ga2.source_id = comments.source_id(+)
               and ga2.project_id = ga1.project_id
               and ga1.orthomcl_name = ga2.orthomcl_name
               and ga2.source_id != ga1.source_id
      ]]>
    </sql>
    <sql>
      <![CDATA[
      create index orth_ix&1
      on OrthologousPair&1 (source_id, project_id)
      tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="OrthologGeneTable">
    <!-- each record contains a record from OrthologousPair, augmented by the IS_SYNTENIC column -->
    <internalDependency name="OrthologousPair"/>
    <externalDependency name="apidb.Synteny"/>
    <sql>
      <![CDATA[
      create table OrthologGeneTable&1 nologging as
      select
       op.ortho_source_id,
       op.organism,
       op.product, op.source_id,
       nvl(synteny.is_syntenic, 'no') as is_syntenic,
       op.comment_count,
       op.project_id
      from OrthologousPair op,
       (select distinct
               'yes' as is_syntenic,
               a_na_sequence_id, b_na_sequence_id, a_start, a_end, b_start, b_end
        from apidb.synteny s) synteny
        where synteny.a_na_sequence_id(+) = op.na_sequence_id
          AND synteny.b_na_sequence_id(+) = op.ortho_na_sequence_id
          AND synteny.a_start(+) <= op.start_min
          AND synteny.a_end(+) >= op.start_min
          AND synteny.b_start(+) <= op.ortho_start_min
          AND synteny.b_end(+) >= op.ortho_start_min
      ]]>
    </sql>
    <sql>
      <![CDATA[
      create index ogt_ix&1
      on OrthologGeneTable&1 (source_id, project_id)
      tablespace indx
      ]]>
    </sql>
  </tuningTable>


  <tuningTable name="NextGenSeqStats">
    <externalDependency name="apidb.NextGenSeqCoverage"/>
    <sql>
      <![CDATA[
      create table NextGenSeqStats&1 nologging as
      select name as ext_db_name, sample, sum_coverage / sum_span_length as average_coverage, sum_coverage, sum_span_length / num_spans as average_span_length, sum_span_length
      from (select d.name, c.sample, count(*) as num_spans,
                   sum(c.coverage * (c.mapping_end - c.mapping_start)) as sum_coverage,
                   sum(c.mapping_end - c.mapping_start) as sum_span_length
            from apidb.NextGenSeqCoverage c,sres.externaldatabaserelease r, sres.externaldatabase d
            where c.multiple = 0
             and c.external_database_release_id = r.external_database_release_id
             and d.external_database_id = r.external_database_id
            group by d.name, c.sample)
      ]]>
    </sql>
    <sql>
      <![CDATA[
      create index ngss_sple_idx&1
      on NextGenSeqStats&1 (sample)
      tablespace indx
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="SnpCombined">
    <externalDependency name="dots.SeqVariation"/>
    <internalDependency name="SnpAttributes"/>
    <sql>
      <![CDATA[
       create table SnpCombined&1
              (na_sequence_id, dataset, start_min, strain, na_feature_id, allele, phenotype, product,
               constraint SeqVar&1_pk primary key (na_sequence_id, dataset, start_min, strain, na_feature_id, allele, phenotype, product))
       nologging
       as
       select sa.na_sequence_id, sa.dataset, sa.start_min,
              substr(var.strain, 1, 100) as strain, sa.na_feature_id,
              substr(var.allele, 1, 40) as allele,
              substr(var.phenotype, 1, 20) as phenotype, nvl(substr(var.product, 1, 20), ' ') as product
       FROM SnpAttributes sa,
            dots.SeqVariation var
       WHERE var.parent_id = sa.na_feature_id
         and sa.dataset = 'pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC'
      ]]>
    </sql>
  </tuningTable>

  <!-- This table will eventually be replaced by workflow -->
  <tuningTable name="OrganismAbbreviation">
    <externalDependency name="sres.taxonname"/>
    <externalDependency name="apidb.organism"/>
    <sql>
      <![CDATA[
       CREATE TABLE OrganismAbbreviation&1 NOLOGGING AS
       select organism, abbreviation
       From (
  -- ToxoDB Annotated Genomes
  select 'Neospora caninum' as organism, 'NeosporaCaninum' as abbreviation from dual union  
  select 'Toxoplasma gondii GT1' as organism, 'TgondiiGT1' as abbreviation from dual union  
  select 'Toxoplasma gondii ME49' as organism, 'TgondiiME49' as abbreviation from dual union  
  select 'Toxoplasma gondii VEG' as organism, 'TgondiiVEG' as abbreviation from dual union  
  select 'Eimeria tenella str. Houghton' as organism, 'EtenellaHoughton' as abbreviation from dual union  
  -- ToxoDB Un-Annotated Genomes
  select 'Toxoplasma gondii RH' as organism, 'TgondiiRH' as abbreviation from dual union  
  select 'Toxoplasma gondii MAS' as organism, 'TgondiiMAS' as abbreviation from dual union  
  select 'Toxoplasma gondii TgCkUg2' as organism, 'TgondiiTgCkUg2' as abbreviation from dual union  
  select 'Toxoplasma gondii VAND' as organism, 'TgondiiVAND' as abbreviation from dual union  
  select 'Toxoplasma gondii p89' as organism, 'Tgondiip89' as abbreviation from dual union  
  select 'Toxoplasma gondii FOU' as organism, 'TgondiiFOU' as abbreviation from dual union  
  select 'Toxoplasma gondii RUB' as organism, 'TgondiiRUB' as abbreviation from dual union  
  select 'Gregarina niphandrodes' as organism, 'Gniphandrodes' as abbreviation from dual union  
  select 'Toxoplasma gondii TgCATBr9' as organism, 'TgondiiTgCATBr9' as abbreviation from dual union 
  -- GiardiaDB Annotated Genomes
  select 'Giardia Assemblage A isolate WB' as organism, 'GintestinalisAssemblageA' as abbreviation from dual union  
  select 'Giardia Assemblage B isolate GS' as organism, 'GintestinalisAssemblageB' as abbreviation from dual union  
  select 'Giardia Assemblage E isolate P15' as organism, 'GintestinalisAssemblageE' as abbreviation from dual union  
  -- TrichDB Annotated Genomes
  select 'Trichomonas vaginalis G3' as organism, 'Tvaginalis' as abbreviation from dual union  
  -- AmoebaDB Un-Annotated Genomes
  select 'Entamoeba histolytica DS4' as organism, 'EhistolyticaDS4' as abbreviation from dual union  
  select 'Entamoeba histolytica HM-1:CA' as organism, 'EhistolyticaHM1_CA' as abbreviation from dual union  
  select 'Entamoeba histolytica KU27' as organism, 'EhistolyticaKU27' as abbreviation from dual union  
  select 'Entamoeba histolytica KU48' as organism, 'EhistolyticaKU48' as abbreviation from dual union  
  select 'Entamoeba histolytica KU50' as organism, 'EhistolyticaKU50' as abbreviation from dual union  
  select 'Entamoeba histolytica MS96' as organism, 'EhistolyticaMS96' as abbreviation from dual union  
  select 'Entamoeba moshkovskii' as organism, 'Emoshkovskii' as abbreviation from dual union  
  select 'Entamoeba histolytica Rahman' as organism, 'EhistolyticaRahman' as abbreviation from dual union  
  -- AmoebaDB Annotated Genomes
  select 'Entamoeba invadens IP1' as organism, 'Einvadens' as abbreviation from dual union  
  select 'Entamoeba histolytica HM-1:IMSS' as organism, 'Ehistolytica' as abbreviation from dual union  
  select 'Entamoeba dispar SAW760' as organism, 'Edispar' as abbreviation from dual union  
     -- TriTrypDD UN-Annotated Genomes
  select 'Endotrypanum monterogeii strain LV88' as organism, 'EmonteLV88' as abbreviation from dual union
  select 'Leishmania major strain LV39c5' as organism, 'LmajorLV39c5' as abbreviation from dual union
  select 'Leishmania panamensis strain L13' as organism, 'LpanamL13' as abbreviation from dual union
  select 'Crithidia fasciculata' as organism, 'Cfasciculata' as abbreviation from dual union
  select 'Leishmania braziliensis M2903' as organism, 'LbraziliensisM2903' as abbreviation from dual union
  select 'Leishmania major strain SD 75.1' as organism, 'LmajorSD75.1' as abbreviation from dual union
  select 'Leishmania tarentolae Parrot-TarII' as organism, 'LtarParrotTarII' as abbreviation from dual union
  select 'Trypanosoma cruzi JR cl. 4' as organism, 'TcruziJRcl4' as abbreviation from dual union
  select 'Trypanosoma cruzi Sylvio X10/1' as organism, 'TcruziSylvioX10-1' as abbreviation from dual union
  select 'Trypanosoma cruzi strain esmeraldo' as organism, 'TcruziEsmeraldo' as abbreviation from dual union
   -- TriTrypDD Annotated Genomes
  select 'Leishmania braziliensis' as organism, 'Lbraziliensis' as abbreviation from dual union
  select 'Leishmania infantum' as organism, 'Linfantum' as abbreviation from dual union
  select 'Leishmania major strain Friedlin' as organism, 'LmajorFriedlin' as abbreviation from dual union
  select 'Leishmania mexicana' as organism, 'Lmexicana' as abbreviation from dual union
  select 'Trypanosoma brucei Lister strain 427' as organism, 'Tbrucei427' as abbreviation from dual union
  select 'Trypanosoma brucei TREU927' as organism, 'TbruceiTreu927' as abbreviation from dual union
  select 'Trypanosoma brucei gambiense' as organism, 'TbruceiGambiense' as abbreviation from dual union
  select 'Trypanosoma congolense' as organism, 'Tcongolense' as abbreviation from dual union
  select 'Trypanosoma cruzi CL Brener Esmeraldo-like' as organism, 'TcruziEsmeraldo-Like' as abbreviation from dual union
  select 'Trypanosoma cruzi CL Brener Non-Esmeraldo-like' as organism, 'TcruziNonEsmeraldo-Like' as abbreviation from dual union
  select 'Trypanosoma cruzi strain CL Brener' as organism, 'TcruziUnassignedContigs' as abbreviation from dual union
  select 'Trypanosoma vivax' as organism, 'Tvivax' as abbreviation from dual union
   -- All projects which use the Workflow can get this directly from the organism table
  select tn.name as organism, o.name_for_filenames as abbreviation
  from apidb.organism o, sres.taxonname tn
  where o.taxon_id = tn.taxon_id
  and tn.name_class = 'scientific name'
       )
      ]]>
    </sql>
  </tuningTable>


 <!-- Special webservice abbreviations which are not standard organism names -->
  <tuningTable name="OrganismAbbreviationWS">
    <internalDependency name="OrganismAbbreviation"/>
    <internalDependency name="OrganismTree"/>
    <sql>
      <![CDATA[
       create table OrganismAbbreviationWS&1 nologging as
       select oa.organism, ot.parentTerm as parent, oa.abbreviation, ot.project_id
       from OrganismAbbreviation oa, OrganismTree ot
       where ot.term = oa.organism
       union
       select special.organism, special.parent,special.abbreviation, ot.project_id from OrganismTree ot,(
  -- ToxoDB Apicoplast
  select 'Toxoplasma gondii apicoplast' as organism, 'Toxoplasma gondii' as parent, 'TgondiiApicoplast' as abbreviation from dual union
  -- Giardia Deprecated
  select 'Giardia Assemblage A isolate WB (deprecated)' as organism, 'Giardia Assemblage A' as parent, 'GintestinalisAssemblageADeprecated' as abbreviation from dual union
  select 'Giardia Assemblage A isolate WB (scaffolds)' as organism, 'Giardia Assemblage A' as parent, 'GintestinalisAssemblageAScaffold' as abbreviation from dual union
  -- TrichDB Repeat Genes
  select 'Trichomonas vaginalis G3 (Repeated Genes)' as organism, 'Trichomonas vaginalis' as parent, 'TvaginalisRG' as abbreviation from dual
) special
          where special.parent = ot.term
      ]]>
    </sql>
  </tuningTable>


 <!-- Query to group projects by higher level taxonomy --> 
  <tuningTable name="ProjectIdTaxonLevel">
    <internalDependency name="SequenceAttributes"/>
    <sql>
      <![CDATA[
       CREATE TABLE ProjectIdTaxonLevel&1 NOLOGGING AS
       SELECT p.project_id, taxon_node, organism
          FROM (SELECT 'PlasmoDB' AS project_id,
		       'Apicomplexa' AS  taxon_node 
		FROM dual 
		UNION
		SELECT 'CryptoDB' AS project_id,
			   'Apicomplexa' AS  taxon_node 
		FROM dual 
		UNION
		SELECT 'ToxoDB' AS project_id,
		           'Apicomplexa' AS  taxon_node 
		FROM dual 
		UNION
		SELECT 'PiroplasmaDB' AS project_id,
		           'Apicomplexa' AS  taxon_node 
		FROM dual
		UNION
		SELECT 'TriTrypDB' AS project_id,
			   'Kinetoplastida' AS  taxon_node 
		FROM dual 
		UNION
		SELECT 'AmoebaDB' AS project_id,
			   'Amoebozoa' AS  taxon_node 
		FROM dual
		UNION 
		SELECT 'MicrosporidiaDB' AS project_id,
		           'Microsporidia' AS  taxon_node 
		FROM dual
		UNION
		SELECT 'GiardiaDB' AS project_id, 
		           'Diplomonadida' AS taxon_node 
		FROM dual
		UNION
		SELECT 'TrichDB' AS project_id,
		           'Trichomonadida' AS taxon_node
		FROM dual
        ) p,
        (select distinct project_id, organism from sequenceattributes) s
        where p.project_id = s.project_id
        union 
        select distinct s.project_id as project_id, 
              Case when (s.organism like 'Aspergillus%' or
                     s.organism like 'Emericella%' or
                     s.organism like 'Coccidioides%')
               then 'Eurotiomycetes'
               when ( s.organism like 'Tremella%' or
                      s.organism like 'Cryptococcus%' )
               then 'Tremellomycetes'
               when ( s.organism like 'Neurospora%' or 
                     s.organism like 'Magnaporthe%' or 
                     s.organism like 'Fusarium%' or 
                     s.organism like 'Gibberella%' or
                     s.organism like 'Sordaria%')
               then 'Sordariomycetes'
               when ( s.organism like 'Saccharomyces%' or
                     s.organism like 'Candida%')
               then 'Saccharomycotina'
               when ( s.organism like 'Schizosaccharomyces%')
               then 'Taphrinomycotina' 
               when (s.organism like 'Hyaloperonospora%' or
                     s.organism like 'Phytophthora%' or
                     s.organism like 'Pythium%' )
               then 'Oomycetes'
               else 'Missing ProjectIdTaxonLevel'
               end as taxon_node,
               s.organism as organism
        from sequenceattributes s
        where s.project_id = 'FungiDB'
	]]>
    </sql>
  </tuningTable>

 <!-- Query to group species by higher level taxonomy --> 
  <tuningTable name="OrganismTree">
    <internalDependency name="ProjectIdTaxonLevel"/>
    <internalDependency name="SequenceAttributes"/>
    <internalDependency name="TaxonSpecies"/>
    <externalDependency name="SRES.TaxonName"/>
    <externalDependency name="SRES.Taxon"/>
    <sql>
      <![CDATA[
        CREATE TABLE OrganismTree&1 NOLOGGING AS
         SELECT organism,term,parentTerm, internal,project_id
         FROM (
           -- all organisms from sequenceattributes as organism, organism as term, parentterm is species           
           SELECT DISTINCT sa.organism AS organism,
                           sa.organism AS term,
                           sn.name AS parentTerm,
                           t.taxon_id AS internal,
                           sa.project_id AS project_id
           FROM SequenceAttributes sa, Sres.TaxonName tn,
                SRES.Taxon t, SRES.TaxonName sn, TaxonSpecies ts
           WHERE tn.name = sa.organism
           AND  ts.taxon_id = tn.taxon_id
           AND  sn.taxon_id = ts.species_taxon_id
           AND t.taxon_id = ts.taxon_id
           AND sn.name_class = 'scientific name'
           AND t.rank != 'species'
           UNION
           -- all organisms from sequenceattributes as organism, species as term, parentterm is genus  
           -- we are getting a row for species level AND for children here
           SELECT DISTINCT sa.organism,  
                          sn.name AS term,
                          SUBSTR(sa.organism,0,(INSTR(sa.organism,' ') - 1)) AS parentTerm,
                          tn.taxon_id AS internal,
                          sa.project_id AS project_id
           FROM SequenceAttributes sa, SRES.Taxon t, 
                SRES.TaxonName tn, SRES.TaxonName sn,
                TaxonSpecies ts
           WHERE tn.name = sa.organism
           AND  ts.taxon_id = tn.taxon_id
           AND  sn.taxon_id = ts.species_taxon_id
           AND t.taxon_id = ts.taxon_id
           AND sn.name_class = 'scientific name'
           UNION 
           SELECT DISTINCT sa.organism,
                          sn.name AS term,
                          SUBSTR(sa.organism,0,(INSTR(sa.organism,' ') - 1)) AS parentTerm,
                          sn.taxon_id AS internal,
                          sa.project_id AS project_id
           FROM SequenceAttributes sa, SRES.Taxon t, 
                SRES.TaxonName tn, SRES.TaxonName sn,
                TaxonSpecies ts
           WHERE tn.name = sa.organism
           AND  ts.taxon_id = tn.taxon_id
           AND  sn.taxon_id = ts.species_taxon_id
           AND t.taxon_id = ts.taxon_id
           AND sn.name_class = 'scientific name'
           UNION
           -- all organisms from sequenceattributes as organism, genus as term, parentterm from taxonlevel
           SELECT DISTINCT sa.organism,      
                           SUBSTR(sa.organism,0,(INSTR(sa.organism,' ') - 1)) AS term,
                           ptl.taxon_node AS parentTerm,
                           -1 AS internal,
                           sa.project_id AS project_id
           FROM SequenceAttributes sa, ProjectIdTaxonLevel ptl
           WHERE ptl.project_id = sa.project_id
            AND ptl.organism = sa.organism
           UNION
           -- all organisms from sequenceattributes as organism, taxon_node as term, parentterm is null
           SELECT DISTINCT sa.organism,               
                           ptl.taxon_node AS term,
                           '' AS parentTerm,
                           -1 AS internal,
                           sa.project_id AS project_id
           FROM SequenceAttributes sa, ProjectIdTaxonLevel ptl
           WHERE ptl.project_id = sa.project_id
            AND ptl.organism = sa.organism
          )
    	]]>
    </sql>
  </tuningTable>

 <!-- Special BLAST  abbreviations which are not standard organism names -->
  <tuningTable name="OrganismAbbreviationBlast">
    <internalDependency name="OrganismAbbreviationWS"/>
    <internalDependency name="OrganismTree"/>
    <internalDependency name="EstAttributes"/>
    <sql>
      <![CDATA[
       create table OrganismAbbreviationBlast&1 nologging as
       select organism, parent, abbreviation, project_id from OrganismAbbreviationWS
         union
      -- All familes for isolates
      select distinct family_name_for_files || ' Popset/Genbank Isolates' as organism, '' as parent, family_name_for_files as abbreviation, project_name as project_id
      from apidb.organism 
       where family_name_for_files is not null
       and family_name_for_files NOT IN ('Culicosporidae', 'Dubosqiidae', 'Pleistophoridae')
       union
       select special.organism, special.parent, special.abbreviation, ot.project_id from OrganismTree ot,
       (
  -- All species and speciesAbbreviations from apidb.organism where we have ests
  select distinct sp.name as organism,
                  ot.parentTerm as parent,
                  REGEXP_REPLACE(org.name_for_filenames, org.strain_abbrev,'', 1, 1) as abbreviation 
  from SRES.taxonname sp, taxonspecies ts, apidb.organism org, organismtree ot,
       estattributes ea, sres.taxonname etn, taxonspecies ets
  where org.taxon_id = ts.taxon_id
  and ts.species_taxon_id = sp.taxon_id
  and sp.name_class = 'scientific name'
  and ot.term = sp.name
  and org.strain_abbrev is not null
  and org.name_for_filenames is not null
  and ets.species_taxon_id = sp.taxon_id
  and (ets.taxon_id = etn.taxon_id OR ets.species_taxon_id = etn.taxon_id)
  and etn.name = ea.organism
  union
  -- ToxoDB ESTs Legacy
  select 'Toxoplasma gondii' as organism, 'Toxoplasma' as parent, 'Tgondii' as abbreviation from dual union  
  -- ToxoDB Isolates Legacy
  select 'All Toxoplasma Isolates' as organism, 'Toxoplasma' as parent, 'ToxoDB' as abbreviation from dual union  
  -- GiardiaDB ESTs Legacy
  select 'Giardia Assemblage A' as organism, 'Giardia' as parent, 'GintestinalisAssemblageA' as abbreviation from dual union  
  -- GiardiaDB Isolates Legacy
  select 'All Giardia Isolates' as organism, 'Giardia' as parent, 'GiardiaGenbank' as abbreviation from dual union  
  -- TrichDB EST Legacy
  select 'Trichomonas vaginalis' as organism, 'Trichomonas' as parent, 'Tvaginalis' as abbreviation from dual union  
  -- AmoebaDB EST Legacy
  select 'Entamoeba dispar' as organism, 'Entamoeba' as parent, 'Edispar' as abbreviation from dual union  
  select 'Entamoeba histolytica' as organism, 'Entamoeba' as parent, 'Ehistolytica' as abbreviation from dual union  
  -- PlasmoDB Legacy Isolates
  select 'P. falciparum Barcode Isolates' as organism, 'Plasmodium' as parent, 'PfalciparumBarcode' as abbreviation from dual union
  select 'P. berghei Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Pberghei' as abbreviation from dual union
  select 'P. chabaudi Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Pchabaudi' as abbreviation from dual union
  select 'P. falciparum Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Pfalciparum' as abbreviation from dual union
  select 'P. knowlesi Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Pknowlesi' as abbreviation from dual union
  select 'P. reichenowi Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Preichenowi' as abbreviation from dual union
  select 'P. vivax Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Pvivax' as abbreviation from dual union
  select 'P. yoelii Popset/Genbank Isolates' as organism, 'Plasmodium' as parent, 'Pyoelii' as abbreviation from dual union
   -- TriTrypDD ESTs Legacy
  select 'Trypanosoma brucei' as organism, 'Trypanosoma' as parent, 'Tbrucei' as abbreviation from dual union
  select 'Trypanosoma cruzi' as organism, 'Trypanosoma' as parent, 'Tcruzi' as abbreviation from dual union
  select 'Leishmania major' as organism, 'Leishmania' as parent, 'LmajorFriedlin' as abbreviation from dual union
  select 'Leishmania mexicana mexicana' as organism, 'Leishmania mexicana' as parent, 'Lmexicana' as abbreviation from dual union
  -- EuPathDB Other ESTs Legacy
  select 'Other Apicomplexan ESTs' as organism, 'Apicomplexa' as parent, 'Other' as abbreviation from dual) special
      where special.parent = ot.term
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="Ssgcid" alwaysUpdate="true">
    <program commandLine="buildSsgcidTT"/>
  </tuningTable>

  <tuningTable name="MassSpecTerms" alwaysUpdate="true">
    <program commandLine="buildMassSpecTermsTT_trunk"/>
  </tuningTable>

  <tuningTable name="GbrowseTracksOrganism" alwaysUpdate="true">
    <program commandLine="buildGbrowseImageUrlTT"/>
  </tuningTable>

  <tuningTable name="DataSourceAttribution" alwaysUpdate="true">
    <!-- internalDependency name="apidb.SequenceAttributes"/ -->
    <ancillaryTable name="DataSourceContact"/>
    <ancillaryTable name="DataSourceAttributionURL"/>
    <ancillaryTable name="DataSourceAttrPublication"/>
    <ancillaryTable name="DataSourceWdkReference"/>
    <ancillaryTable name="DataSourceWdkRefText"/>
    <program commandLine="buildDataSourceAttributionsTT"/>
  </tuningTable>

  <tuningTable name="TrackOldAnnotation" alwaysUpdate="true">
    <program commandLine="buildTrackOldAnnotationTT"/>
  </tuningTable>


</tuningConfig>
