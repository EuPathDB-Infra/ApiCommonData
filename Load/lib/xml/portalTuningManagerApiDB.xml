<?xml version="1.0" encoding="UTF-8"?>
<!--
<?xml version="1.0"?>
<!DOCTYPE tuningConfig [
<!ELEMENT tuningConfig (tuningTable+)>
<!ELEMENT tuningTable (externalTuningTableDependency*,internalDependency*,intermediateTable*,unionization+,sql*,perl*)>
<!ELEMENT externalTuningTableDependency EMPTY>
<!ELEMENT internalDependency EMPTY>
<!ELEMENT intermediateTable EMPTY>
<!ELEMENT unionization (source+)>
<!ELEMENT source (query*)>
<!ELEMENT query (#PCDATA)>
<!ELEMENT sql (#PCDATA)>
<!ELEMENT perl (#PCDATA)>

<!ATTLIST tuningTable name CDATA #REQUIRED>

<!ATTLIST externalTuningTableDependency 
  name CDATA #REQUIRED
  dblink CDATA #IMPLIED
>

<!ATTLIST internalDependency name CDATA #REQUIRED>
<!ATTLIST source dblink CDATA #IMPLIED>
]>
-->
<tuningConfig>

  <tuningTable name="GeneGFF">
    <externalDependency name="apidb.GeneGFF" dblink="giardia.tuning"/>
    <externalDependency name="apidb.GeneGFF" dblink="plasmo.tuning"/>
    <externalDependency name="apidb.GeneGFF" dblink="toxo.tuning"/>
    <externalDependency name="apidb.GeneGFF" dblink="crypto.tuning"/>
    <externalDependency name="apidb.GeneGFF" dblink="tritryp.tuning"/>
    <externalDependency name="apidb.GeneGFF" dblink="trich.tuning"/>
<!--    <externalDependency name="apidb.GeneGFF" dblink="micro.tuning"/>
    <externalDependency name="apidb.GeneGFF" dblink="amoeba.tuning"/> -->
    <externalDependency name="apidb.GeneGFF" dblink="piro.tuning"/>
    <intermediateTable name="Apidb.GeneGFFGiardia"/>
    <intermediateTable name="Apidb.GeneGFFPlasmo"/>
    <intermediateTable name="Apidb.GeneGFFToxo"/>
    <intermediateTable name="Apidb.GeneGFFCrypto"/>
    <intermediateTable name="Apidb.GeneGFFTriTryp"/>
    <intermediateTable name="Apidb.GeneGFFTrich"/>
    <intermediateTable name="Apidb.GeneGFFPiro"/>
<!--    <intermediateTable name="Apidb.GeneGFFAmoeba"/>
    <intermediateTable name="Apidb.GeneGFFMicro"/> -->

    <sql>
      <![CDATA[
        create table GeneGFFGiardia nologging as
        select SOURCE_ID,PROJECT_ID as PROJECT_ID,TABLE_NAME, ROW_COUNT,
               CONTENT, MODIFICATION_DATE from apidb.GeneGFF@giardia.tuning
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneGFFPlasmo nologging as
        select SOURCE_ID,PROJECT_id, TABLE_NAME, ROW_COUNT,
               CONTENT, MODIFICATION_DATE from apidb.GeneGFF@plasmo.tuning
       ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneGFFToxo nologging as
        select SOURCE_ID, PROJECT_ID, TABLE_NAME, ROW_COUNT,
        CONTENT, MODIFICATION_DATE from apidb.GeneGFF@toxo.tuning
       ]]>
    </sql>

      <sql>
      <![CDATA[
        create table GeneGFFTriTryp nologging as
        select SOURCE_ID,PROJECT_ID, TABLE_NAME, ROW_COUNT,
               CONTENT, MODIFICATION_DATE from apidb.GeneGFF@tritryp.tuning
      ]]>
    </sql>

      <sql>
      <![CDATA[
        create table GeneGFFCrypto nologging as
        select SOURCE_ID, PROJECT_ID, TABLE_NAME, ROW_COUNT,
               CONTENT, MODIFICATION_DATE from apidb.GeneGFF@crypto.tuning
      ]]>
    </sql>

     <sql>
      <![CDATA[
        create table GeneGFFTrich nologging as
        select SOURCE_ID,PROJECT_ID, TABLE_NAME, ROW_COUNT,
               CONTENT, MODIFICATION_DATE from apidb.GeneGFF@trich.tuning where project_id = 'TrichDB'
      ]]>
    </sql>
<!--
      <sql>
      <![CDATA[
        create table GeneGFFAmoeba nologging as
        select SOURCE_ID,'EuPathDB' as PROJECT_ID,
               TABLE_NAME, ROW_COUNT,CONTENT, MODIFICATION_DATE from apidb.GeneGFF@amoeba.tuning where project_id = 'AmoebaDB'
      ]]>
    </sql>

      <sql>
      <![CDATA[
        create table GeneGFFMicro nologging as
        select SOURCE_ID,'EuPathDB' as PROJECT_ID,
               TABLE_NAME, ROW_COUNT,CONTENT, MODIFICATION_DATE from apidb.GeneGFF@micro.tuning where project_id = 'MicrosporidiaDB'
      ]]>
    </sql>
-->

     <sql>
      <![CDATA[
        create table GeneGFFPiro nologging as
        select SOURCE_ID,PROJECT_ID, TABLE_NAME, ROW_COUNT,
               CONTENT, MODIFICATION_DATE from apidb.GeneGFF@piro.tuning where project_id = 'PiroDB'
      ]]>
    </sql>

      <sql>
      <![CDATA[
        create table GeneGFF&1 nologging as
        (
        select * from Apidb.GeneGFFGiardia
        union all
        select * from Apidb.GeneGFFPlasmo
        union all
        select * from Apidb.GeneGFFToxo
        union all
        select * from Apidb.GeneGFFTriTryp
        union all
        select * from Apidb.GeneGFFTrich
        union all
        select * from Apidb.GeneGFFCrypto
        union all
        select * from Apidb.GeneGFFPiro
/*        union all
        select * from Apidb.GeneGFFAmoeba
        union all
        select * from Apidb.GeneGFFMicro */
        )
      ]]>
    </sql>
  </tuningTable>

 
  <tuningTable name="GeneDetail">
    <externalDependency name="apidb.GeneDetail" dblink="crypto.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="giardia.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="plasmo.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="toxo.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="tritryp.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="trich.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="amoeba.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="micro.tuning"/>
    <externalDependency name="apidb.GeneDetail" dblink="piro.tuning"/>
    <intermediateTable name="Apidb.GeneDetailCrypto"/>
    <intermediateTable name="Apidb.GeneDetailGiardia"/>
    <intermediateTable name="Apidb.GeneDetailPlasmo"/>
    <intermediateTable name="Apidb.GeneDetailToxo"/>
    <intermediateTable name="Apidb.GeneDetailTrich"/>
    <intermediateTable name="Apidb.GeneDetailTriTryp"/>
    <intermediateTable name="Apidb.GeneDetailAmoeba"/>
    <intermediateTable name="Apidb.GeneDetailMicro"/>
    <intermediateTable name="Apidb.GeneDetailPiro"/>

    <sql>
      <![CDATA[
        create table GeneDetailCrypto nologging as
        select * from apidb.GeneDetail@crypto.tuning
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetailGiardia nologging as
        select * from apidb.GeneDetail@giardia.tuning
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetailPlasmo nologging as
        select * from apidb.GeneDetail@plasmo.tuning
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetailToxo nologging as
        select * from apidb.GeneDetail@toxo.tuning
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetailTrich nologging as
        select * from apidb.GeneDetail@trich.tuning where project_id = 'TrichDB'
      ]]>
    </sql>
    
    <sql>
      <![CDATA[
        create table GeneDetailAmoeba nologging as
        select * from apidb.GeneDetail@amoeba.tuning where project_id = 'AmoebaDB'
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetailMicro nologging as
        select * from apidb.GeneDetail@micro.tuning where project_id = 'MicrosporidiaDB'
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetailTriTryp nologging as
        select * from apidb.GeneDetail@tritryp.tuning
      ]]>
    </sql>


    <sql>
      <![CDATA[
        create table GeneDetailPiro nologging as
        select * from apidb.GeneDetail@piro.tuning
      ]]>
    </sql>

    <sql>
      <![CDATA[
        create table GeneDetail&1 nologging as
        (
        select * from Apidb.GeneDetailCrypto
        union all
        select * from Apidb.GeneDetailGiardia
        union all
        select * from Apidb.GeneDetailPlasmo
        union all
        select * from Apidb.GeneDetailToxo
        union all
        select * from Apidb.GeneDetailTrich
        union all
        select * from Apidb.GeneDetailTriTryp
        union all
        select * from Apidb.GeneDetailAmoeba
        union all
        select * from Apidb.GeneDetailMicro
        union all
        select * from Apidb.GeneDetailPiro
        )
      ]]>
    </sql>
  </tuningTable>


<tuningTable name="OrthomclTaxon">
    <externalDependency name="apidb.orthomcltaxon" dblink="crypto.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="giardia.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="plasmo.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="toxo.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="tritryp.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="trich.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="amoeba.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="micro.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="piro.tuning"/>


  <perl>
      <![CDATA[ 

#!/usr/bin/perl
use DBI;
use strict;
use lib "$ENV{GUS_HOME}/lib/perl";

my $sqlQueries;
$sqlQueries->{getDbLinksSql} = <<EOSQL;
        SELECT  db_link  
	FROM     all_db_links
        WHERE    db_link like '%.TUNING'
EOSQL

my $hash_ref;
my $queryHandle;
my $sql;
$sql = $sqlQueries->{getDbLinksSql};
$queryHandle = $dbh->prepare($sql) or die $dbh->errstr;
$queryHandle->execute();

#looping on available component sites
my $select;
my $maxRowCount = 0;
my $rowCount = 0;
my $dbLink;
my $maxDbLink;
while ( $hash_ref = $queryHandle->fetchrow_hashref ) {
    $dbLink =  $hash_ref->{DB_LINK};
    $select = "SELECT COUNT(*) FROM apidb.orthomcltaxon@" . $dbLink;
    $rowCount = $dbh->selectrow_array($select);

    if ($rowCount > $maxRowCount) {
	$maxRowCount = $rowCount;
	$maxDbLink = $dbLink;
    }
}
# requires dblink with most updated table
# (we'll assume that's the most populous one, since orthoMCL tends to grow monotonically)

$dbh->do(<<EOSQL) or die $dbh->errstr;
    create table OrthomclTaxon&1 AS SELECT * FROM apidb.orthomcltaxon\@$maxDbLink
EOSQL

      ]]> 
    </perl>
  
  </tuningTable>


</tuningConfig>
