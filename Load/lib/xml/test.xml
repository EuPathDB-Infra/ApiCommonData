<tuningConfig>


  <tuningTable name="apidb.orthomcltaxon&1">
    <externalDependency name="apidb.orthomcltaxon" dblink="crypto.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="giardia.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="plasmo.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="toxo.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="tritryp.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="trich.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="amoeba.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="micro.tuning"/>
    <externalDependency name="apidb.orthomcltaxon" dblink="piro.tuning"/>


  <perl>
      <![CDATA[ 

#!/usr/bin/perl
use DBI;
use strict;
use lib "$ENV{GUS_HOME}/lib/perl";

my $sqlQueries;
$sqlQueries->{getDbLinksSql} = <<EOSQL;
        SELECT  db_link  
	FROM     all_db_links
        WHERE    db_link like '%.TUNING'
EOSQL

my $hash_ref;
my $queryHandle;
my $sql;

$sql = $sqlQueries->{getDbLinksSql};
$queryHandle = $dbh->prepare($sql) or die $dbh->errstr;
$queryHandle->execute();

#looping on available component sites
my $select;
my $maxRowCount = 0;
my $rowCount = 0;
my $dbLink;
my $maxDbLink;
while ( $hash_ref = $queryHandle->fetchrow_hashref ) {
    $dbLink =  $hash_ref->{DB_LINK};
    $select = "SELECT COUNT(*) FROM apidb.orthomcltaxon@" . $dbLink;
    $rowCount = $dbh->selectrow_array($select);

    if ($rowCount > $maxRowCount) {
	$maxRowCount = $rowCount;
	$maxDbLink = $dbLink;
    }
}

#print "\nmaxRowCount is: $maxRowCount and maxDbLink is $maxDbLink \n";

#requires dblink with most updated table
$select = "SELECT * FROM apidb.orthomcltaxon@" . $maxDbLink;
$sqlQueries->{createTableSql} = <<EOSQL;
    CREATE TABLE apidb.orthomcltaxon AS $select
EOSQL


$sql = $sqlQueries->{createTableSql};
$queryHandle = $dbh->prepare($sql) or die $dbh->errstr;
$queryHandle->execute();

$queryHandle->finish();

      ]]> 
    </perl>
  


  </tuningTable>

</tuningConfig>
