newRows$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
newRows$values <- NA
newRows$mappedTerm <- ":::UNDEF:::"
}
}
}
newRows
newRows <- valueMap[1,]
for(j in unique(varMap$category)){
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
print(i)
print(temp2)
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
rbind(newRows, temp3)
}
}
}
newRows <- valueMap[1,]
for(j in unique(varMap$category)){
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
print(i)
print(temp2)
temp3 <- newRows[1,]
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
rbind(newRows, temp3)
}
}
}
newRows
temp3
newRows <- valueMap[1,]
for(j in unique(varMap$category)){
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
print(i)
print(temp2)
temp3 <- newRows[1,]
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
newRows <- rbind(newRows, temp3)
}
}
}
newRows
newRows[-1,]
newRows <- newRows[-1,]
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/008.LLINEUP_revert_to_varMap.RData"
OUTPUT <- "./Processed data/009.LLINEUP_idMap.RData"
#############################################################
print(load(INPUT))
#############################################################
tail(varMap)
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
write.csv(newRows, file="./Processed data/010_LLINEUP_newRows_valueMap.csv")
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/008.LLINEUP_revert_to_varMap.RData"
OUTPUT <- "./Processed data/009.LLINEUP_idMap.RData"
#############################################################
print(load(INPUT))
#############################################################
tail(varMap)
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(temp2, collapse=", ")
temp3$variable2 <- paste(varMap$variable[varMap$label==i], collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
write.csv(newRows, file="./Processed data/010_LLINEUP_newRows_valueMap.csv", row.names=F)
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2, collapse=", "))
temp3$variable2 <- paste(unique(varMap$variable[varMap$label==i], collapse=","))
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2, collapse=", "))
temp3$variable2 <- paste(unique(varMap$variable[varMap$label==i], collapse=","))
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
i
j
temp <- varMap[varMap$category==j & varMap$termType !="category",]
temp2 <- unique(temp[temp$label==i,"dataFile"])
temp2
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2, collapse=", "))
temp3$variable <- paste(unique(temp2), collapse=", ")
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2), collapse=", ")
temp3$variable2 <- paste(unique(varMap$variable[varMap$label==i]), collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
dim(newRows)
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/008.LLINEUP_revert_to_varMap.RData"
OUTPUT <- "./Processed data/009.LLINEUP_idMap.RData"
#############################################################
print(load(INPUT))
#############################################################
# determine which terms are only available in 1 data file --> we will need to map these terms to NA / :::UNDEF::: for the other files
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2), collapse=", ")
temp3$variable2 <- paste(unique(varMap$variable[varMap$label==i]), collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
#############################################################
# save newRows for manual editing
write.csv(newRows, file="./Processed data/010_LLINEUP_newRows_valueMap.csv", row.names=F)
#############################################################
# import updated version
newrRows <- read.csv(file="./Processed data/010_LLINEUP_newRows_valueMap_manualUpdates.csv", as.is=T)
head(valueMap)
head(newRows)
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/008.LLINEUP_revert_to_varMap.RData"
OUTPUT <- "./Processed data/009.LLINEUP_idMap.RData"
#############################################################
print(load(INPUT))
#############################################################
# determine which terms are only available in 1 data file --> we will need to map these terms to NA / :::UNDEF::: for the other files
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2), collapse=", ")
temp3$variable2 <- paste(unique(varMap$variable[varMap$label==i]), collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
#############################################################
# save newRows for manual editing
write.csv(newRows, file="./Processed data/010_LLINEUP_newRows_valueMap.csv", row.names=F)
#############################################################
# import updated version
newRows <- read.csv(file="./Processed data/010_LLINEUP_newRows_valueMap_manualUpdates.csv", as.is=T)
#############################################################
# fix format of newRows
new
head(valueMap)
head(newRows)
newRows$variable <- paste(newRows$variable, newRows$variable2, sep="::")
newRows$variable2 <- newRows$variable
head(valueMap)
head(newRows)
newRows <- newRows[,names(newRows) != "category"]
head(valueMap)
head(newRows)
valueMap <- rbind(valueMap, newRows)
setwd("~/Documents/GitHub/ApiCommonData/Load/ontology/Gates/LLINEUP")
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/008.LLINEUP_revert_to_varMap.RData"
OUTPUT <- "./Processed data/009.LLINEUP_idMap.RData"
#############################################################
print(load(INPUT))
#############################################################
# save final idMap.csv and valueMap.txt files in github
setwd("~/Documents/GitHub/ApiCommonData/Load/ontology/Gates/LLINEUP")
save(idMap, file="./idMap.csv", row.names=F)
write.table(valueMap, file="./valueMap.txt", sep = "/t", row.names=F, col.names=F)
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/008.LLINEUP_revert_to_varMap.RData"
OUTPUT <- "./Processed data/009.LLINEUP_idMap.RData"
#############################################################
print(load(INPUT))
#############################################################
# explore categories of variables in each file
unique(varMap[varMap$dataFile=="hh_00m", "category"])
#[1] "Household"  "Entomology"
unique(varMap[varMap$dataFile=="hh_06m", "category"])
#[1] "Household"  "Entomology"
unique(varMap[varMap$dataFile=="hh_12m", "category"])
#[1] "Household"  "Entomology"
unique(varMap[varMap$dataFile=="hh_18m", "category"])
#[1] "Household"  "Entomology"
unique(varMap[varMap$dataFile=="hh_member_00m", "category"])
#[1] "Household"   "Observation" "Participant" "Sample"
varMap[varMap$dataFile=="hh_member_00m" & varMap$category=="Household","variable"]
#[1] "hhid"
unique(varMap[varMap$dataFile=="hh_member_06m", "category"])
#[1] "Household"   "Observation" "Participant" "Sample"
varMap[varMap$dataFile=="hh_member_06m" & varMap$category=="Household","variable"]
#[1] "hhid"
unique(varMap[varMap$dataFile=="hh_member_12m", "category"])
#[1] "Household"   "Observation" "Participant" "Sample"
varMap[varMap$dataFile=="hh_member_12m" & varMap$category=="Household","variable"]
#[1] "hhid"
unique(varMap[varMap$dataFile=="hh_member_18m", "category"])
#[1] "Household"   "Observation" "Participant" "Sample"
varMap[varMap$dataFile=="hh_member_18m" & varMap$category=="Household","variable"]
#[1] "hhid"
#############################################################
# create idMap (columns = file, category, id)
temp <- data.frame(file=unique(varMap$dataFile[varMap$dataFile!=""]), category=NA, id=NA)
# household
h_idMap <- temp
h_idMap$category <- "household"
h_idMap$id <- "hhid"
# household observation
ho_idMap <- temp
ho_idMap$category <- "hhObs"
ho_idMap$id <- "hhid+survey"
ho_idMap <- ho_idMap[grep("hh_..m$", ho_idMap$file),]
# entomology observation
e_idMap <- temp
e_idMap$category <- "entomology"
e_idMap$id <- "hhid+survey"
e_idMap <- e_idMap[grep("hh_..m$", e_idMap$file),]
# participant
p_idMap <- temp
p_idMap$category <- "participant"
p_idMap$id <- "pid"
p_idMap <- p_idMap[grep("member", p_idMap$file),]
# observation
o_idMap <- temp
o_idMap$category <- "observation"
o_idMap$id <- "pid+survey"
o_idMap <- o_idMap[grep("member", o_idMap$file),]
# sample
s_idMap <- temp
s_idMap$category <- "sample"
s_idMap$id <- "pid+survey"
s_idMap <- s_idMap[grep("member", s_idMap$file),]
idMap <- rbind(rbind(rbind(rbind(rbind(h_idMap, ho_idMap), e_idMap), p_idMap), o_idMap), s_idMap)
idMap <- idMap[order(idMap$file),]
idMap
#############################################################
# save
save(allVars, varMap, valueMap, dataFiles, originalFiles, codebook, notes_for_DL, idMap, file=OUTPUT)
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(dplyr)
#############################################################
INPUT <- "./Processed data/009.LLINEUP_idMap.RData"
OUTPUT <- "./Processed data/010.LLINEUP_valueMap_newRows.RData"
#############################################################
print(load(INPUT))
#############################################################
# determine which terms are only available in 1 data file --> we will need to map these terms to NA / :::UNDEF::: for the other files
newRows <- valueMap[1,]
newRows$category <- ""
for(j in unique(varMap$category)){
print(j)
temp <- varMap[varMap$category==j & varMap$termType !="category",]
for(i in unique(temp$label)){
temp2 <- unique(temp[temp$label==i,"dataFile"])
if(length(temp2) %in% c(4,8)==F){
temp3 <- newRows[1,]
temp3$variable <- paste(unique(temp2), collapse=", ")
temp3$variable2 <- paste(unique(varMap$variable[varMap$label==i]), collapse=",")
temp3$values <- NA
temp3$mappedTerm <- ":::UNDEF:::"
temp3$category <- j
newRows <- rbind(newRows, temp3)
}
}
}
newRows <- newRows[-1,]
newRows
#############################################################
# save newRows for manual editing
write.csv(newRows, file="./Processed data/010_LLINEUP_newRows_valueMap.csv", row.names=F)
#############################################################
# import updated version
newRows <- read.csv(file="./Processed data/010_LLINEUP_newRows_valueMap_manualUpdates.csv", as.is=T)
#############################################################
# fix format of newRows
newRows$variable <- paste(newRows$variable, newRows$variable2, sep="::")
newRows$variable2 <- newRows$variable
newRows <- newRows[,names(newRows) != "category"]
#############################################################
# merge newRows into valueMap
valueMap <- rbind(valueMap, newRows)
#############################################################
# save
save(allVars, varMap, valueMap, dataFiles, originalFiles, codebook, notes_for_DL, idMap, file=OUTPUT)
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
#############################################################
INPUT <- "./Processed data/010.LLINEUP_valueMap_newRows.RData"
#############################################################
print(load(INPUT))
setwd("~/Documents/GitHub/ApiCommonData/Load/ontology/Gates/LLINEUP")
save(idMap, file="./idMap.csv", row.names=F)
write.table(valueMap, file="./valueMap.txt", sep = "/t", row.names=F, col.names=F)
head(idMap)
save(idMap, file="idMap.csv", row.names=F)
write.csv(idMap, file="idMap.csv", row.names=F)
write.table(valueMap, file="valueMap.txt", sep = "/t", row.names=F, col.names=F)
library(readr)
write_tsv(valueMap, "valueMap.txt")
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(readr)
#############################################################
INPUT <- "./Processed data/010.LLINEUP_valueMap_newRows.RData"
#############################################################
print(load(INPUT))
for(i in unique(allVars$dataFile[allVars$fileGroup %in% c("hh_member", "household")])){
temp <- dataFiles[[i]]
write.csv(temp, file=paste(paste("./Processed data/files_to_load/", i, sep=""), "csv", sep="."))
rm(temp)
}
setwd("~/Documents/GitHub/ApiCommonData/Load/ontology/Gates/LLINEUP")
write.csv(idMap, file="idMap.csv", row.names=F)
write_tsv(valueMap, "valueMap.txt")
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(readr)
#############################################################
INPUT <- "./Processed data/010.LLINEUP_valueMap_newRows.RData"
#############################################################
print(load(INPUT))
#############################################################
# save individual data files to be loaded --> these will need to be moved to manual delivery
for(i in unique(allVars$dataFile[allVars$fileGroup %in% c("hh_member", "household")])){
temp <- dataFiles[[i]]
write.csv(temp, file=paste(paste("./Final data/files_to_load/", i, sep=""), "csv", sep="."))
rm(temp)
}
#############################################################
# save final idMap.csv and valueMap.txt files in github
setwd("~/Documents/GitHub/ApiCommonData/Load/ontology/Gates/LLINEUP")
write.csv(idMap, file="idMap.csv", row.names=F)
write_tsv(valueMap, "valueMap.txt")
rm(list=ls())
setwd("~/Box/Danica EuPathDB/Studies/LLINE-UP/DH_workspace/Data")
library(readr)
#############################################################
INPUT <- "./Processed data/010.LLINEUP_valueMap_newRows.RData"
#############################################################
print(load(INPUT))
#############################################################
# save individual data files to be loaded --> these will need to be moved to manual delivery
for(i in unique(allVars$dataFile[allVars$fileGroup %in% c("hh_member", "household")])){
temp <- dataFiles[[i]]
write.csv(temp, file=paste(paste("./Final data/files_to_load/", i, sep=""), "csv", sep="."))
rm(temp)
}
#############################################################
# save final idMap.csv and valueMap.txt files in github
setwd("~/Documents/GitHub/ApiCommonData/Load/ontology/Gates/LLINEUP")
write.csv(idMap, file="idMap.csv", row.names=F)
write_tsv(valueMap, "valueMap.txt")
