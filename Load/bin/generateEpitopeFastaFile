#!/usr/bin/perl
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | unreviewed
die 'This file has broken or unreviewed GUS4_STATUS rules.  Please remove this line when all are fixed or absent';
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^

use strict;
use Getopt::Long qw(GetOptions);

my $verbose = 0;
my $inputFile;
my $outputFile;

GetOptions("verbose!"        => \$verbose,
           "inputFile=s"     => \$inputFile,
           "outputFile=s"    => \$outputFile,
          );

unless (-e $inputFile) {
  die "Must supply a valid input file!\nUsage: generateEpitopeFastaFile --inputFile <FILE> --outputFile <FILE> [--verbose]";
}

open(IN, "<$inputFile");
open(OUT, ">>$outputFile");

while(<IN>){
chomp;

next if /Accession/;

my @values = split("\t",$_);

# the order of the fields in the defline is expected by extractEpitopeTabFile
# IEDB ID|epitope name|strainTaxId|accession
print OUT ">$values[1]|$values[4]|$values[2]|$values[0]
$values[3]\n";

}

close(OUT);
close(IN);
