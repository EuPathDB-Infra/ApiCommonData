#!/usr/bin/perl
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | absent
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";

use Getopt::Long;

my ($inFile,$outFile,$verbose);
&GetOptions("inFile=s" => \$inFile,
            "outFile=s" => \$outFile,
	    "verbose!" => \$verbose);


die "usage:processIdxFile --inFile --outFile
     generates a file of ids and taxon names from an input source.idx file from PDB\n" if (! -e $inFile && ! $outFile);


open (INFILE, $inFile) || die "Can't open $inFile\n";

open (OUTFILE, ">$outFile") || die "Can't open $outFile\n";

while(<INFILE>){
  chomp;
  my $line = $_;
  next if ($line !~ /^\d+/);
  my @ln = split (/\t/,$line);
  my $id = $ln[0];
  my @names = split(/\;\s/,$ln[1]);
  print OUTFILE ("$id\n") if (@names < 1);
  foreach my $name (@names) {
    $name =~ s/^\s//;
    print OUTFILE ("$id\t$name\n");
  }
}

