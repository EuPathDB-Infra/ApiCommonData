#!/usr/bin/perl

##turn an excel  table into a wiki table

use strict;
use Spreadsheet::BasicRead;
use Bio::Seq;
use Bio::Tools::GFF;
use Getopt::Long qw(GetOptions);

my $verbose = 0;
my $newFormat = 0;
my $inputFile;
my $outputFile;

GetOptions("verbose!"        => \$verbose,
           "inputFile=s"     => \$inputFile,
           "outputFile=s"    => \$outputFile,
	   "newFormat!"        => \$newFormat,
          );

unless (-e $inputFile) {
  die "Must supply a valid input file!\nUsage: extractFromExcel --inputFile <FILE> --outputFile <FILE> [--verbose][--newFormat] ";
}

my $spreadSheet = Spreadsheet::BasicRead->new(fileName => $inputFile,
                  skipHeadings  => 1,
                  skipBlankRows => 1) || die "Could not open '$inputFile':$!";

open(OUT, ">> $outputFile");

print OUT "Accession\tIEDB ID\tStrain\tSequence\tEpitope Name\n";

while(my $data = $spreadSheet->getNextRow()){

    my ($iedbId,$epiName,$seq,$accession,$strain);
    next unless $data;
    if ($newFormat){
	$iedbId = $$data[0];
	$epiName = $$data[2];
	$seq = $$data[1];
	$seq =~ s/(\S+?)\.*/$1/g;
	$seq =~ s/\d*//g;
	$accession = $$data[0];
	$strain = $$data[3];

    }else{
	$iedbId = $$data[1];
	$epiName = $$data[2];
	$seq = $$data[4];
	$accession = $$data[10];
	$strain = $$data[7];
    }

  print OUT "$accession\t$iedbId\t$strain\t$seq\t$epiName\n" if $seq;
}

close (OUT);


###TODO####
# Generalize plugin by making columns to take and order to print in
# customizable via the command line
###########
