#!@perl@ 
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | absent
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^

## Given a comma delimited list of property:value pairs, create a property file 

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;



my ($propList,$file);
&GetOptions("propList=s" => \$propList,
	    "file=s" => \$file);

my $usage = "usage: createPropFile --propList --file";
die $usage unless $propList && $file;

my @props = split (/,/,$propList);

open (FILE,">$file") or die "Can't open $file for writing\n";

foreach my $propPair (@props) {
  print STDERR ("property list is not in the correct comma delimited, prop:value pairs format\n") if ($propPair !~ /\:/);
  my ($prop,$value) = split (/:/,$propPair);
  print FILE ("${prop}=$value\n");
}

close FILE;
