#!/usr/bin/perl

# This plugin takes a file in the format
#
# Pxchr  Pxstart Pxstop Pxstrand Pfchr Pfstart Pfstop Pf strand
#
# and reformats it as
#
# Pfchr Pxchr Pfstart Pflength Pxstart Pxlength Pfstrand

use strict;
use warnings;

use Data::Dumper;

use lib "$ENV{GUS_HOME}/lib/perl";

use Getopt::Long qw(GetOptions);

my $verbose = 0;
my $inputFile;
my $outputFile;

GetOptions("verbose!"        => \$verbose,
           "inputFile=s" => \$inputFile,
           "outputFile=s"    => \$outputFile,
          );

unless ($inputFile){ 
  print STDERR "Please provide input file\n\nUSAGE: formatPxSyntenyFile --inputFile <FILEPATH> --outputFile <FILEPATH> [--verbose]\n";
  exit;
}


open(FILE, "$inputFile") or die "Could not open file '$inputFile': $!\n";

open(OUT, ">$outputFile") or die "Could not open file '$outputFile' for writing: $!\n";

while(<FILE>){
  chomp;

  my @values = split("\t",$_);

  my $pfChr = $values[4];
  my $pfStart = $values[5];
  my $pfEnd = $values[6];
  my $pfStrand = $values[7];
  my $pfLength = $pfEnd - $pfStart;

  my $pxChr = $values[0];
  my $pxStart = $values[1];
  my $pxEnd = $values[2];
  my $pxLength = $pxEnd - $pxStart;

  if($pfChr =~ /^assembled/) {
    die "Cannot use assembled as the reference genome";
  }
  else {
    print OUT "$pfChr\t$pxChr\t$pfStart\t$pfLength\t$pxStart\t$pxLength\t$pfStrand\n";  
  }
}

close(OUT);
close(FILE);


