#!/usr/bin/perl
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | unreviewed
die 'This file has broken or unreviewed GUS4_STATUS rules.  Please remove this line when all are fixed or absent';
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";

use Getopt::Long;
use Data::Dumper;
use List::Util qw(sum);

my ($outputFile,$inputFile,$verbose, $sampleName);
&GetOptions("inputFile=s" => \$inputFile,
	    "sampleName=s" => \$sampleName,
            "verbose!" => \$verbose,
            "outputFile=s" => \$outputFile);

open (TABFILE, "$inputFile") or die "Cannot open file for reading:  $!";

open(OUT, "> $outputFile") or die "Cannot open file for writing:  $!";

while (<TABFILE>){
  chomp;

  next if /^intron/; 

  my ($intron,)= split(/\t/, $_);

  my ($genomeId, $location) =split(/:/, $intron);

  my ($start, $end) = split(/-/, $location);

  print OUT "$genomeId\tEXON_JUNCTIONS\tIntron\t$start\t$end\t.\t.\t.\tID \"$sampleName"."-"."$genomeId"."-"."$location\"\n";
}

close(TABFILE);

close(OUT);
