#!/usr/bin/perl

use lib "$ENV{GUS_HOME}/lib/perl";
use ApiCommonData::Load::CalculationsForCNVs;
use strict;
use warnings;
use Getopt::Long;

our @ISA = qw(ApiCommonData::Load::CalculationsForCNVs);

sub calculateChrPloidies {
    my ($fpkmFile, $ploidy) = @_;
    my $chrValues = ApiCommonData::Load::CalculationsForCNVs::getChrFPKMVals($fpkmFile);
    my $chrMedians = ApiCommonData::Load::CalculationsForCNVs::getChrMedians($chrValues);
    my $allChrMedian = ApiCommonData::Load::CalculationsForCNVs::getMedianAcrossChrs($chrValues);
    my $chrPloidies = ApiCommonData::Load::CalculationsForCNVs::getChrPloidies($chrMedians, $allChrMedian, $ploidy);
    return $chrPloidies;
}

# get parameter values
my $outputDir;
my $fpkm;
my $ploidy = 2;
my $sampleName;

&GetOptions("outputDir|o=s" => \$outputDir,
            "fpkmFile|f=s" => \$fpkm,
            "ploidy|p=i" => \$ploidy,
            "sampleName|s=s" => \$sampleName);

&usage() unless ($outputDir && $fpkm && $sampleName);


die "File of FPKM values $fpkm not found\n" unless (-e $fpkm); 

my $chrPloidies = calculateChrPloidies ($fpkm, $ploidy);

open (OUT, ">$outputDir/$sampleName\_Ploidy.txt") or die "Cannot open $outputDir/$sampleName\_Ploidy.tsv for writing\n$!\n";
printf OUT "Id_ref\tint_value\n";
foreach my $chr (keys %{$chrPloidies}) {
    printf OUT "%s\t%d\n", $chr, $chrPloidies->{$chr};
}
close OUT;

sub usage {
    print STDERR "calculatePloidy --outputDir=s <dir to write output> --fpkm File=s <full path to genes.fpkm_tracking file generated by Cufflinks> --sampleName=s <sampleName used to name output files> [--ploidy=i <base ploidy> (expected ploidy for the majority of chromosomes - default is 2)]\n";
    exit;
}
exit;
