#!@perl@
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | unreviewed
die 'This file has broken or unreviewed GUS4_STATUS rules.  Please remove this line when all are fixed or absent';
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^

##modify defline of orffinder output
##input is the gff file of sequences such as
##2570384.c000128966.Contig1      orfFinder       ORF     2560    2802    .       +       .       locus_tag "2570384.c000128966.Con
##tig1-1-2560-2802"  ; translation NYNILNFFFFFFVTIICYLYYNSRNLYIIHLFVVQTHLVFVIFVNLFIIHVRKKIKFVFTCFCFVYCYTLHLHIYIYKHKL
##the output would be
##>Pg|2570384.c000128966.Contig1-1-2560-2802|computed|PlasmoDB|length=54


use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use CBIL::Bio::SequenceUtils;

my ($verbose,$outFile,$inFile,$spAbrev,$dbName);
&GetOptions("verbose!"=> \$verbose,
            "outFile=s" => \$outFile,"inFile=s" => \$inFile, 
            "speciesAbreviation=s" => \$spAbrev,
            "dbName=s" => \$dbName);

if(!$inFile || !$outFile || !$spAbrev || !$dbName){
	die "usage: modifyOrfFileDefline --outFile --inFile --speciesAbreviation --verbose  --dbName \n";
}

open(IN, $inFile);

open(OUT,">$outFile");

while(<IN>) {
  chomp;
  my @arr = split(/\t/,$_);
  &printSequence(\@arr);
}

sub printSequence{
  my ($arr) = @_;
  my($name,$seq);
  if($arr->[8] =~/locus_tag\s"(\S+)"/){$name = $1;}
  if($arr->[8]=~ /translation\s(\S+)$/){$seq = $1;}
  my $len = length($seq);

  my $defline = ">${name}|computed|${dbName}|length=$len\n";

  print OUT $defline . CBIL::Bio::SequenceUtils::breakSequence($seq,60);
}

