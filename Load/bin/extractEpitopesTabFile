#!/usr/bin/perl

use strict;
use DBI;
use lib "$ENV{GUS_HOME}/lib/perl";
use Bio::SeqFeature::Gene::Exon;
use CBIL::Util::PropertySet;
use Getopt::Long;

#----------------Get UID and PWD/ database handle---------------

my ($verbose,$outputFile);

&GetOptions("verbose!" => \$verbose,
            "outputFile=s" => \$outputFile,
	    );


my $gusConfigFile = "$ENV{GUS_HOME}/config/gus.config";

my @properties = ();
my $gusconfig = CBIL::Util::PropertySet->new($gusConfigFile, \@properties, 1);

my $u = $gusconfig->{props}->{databaseLogin};
my $pw = $gusconfig->{props}->{databasePassword};
my $dsn = $gusconfig->{props}->{dbiDsn};

my $dbh = DBI->connect($dsn, $u, $pw) ||  die "Couldn't connect to database: " . DBI->errstr;
$dbh->{RaiseError} = 1;
$dbh->{AutoCommit} = 0;

my $sql = "
select s.sequence, s.description
from dots.aasequence s, sres.sequenceontology o
where o.term_name = 'epitope'
and s.sequence_ontology_id = o.sequence_ontology_id;
";

my $sth = $dbh->prepare($sql) || die "Couldn't prepare the SQL statement: " . $dbh->errstr;
$sth->execute() ||  die "Couldn't execute statement: " . $sth->errstr;

open(OUT, ">$outputFile") || die "Can't open output file '$outputFile'\n";

# this is the same format as printed in iedbSimplifyTabFile
while (my ($seq, $description ) = $sth->fetchrow_array()) {
  my ($iedbId, $epiName, $strain, $accession) = split(/|/,$description);
  print OUT "$accession\t$iedbId\t$strain\t$seq\t$epiName\n" if $seq;
}
