#!/usr/bin/perl
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";

use Getopt::Long;
use GUS::Supported::GusConfig;
use GUS::ObjRelP::DbiDatabase;

my ($gusConfigFile,$extDbSpec,$outputFile,$verbose);
&GetOptions("gusConfigFile=s" => \$gusConfigFile,
            "extDbSpec=s" => \$extDbSpec,
            "verbose!" => \$verbose,
            "outputFile=s" => \$outputFile);


print STDERR "Establishing dbi login\n";

$gusConfigFile = $ENV{GUS_HOME} . "/config/gus.config";

my $gusconfig = GUS::Supported::GusConfig->new($gusConfigFile);

my $db = GUS::ObjRelP::DbiDatabase->new($gusconfig->getDbiDsn(),
                                        $gusconfig->getDatabaseLogin(),
                                        $gusconfig->getDatabasePassword(),
                                        $verbose,0,1,
                                        $gusconfig->getCoreSchemaName());

my $dbh = $db->getQueryHandle(0);

my $extDbRlsId = getDbRlsId($extDbSpec);

my $sql = "select feature_source_id, sequence_source_id, start_min from apidb.featurelocation where feature_type = 'ArrayElementFeature' and external_database_release_id=$extDbRlsId";

my $stmt1 = $dbh->prepareAndExecute($sql);

open(FILE, "> $outputFile") or die "Cannot open file for writing:  $!";

while(my ($feature_source_id,$sequence_source_id,$start_min) = $stmt1->fetchrow_array()) {
    print FILE "$feature_source_id\t$sequence_source_id\_$start_min\n";
}

close FILE;

sub getDbRlsId {

  my ($extDbRlsSpec) = @_;

  my ($extDbName, $extDbRlsVer) = &getExtDbInfo($extDbRlsSpec);

  my $stmt = $dbh->prepare("select dbr.external_database_release_id from sres.externaldatabaserelease dbr,sres.externaldatabase db where db.name = ? and db.external_database_id = dbr.external_database_id and dbr.version = ?");

  $stmt->execute($extDbName,$extDbRlsVer);

  my ($extDbRlsId) = $stmt->fetchrow_array();

  return $extDbRlsId;
}

sub getExtDbInfo {
  my ($extDbRlsSpec) = @_;
  if ($extDbRlsSpec =~ /(.+)\|(.+)/) {
    my $extDbName = $1;
    my $extDbRlsVer = $2;
    return ($extDbName, $extDbRlsVer);
  } else {
    die("Database specifier '$extDbRlsSpec' is not in 'name|version' format");
  }
}



