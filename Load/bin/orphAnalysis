#!@perl@
use strict;

use lib "$ENV{GUS_HOME}/lib/perl";
use File::Basename;
use ApiCommonData::Load::Steps;
use ApiCommonData::Load::MakeTaskDirs;

my $propertiesFile = shift(@ARGV);
my $optionalArgs = \@ARGV;


my ($mgr, $projectDir, $release, $allSpecies)
  = &initOrphAnalysis($propertiesFile, $optionalArgs);    # add this method to steps

my $dataDir = $mgr->{dataDir};

##############################################################################
########   The Pipeline                                               ########
##############################################################################



&makeGenomicDownloadFile($mgr, "Tannulata", "TannulataGenomic", "TannulataGenome", "2005", "ExternalNASequence","psu","","EuPathDB");

&makeGenomicDownloadFile($mgr, "Tparva", "TparvaGenomic", "TparvaGenome", "2005", "ExternalNASequence","psu","","EuPathDB");

&xdformatDownloadFileForBlastSite($mgr,"Tparva","TparvaGenomic_EuPathDB-2.1.fasta","TparvaGenomics","-n -t release-2.1/TparvaGenomics","EuPathDB");

&xdformatDownloadFileForBlastSite($mgr,"Tannulata","TannulataGenomic_EuPathDB-2.1.fasta","TannulataGenomics","-n -t release-2.1/TannulataGenomics","EuPathDB");

&makeAllESTDownloadFile($mgr, "", "EST", "EuPathDB"); # may want to switch to using makeESTDownloadFile, especially if separating Apicomplexa and Kinetoplastid

&xdformatDownloadFileForBlastSite($mgr,"","EST_EuPathDB-2.1.fasta","OtherEST","-n -t release-2.1/OtherEST","EuPathDB"); 

$mgr->goodbye("Pipeline complete!\n");
