#!/usr/bin/perl -w
#
# Based on sample code from NCBI, author:  Oleg Khovayko
# Adapted for EupathDB by Haiming Wang and Steve Fischer
#

use LWP::Simple;
use strict;

$| = 1;

my ($ncbiTaxIdList, $outputFile) = @ARGV;

&usage unless $ncbiTaxIdList && $outputFile;

my @ncbiTaxIds = split(/,/, $ncbiTaxIdList);   # sample : 5810

die "Output file '$outputFile' already exists\n" if -e $outputFile;

my $db      = "PopSet";
my $utils = "http://www.ncbi.nlm.nih.gov/entrez/eutils";
my $esearch = "$utils/esearch.fcgi?db=$db&retmax=1&usehistory=y&term=";

my @queries = map {"(((txid${_}[Organism:exp]) AND (isolate)) NOT (genome))"} @ncbiTaxIds;
my $query = join("OR", @queries);

my $esearch_result = get("$esearch$query");
die "Failed running esearch query" unless defined $esearch_result;

$esearch_result =~ m|<Count>(\d+)</Count>.*<QueryKey>(\d+)</QueryKey>.*<WebEnv>(\S+)</WebEnv>|s || die "Can't parse results from esearch\n";

my $Count    = $1;
my $QueryKey = $2;
my $WebEnv   = $3;

my $retstart;
my $retmax=3;

my $seqCount;

for ($retstart = 0; $retstart < $Count; $retstart += $retmax) {
  my $efetch = "$utils/efetch.fcgi?" .
    "rettype=Summary&retmode=text&retstart=$retstart&retmax=$retmax&" .
      "db=$db&query_key=$QueryKey&WebEnv=$WebEnv";

  # H.W.
  #print "\nEF_QUERY=$efetch\n";

  my $efetch_result = get($efetch);
  die "Failed getting efetch result\n" unless $efetch_result;

  # H.W.
  #  print "---------\nEFETCH RESULT(".
  #         ($retstart + 1) . ".." . ($retstart + $retmax) . "): ".
  #        "[$efetch_result]\n-----PRESS ENTER!!!-------\n";

  my $summary = $efetch_result;

  my @gi = $summary =~ /accession "(\w+)"/g;
  foreach (@gi) {
    print STDERR ".";
    $seqCount++;
    $_ =~ s/(\[|\])//g;
    my $gb_result = get("$utils/efetch.fcgi?db=$db&id=$_&rettype=gb");
    die "Failed getting gb result\n" unless $gb_result;
    open(FILE, ">>$outputFile") || die "Could not open output file '$outputFile'\n";
    print FILE "$gb_result";
    close(FILE);
  }

}
print STDERR "\nFetched $seqCount isolate records\n";


sub usage {
  print STDERR "

Use NCBI's eutils to fetch isolate sequences from genbank.  All sequences
are concatenated into a single genbank file.

usage: getIsolatesFromGenbank taxon_list output_file

where:
  taxon_list:  comma delimited list of ncbi taxon ids

(Prints a . to STDERR for each sequence it gets.

";

  exit(1);

}
