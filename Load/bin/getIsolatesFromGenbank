#!/usr/bin/perl -w
#
# Based on sample code from NCBI, author:  Oleg Khovayko
# Adapted for EupathDB by Haiming Wang and Steve Fischer
#

use LWP::Simple;
use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use DBI;
use DBD::Oracle;
use CBIL::Util::PropertySet;


$| = 1;

my $PRINT_URLS = 0;

my ($speciesNcbiTaxonId, $outputFile) = @ARGV;

&usage unless $speciesNcbiTaxonId && $outputFile;

die "Output file '$outputFile' already exists\n" if -e $outputFile;


my $gusConfigFile = "$ENV{GUS_HOME}/config/gus.config";
my @properties = ();
my $gusconfig = CBIL::Util::PropertySet->new($gusConfigFile, \@properties, 1);
my $u = $gusconfig->{props}->{databaseLogin};
my $pw = $gusconfig->{props}->{databasePassword};
my $dsn = $gusconfig->{props}->{dbiDsn};
my $dbh = DBI->connect($dsn, $u, $pw) or die DBI::errstr;
$dbh->{RaiseError} = 1;

my $sql = <<SQL;
  select ncbi_tax_id
  from SRes.Taxon
  start with ncbi_tax_id in ($speciesNcbiTaxonId)
  connect by prior taxon_id = parent_id
SQL

my $stmt = $dbh->prepare($sql);
$stmt->execute();

my %ncbiTaxIds;
while(my($currentTaxon) = $stmt->fetchrow_array()){
  $ncbiTaxIds{$currentTaxon} = 1;
  print STDERR "including NCBI taxon id $currentTaxon\n";
}

my $db      = "PopSet";
my $utils = "http://www.ncbi.nlm.nih.gov/entrez/eutils";
my $esearch = "$utils/esearch.fcgi?db=$db&retmax=1&usehistory=y&term=";

my @queries = map {"(((txid${_}[Organism:exp]) AND (isolate)) NOT (genome))"} keys(%ncbiTaxIds);
my $query = join("OR", @queries);

# find all studies that match our query
my $esearch_result = get("$esearch$query");
print STDERR "$esearch$query\n\n" if $PRINT_URLS;

die "Failed running esearch query" unless defined $esearch_result;

$esearch_result =~ m|<Count>(\d+)</Count>.*<QueryKey>(\d+)</QueryKey>.*<WebEnv>(\S+)</WebEnv>|s || die "Can't parse results from esearch\n";

# We matched $Count studies.  We can get them using $QueryKey and $WebEnv
# as IDs for our query result
my $Count    = $1;
my $QueryKey = $2;
my $WebEnv   = $3;

my $retstart;
my $retmax=3;

my $seqCount = 0;

# iterate through the studies
# we are given all studies that have any isolates matching our taxa
# but not all isolates in the study do.  filter them by db_xref=taxon
for ($retstart = 0; $retstart < $Count; $retstart += $retmax) {
  my $efetch = "$utils/efetch.fcgi?" .
    "rettype=Summary&retmode=text&retstart=$retstart&retmax=$retmax&" .
      "db=$db&query_key=$QueryKey&WebEnv=$WebEnv";

  my $efetch_result = get($efetch);
  print STDERR "$efetch\n\n" if $PRINT_URLS;

  die "Failed getting efetch result\n" unless $efetch_result;

  my $summary = $efetch_result;

  my @gi = $summary =~ /accession "(\w+)"/g;
  foreach (@gi) {
    print STDERR ".";
    $seqCount++;
    $_ =~ s/(\[|\])//g;
    my $gb_result = get("$utils/efetch.fcgi?db=$db&id=$_&rettype=gb");
    $gb_result =~ /db_xref="taxon:(\d+)"/;
    next unless $ncbiTaxIds{$1};
    die "Failed getting gb result\n" unless $gb_result;

    open(FILE, ">>$outputFile") || die "Could not open output file '$outputFile'\n";
    print FILE "$gb_result";
    close(FILE);
  }

}
print STDERR "\nFetched $seqCount isolate records\n";


sub usage {
  print STDERR "

Use NCBI's eutils to fetch isolate sequences from genbank.  All sequences
are concatenated into a single genbank file.  Gets isolates for all NCBI
taxon IDs that are children of the provided speciesNcbiTaxonId

usage: getIsolatesFromGenbank speciesNcbiTaxonId outputFile

(Prints a . to STDERR for each sequence it gets.)

";

  exit(1);

}
