#!/usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use CBIL::Util::PropertySet;
use DBI;

# run ortholog-groups workflow on representatives
system("workflow -h /eupath/data/EuPathDB/devWorkflows/OrthoMCL/planBReps -r");

# for each non-representative protein, find its best match among representative proteins

# populate ortholog groups for representatives

# for each non-representative organism, assign proteins to groups by best (over-threshold) similarity to a representative protein

# create SimilarSequences_res table for "residual" proteins, which didn't find a group to join

# run ortholog-groups workflow on residuals
system("workflow -h /eupath/data/EuPathDB/devWorkflows/OrthoMCL/planBResiduals -r");

sub getDbHandle {

  my $gusConfigFile = $ENV{GUS_HOME} . "/config/gus.config";
  my @properties = ();
  my $gusconfig = CBIL::Util::PropertySet->new($gusConfigFile, \@properties, 1);

  my $u = $gusconfig->{props}->{databaseLogin};
  my $pw = $gusconfig->{props}->{databasePassword};
  my $dsn = $gusconfig->{props}->{dbiDsn};

  my $dbh = DBI->connect($dsn, $u, $pw) or die DBI::errstr;
  $dbh->{RaiseError} = 1;
  $dbh->{AutoCommit} = 0;

  return $dbh;
}

sub findRepresentation {

  my $dbh = getDbHandle();

  my $repsDir = "/eupath/data/EuPathDB/devWorkflows/OrthoMCL/testdata/representatives";
  chdir $repsDir;
  my $representativeTaxa = join(', ', map("'$_'", <*>));

  my $pvalueExponentCutoff = -5;

  # prepare the query that, given a protein, finds its best match within a representative proteome
  my $repStmt = $dbh->prepare(<<SQL);
    select subject_id
    from apidb.SimilarSequences\@orth500n
    where query_id = ?
      and subject_taxon_id in ($representativeTaxa)
      and evalue_exp <= $pvalueExponentCutoff
    order by evalue_exp, evalue_mant desc
SQL

  # prepare the statement that inserts a (constituent, representative) pair into OrthoRepresentation
  my $insertStmt = $dbh->prepare(<<SQL);
    insert into apidb.OrthoRepresentation (constituent, representative) values (?, ?)
SQL

  # iterate through non-representative proteins
  my $nonrepStmt = $dbh->prepare(<<SQL);
    select distinct query_id
    from apidb.SimilarSequences\@orth500n
    where query_taxon_id not in ($representativeTaxa)
SQL

  $nonrepStmt->execute();
  while (my($constituent) = $nonrepStmt->fetchrow_array()) {

    # find this protein's representative
    $repStmt->execute($constituent);
    my ($representative) = $repStmt->fetchrow_array();
    $repStmt->finish();

    $insertStmt->execute($constituent, $representative);
  }

  $nonrepStmt->finish();
}
