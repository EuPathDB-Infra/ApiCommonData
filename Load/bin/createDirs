#!/usr/bin/perl
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | unreviewed
die 'This file has broken or unreviewed GUS4_STATUS rules.  Please remove this line when all are fixed or absent';
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^
use strict;

use Getopt::Long;

my ($projectDir,$release,$verbose);
&GetOptions("verbose!" => \$verbose,
	    "projectDir=s" => \$projectDir,
            "release=s" => \$release);

die "Must provide a projectDir and release\n" unless ($projectDir && $release);

print "Creating subdirs in $projectDir/$release\n" if $verbose;

die "$projectDir doesn't exist\n"  unless (-w $projectDir);

mkdir("$projectDir/$release", 0777) || print $!;

my @subDirs = ('seqfiles', 'misc', 'downloadSite', 'blastSite',
		     'sage', 'analysis', 'similarity', 'assembly', 'cluster', 'microarray', 'logs', 'signalp'
);

foreach my $dir (@subDirs) {
	mkdir("$projectDir/$release/$dir", 0777) || print $!;
}

1;
