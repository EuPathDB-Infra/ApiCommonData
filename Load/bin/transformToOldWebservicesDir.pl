#!/usr/bin/perl

##to be used to transform from the directory structure generated by workflow to old webservices structure
## both sourceDir and targetDir must be full paths to these directories

use strict;
use Getopt::Long;

my($targetDir,$sourceDir,$projectName);

&GetOptions("targetDir|t=s" => \$targetDir, 
            "sourceDir|s=s" => \$sourceDir,
            "projectName=s" => \$projectDir
            );

die "you must use fully qualified path for --targetDir and --sourceDir --projectName\n" unless ($sourceDir =~ /^\// && $targetDir =~ /^\// && $projectName =~ /DB/);
die "sourceDir $sourceDir does not exist\n" unless -d "$sourceDir";
mkdir("$targetDir") unless -e "$targetDir";
mkdir("$targetDir/blast") unless -e "$targetDir/blast";
mkdir("$targetDir/motif") unless -e "$targetDir/motif";

chdir($sourceDir);

my @orgs = glob("*");

foreach my $org (@orgs){
  if($org eq 'mercator'){
    print STDERR "Moving mercator directory to $targetDir\n";
    system("mv $org $targetDir");
    next;
  }
  chdir($org);
  print STDERR "Organism = $org\n";
  my @wsdir = glob("*");
  foreach my $dir (@wsdir){
    print STDERR "dir = $dir\n";
    chdir($dir);
    my @files = glob("*");
    foreach my $file (@files){
      my $fn;
#      if($dir eq 'blast'){
        $fn = "${org}${file}_$projectName";
#        print STDERR "$fn\n";
#      }elsif($dir eq 'motif'){
#        $fn = $file;
#        $fn =~ s/^\w+-CURRENT_//;
#      }else{
#        print STDERR "ERROR: unrecognized diretory $dir\n";
#      }
      my $cmd ="cp $file $targetDir/$dir/$fn";
      print STDERR "$cmd\n";
      system($cmd);
    }
    chdir("$sourceDir/$org");
  } 
  chdir($sourceDir);
}
  
