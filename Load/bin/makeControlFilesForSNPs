#!/usr/bin/perl
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | absent
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^

use strict;

use Getopt::Long;

my ($seqVarCtl, $snpCtl, $help);

&GetOptions("sequence_variation_ctl=s"=> \$seqVarCtl,
                         "snp_ctl=s"=> \$snpCtl,
                         "h|help" => \$help,
                        );            

if($help) {
          &usage();
}

unless($seqVarCtl && $snpCtl) {
         &usage();
}

sub usage {
    print STDERR "makeControlFilesForSNPs --sequence_variation_ctl=s --snp_ctl=s\n";
    exit(0);
}

open(VAR, ">$seqVarCtl") or die "Cannot open file $seqVarCtl for writing: $!";
open(SNP, ">$snpCtl") or die "Cannot open file $snpCtl for writing: $!";

  my $vString = <<VSTRING;
     LOAD DATA
     INFILE *
     INTO TABLE apidb.sequencevariation
     APPEND
     FIELDS TERMINATED BY X'9'
     TRAILING NULLCOLS
     (sequence_source_id FILLER,
      location,
      strain,
      allele,
      coverage,
      read_percent,
      quality,
      p_value,
      snp_source_id FILLER,
      external_database_release_id,
      matches_reference,
      product,
      position_in_cds FILLER,
      position_in_protein FILLER,
      na_sequence_id,
      ref_na_sequence_id,
      snp_ext_db_rls_id,
      protocol_app_node_id,
      positions_in_cds FILLER,
      positions_in_protein FILLER,
      products_full,
      diff_from_adjacent_snp,
      sequence_variation_id SEQUENCE(MAX,1), 
      modification_date "SYSDATE"
     )
VSTRING


my $sString = <<SSTRING;
     LOAD DATA
     INFILE *
     INTO TABLE apidb.snp
     APPEND
     FIELDS TERMINATED BY X'9'
     TRAILING NULLCOLS
     (gene_na_feature_id,
              source_id,
              na_sequence_id,
              location,
              reference_strain,
              reference_na,
              reference_aa,
              position_in_cds,
              position_in_protein,
              external_database_release_id,
              has_nonsynonymous_allele,
              major_allele,
              minor_allele,
              major_allele_count,
              minor_allele_count,
              major_product,
              minor_product,
              distinct_strain_count,
              distinct_allele_count,
              is_coding,
              positions_in_cds_full,
              positions_in_protein_full,
              reference_aa_full
              snp_id SEQUENCE(MAX,1), 
              modification_date "SYSDATE"
     )
SSTRING


print VAR $vString;
print SNP $sString;

close VAR;
close SNP;
