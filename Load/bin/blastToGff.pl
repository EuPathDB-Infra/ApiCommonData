#! /usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;


my ($verbose, $blastInput, $outputFile, $gusConfigFile);

&GetOptions("verbose!"=> \$verbose,
            "blastInput=s" => \$blastInput,
            "outputFile=s" => \$outputFile,
            "gusConfigFile=s" => \$gusConfigFile);

die "USAGE: $0 --blastInput --outputFile {--verbose} {--gusConfigFile <file>}\n"
  if (!$blastInput|| !$outputFile);
$| = 1;

print STDERR "Establishing dbi login\n" if $verbose;

##############################################################
## Parses the output generated by blastSimilarity:
## >CB-D901D05 (1 subjects)
##  Sum: Pf3D7_05:2511:2.3e-202:497789:498292:1:504:1:504:503:503:0::504:504:100
##   HSP1: Pf3D7_05:503:503:504:2511:2.3e-202:497789:498292:1:504:0:
##
## To a gff format that can be used by ISF
## Pf3D7_05     PiggyBac_Clones         transposable_element_insertion_site   497789  498292  .       +       .       ID=CB-D901D05
##
## see Header below for more info
##############################################################


# -----------------------------------
# Main program
# -----------------------------------

$| = 1;

open (OUT, ">$outputFile") || die "Can't open $outputFile for writing\n";

if ($blastInput =~ /gz$/) {
  open(IN, "gunzip -c $blastInput |") || die "Can't gunzip and read $blastInput\n";
} else {
  open(IN,"$blastInput") || die "Can't gunzip and read $blastInput\n";
}

my $queryId;
my @lines = ();
my $total = 0;
my $date;

while(<IN>){
  chomp;
  if ($_ =~ />(\S+)/ && $total == 0) {
    $queryId  = $1;
    $total++;
  }
  elsif ($_ =~ />(\S+)/ && @lines >= 1) {
    foreach my $line (@lines) {
      print OUT "$line";
    }
    $date = `date`; chomp($date);

    print STDERR "$date: $total query ids processed and printed\n" if ($total > 1 && $total%1000 == 0 and $verbose); 

    $queryId = $1;

    @lines = ();

    $total++;
  }
  elsif ($_ =~ /Sum/) {
    my @arr = split(/\:/,$_);

    $arr[1]=~ s/^\s+//;

    my $strand = $arr[12] ? '-' : '+';

    my $str = "$arr[1]\tPiggyBac_Clones\ttransposable_element_insertion_site\t$arr[4]\t$arr[5]\t.\t$strand\t.\tID=$queryId\n";

    my @arr = split(/\t/,$str);

    print STDERR "Missing attributes in $str" if (@arr != 9);

    push(@lines,$str);
  }
  else {
    next;
  }
}

foreach my $line (@lines) {
  print OUT "$line";
}

my $date = `date`; chomp($date);

print STDERR "$date: $total total query ids processed and printed" if $verbose;

close (OUT);
close(IN);

1;


