#!/usr/bin/perl
#vvvvvvvvvvvvvvvvvvvvvvvvv GUS4_STATUS vvvvvvvvvvvvvvvvvvvvvvvvv
  # GUS4_STATUS | SRes.OntologyTerm              | auto   | absent
  # GUS4_STATUS | SRes.SequenceOntology          | auto   | absent
  # GUS4_STATUS | Study.OntologyEntry            | auto   | absent
  # GUS4_STATUS | SRes.GOTerm                    | auto   | absent
  # GUS4_STATUS | Dots.RNAFeatureExon            | auto   | absent
  # GUS4_STATUS | RAD.SageTag                    | auto   | absent
  # GUS4_STATUS | RAD.Analysis                   | auto   | absent
  # GUS4_STATUS | ApiDB.Profile                  | auto   | absent
  # GUS4_STATUS | Study.Study                    | auto   | absent
  # GUS4_STATUS | Dots.Isolate                   | auto   | absent
  # GUS4_STATUS | DeprecatedTables               | auto   | absent
  # GUS4_STATUS | Pathway                        | auto   | absent
  # GUS4_STATUS | DoTS.SequenceVariation         | auto   | absent
  # GUS4_STATUS | RNASeq Junctions               | auto   | absent
  # GUS4_STATUS | Simple Rename                  | auto   | absent
  # GUS4_STATUS | ApiDB Tuning Gene              | auto   | absent
  # GUS4_STATUS | Rethink                        | auto   | absent
  # GUS4_STATUS | dots.gene                      | manual | unreviewed
die 'This file has broken or unreviewed GUS4_STATUS rules.  Please remove this line when all are fixed or absent';
#^^^^^^^^^^^^^^^^^^^^^^^^^ End GUS4_STATUS ^^^^^^^^^^^^^^^^^^^^

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Data::Dumper;
use Getopt::Long;

my ($workflowHomeDir,$regexList);
&GetOptions("workflowHomeDir=s" => \$workflowHomeDir,
            "regexList=s" => \$regexList);
usage() unless ($workflowHomeDir);
usage() unless(-e $workflowHomeDir || $regexList ne '');

my @regex=split(/,/,$regexList);
die "\nNo regex list provided... nothing to undo!\n\n" unless scalar(@regex);
foreach (@regex){
   s/\s+$//g; # lose trailing spaces
  /^\S+$/ || die "invalid regex: '$_'\n"; 
   my $cmd="workflow -h $workflowHomeDir -s1 DONE| grep $_| workflowUndoMgr -h $workflowHomeDir -r";
   print STDERR "Running workflow undoMgr...... \n";
   print STDERR "$cmd\n";
   system ($cmd);
   my $status = $? >>8;
   if ($status) {
    die "Error.  Failed $cmd with status '$status': $!\n\n
         Check failures in log file: $workflowHomeDir/logs/controller.log\n\n
         Fix errors and restart dataRefreshByUndoMgr\n\n";
   }else {
    print STDERR "$cmd is Done\n\n";
  }
}

sub usage {
  print "
Run a series of undos.  Takes a list of commar delimited regex of steps.  Each provided
step name will be undone.

Usage: dataRefreshByUndoMgr -workflowHomeDir workflow_home_dir 
                -regexList <dbxref_gene2PubmedFromNcbi,dbxref_gene2Entrez,dbxref_gene2Uniprot,dbxref_gene2ApiLoc,
                            referenceStrain-epitope_sequences_IEDB,referenceStrain-dbEST,familyRepresentative-isolatesGenbank>

";

  exit(1);
}
